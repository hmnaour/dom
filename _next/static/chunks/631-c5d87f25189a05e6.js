(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[631],{3321:function(e,t,n){"use strict";n.d(t,{Z:function(){return N}});var r=n(3366),s=n(7462),a=n(7294),o=n(6010),i=n(7925),u=n(4780),l=n(1796),c=n(1496),p=n(7623),h=n(7739),d=n(8216),f=n(7621);function m(e){return(0,f.Z)("MuiButton",e)}var g=(0,n(1588).Z)("MuiButton",["root","text","textInherit","textPrimary","textSecondary","outlined","outlinedInherit","outlinedPrimary","outlinedSecondary","contained","containedInherit","containedPrimary","containedSecondary","disableElevation","focusVisible","disabled","colorInherit","textSizeSmall","textSizeMedium","textSizeLarge","outlinedSizeSmall","outlinedSizeMedium","outlinedSizeLarge","containedSizeSmall","containedSizeMedium","containedSizeLarge","sizeMedium","sizeSmall","sizeLarge","fullWidth","startIcon","endIcon","iconSizeSmall","iconSizeMedium","iconSizeLarge"]);var y=a.createContext({}),b=n(5893);const x=["children","color","component","className","disabled","disableElevation","disableFocusRipple","endIcon","focusVisibleClassName","fullWidth","size","startIcon","type","variant"],w=e=>(0,s.Z)({},"small"===e.size&&{"& > *:nth-of-type(1)":{fontSize:18}},"medium"===e.size&&{"& > *:nth-of-type(1)":{fontSize:20}},"large"===e.size&&{"& > *:nth-of-type(1)":{fontSize:22}}),v=(0,c.ZP)(h.Z,{shouldForwardProp:e=>(0,c.FO)(e)||"classes"===e,name:"MuiButton",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,t[n.variant],t[`${n.variant}${(0,d.Z)(n.color)}`],t[`size${(0,d.Z)(n.size)}`],t[`${n.variant}Size${(0,d.Z)(n.size)}`],"inherit"===n.color&&t.colorInherit,n.disableElevation&&t.disableElevation,n.fullWidth&&t.fullWidth]}})((({theme:e,ownerState:t})=>{var n,r;return(0,s.Z)({},e.typography.button,{minWidth:64,padding:"6px 16px",borderRadius:(e.vars||e).shape.borderRadius,transition:e.transitions.create(["background-color","box-shadow","border-color","color"],{duration:e.transitions.duration.short}),"&:hover":(0,s.Z)({textDecoration:"none",backgroundColor:e.vars?`rgba(${e.vars.palette.text.primaryChannel} / ${e.vars.palette.action.hoverOpacity})`:(0,l.Fq)(e.palette.text.primary,e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}},"text"===t.variant&&"inherit"!==t.color&&{backgroundColor:e.vars?`rgba(${e.vars.palette[t.color].mainChannel} / ${e.vars.palette.action.hoverOpacity})`:(0,l.Fq)(e.palette[t.color].main,e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}},"outlined"===t.variant&&"inherit"!==t.color&&{border:`1px solid ${(e.vars||e).palette[t.color].main}`,backgroundColor:e.vars?`rgba(${e.vars.palette[t.color].mainChannel} / ${e.vars.palette.action.hoverOpacity})`:(0,l.Fq)(e.palette[t.color].main,e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}},"contained"===t.variant&&{backgroundColor:(e.vars||e).palette.grey.A100,boxShadow:(e.vars||e).shadows[4],"@media (hover: none)":{boxShadow:(e.vars||e).shadows[2],backgroundColor:(e.vars||e).palette.grey[300]}},"contained"===t.variant&&"inherit"!==t.color&&{backgroundColor:(e.vars||e).palette[t.color].dark,"@media (hover: none)":{backgroundColor:(e.vars||e).palette[t.color].main}}),"&:active":(0,s.Z)({},"contained"===t.variant&&{boxShadow:(e.vars||e).shadows[8]}),[`&.${g.focusVisible}`]:(0,s.Z)({},"contained"===t.variant&&{boxShadow:(e.vars||e).shadows[6]}),[`&.${g.disabled}`]:(0,s.Z)({color:(e.vars||e).palette.action.disabled},"outlined"===t.variant&&{border:`1px solid ${(e.vars||e).palette.action.disabledBackground}`},"outlined"===t.variant&&"secondary"===t.color&&{border:`1px solid ${(e.vars||e).palette.action.disabled}`},"contained"===t.variant&&{color:(e.vars||e).palette.action.disabled,boxShadow:(e.vars||e).shadows[0],backgroundColor:(e.vars||e).palette.action.disabledBackground})},"text"===t.variant&&{padding:"6px 8px"},"text"===t.variant&&"inherit"!==t.color&&{color:(e.vars||e).palette[t.color].main},"outlined"===t.variant&&{padding:"5px 15px",border:"1px solid currentColor"},"outlined"===t.variant&&"inherit"!==t.color&&{color:(e.vars||e).palette[t.color].main,border:e.vars?`1px solid rgba(${e.vars.palette[t.color].mainChannel} / 0.5)`:`1px solid ${(0,l.Fq)(e.palette[t.color].main,.5)}`},"contained"===t.variant&&{color:e.vars?e.vars.palette.text.primary:null==(n=(r=e.palette).getContrastText)?void 0:n.call(r,e.palette.grey[300]),backgroundColor:(e.vars||e).palette.grey[300],boxShadow:(e.vars||e).shadows[2]},"contained"===t.variant&&"inherit"!==t.color&&{color:(e.vars||e).palette[t.color].contrastText,backgroundColor:(e.vars||e).palette[t.color].main},"inherit"===t.color&&{color:"inherit",borderColor:"currentColor"},"small"===t.size&&"text"===t.variant&&{padding:"4px 5px",fontSize:e.typography.pxToRem(13)},"large"===t.size&&"text"===t.variant&&{padding:"8px 11px",fontSize:e.typography.pxToRem(15)},"small"===t.size&&"outlined"===t.variant&&{padding:"3px 9px",fontSize:e.typography.pxToRem(13)},"large"===t.size&&"outlined"===t.variant&&{padding:"7px 21px",fontSize:e.typography.pxToRem(15)},"small"===t.size&&"contained"===t.variant&&{padding:"4px 10px",fontSize:e.typography.pxToRem(13)},"large"===t.size&&"contained"===t.variant&&{padding:"8px 22px",fontSize:e.typography.pxToRem(15)},t.fullWidth&&{width:"100%"})}),(({ownerState:e})=>e.disableElevation&&{boxShadow:"none","&:hover":{boxShadow:"none"},[`&.${g.focusVisible}`]:{boxShadow:"none"},"&:active":{boxShadow:"none"},[`&.${g.disabled}`]:{boxShadow:"none"}})),k=(0,c.ZP)("span",{name:"MuiButton",slot:"StartIcon",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.startIcon,t[`iconSize${(0,d.Z)(n.size)}`]]}})((({ownerState:e})=>(0,s.Z)({display:"inherit",marginRight:8,marginLeft:-4},"small"===e.size&&{marginLeft:-2},w(e)))),I=(0,c.ZP)("span",{name:"MuiButton",slot:"EndIcon",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.endIcon,t[`iconSize${(0,d.Z)(n.size)}`]]}})((({ownerState:e})=>(0,s.Z)({display:"inherit",marginRight:-4,marginLeft:8},"small"===e.size&&{marginRight:-2},w(e))));var N=a.forwardRef((function(e,t){const n=a.useContext(y),l=(0,i.Z)(n,e),c=(0,p.Z)({props:l,name:"MuiButton"}),{children:h,color:f="primary",component:g="button",className:w,disabled:N=!1,disableElevation:S=!1,disableFocusRipple:T=!1,endIcon:C,focusVisibleClassName:E,fullWidth:A=!1,size:$="medium",startIcon:D,type:_,variant:F="text"}=c,R=(0,r.Z)(c,x),O=(0,s.Z)({},c,{color:f,component:g,disabled:N,disableElevation:S,disableFocusRipple:T,fullWidth:A,size:$,type:_,variant:F}),M=(e=>{const{color:t,disableElevation:n,fullWidth:r,size:a,variant:o,classes:i}=e,l={root:["root",o,`${o}${(0,d.Z)(t)}`,`size${(0,d.Z)(a)}`,`${o}Size${(0,d.Z)(a)}`,"inherit"===t&&"colorInherit",n&&"disableElevation",r&&"fullWidth"],label:["label"],startIcon:["startIcon",`iconSize${(0,d.Z)(a)}`],endIcon:["endIcon",`iconSize${(0,d.Z)(a)}`]},c=(0,u.Z)(l,m,i);return(0,s.Z)({},i,c)})(O),B=D&&(0,b.jsx)(k,{className:M.startIcon,ownerState:O,children:D}),L=C&&(0,b.jsx)(I,{className:M.endIcon,ownerState:O,children:C});return(0,b.jsxs)(v,(0,s.Z)({ownerState:O,className:(0,o.Z)(w,n.className),component:g,disabled:N,focusRipple:!T,focusVisibleClassName:(0,o.Z)(M.focusVisible,E),ref:t,type:_},R,{classes:M,children:[B,h,L]}))}))},7579:function(e,t,n){"use strict";var r;n.d(t,{Z:function(){return i}});var s=n(7294);let a=0;const o=(r||(r=n.t(s,2))).useId;function i(e){if(void 0!==o){const t=o();return null!=e?e:t}return function(e){const[t,n]=s.useState(e),r=e||t;return s.useEffect((()=>{null==t&&(a+=1,n(`mui-${a}`))}),[t]),r}(e)}},2948:function(e,t,n){var r=n(2140),s=n(9980),a=n(1730),o=n(7405),i=n(4026),u=n(865),l=n(8721);l.alea=r,l.xor128=s,l.xorwow=a,l.xorshift7=o,l.xor4096=i,l.tychei=u,e.exports=l},2140:function(e,t,n){var r;!function(e,s,a){function o(e){var t=this,n=function(){var e=4022871197;return function(t){t=t.toString();for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)}}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new o(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.alea=u}(0,e=n.nmd(e),n.amdD)},865:function(e,t,n){var r;!function(e,s,a){function o(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new o(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.tychei=u}(0,e=n.nmd(e),n.amdD)},9980:function(e,t,n){var r;!function(e,s,a){function o(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new o(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xor128=u}(0,e=n.nmd(e),n.amdD)},4026:function(e,t,n){var r;!function(e,s,a){function o(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[a]=n^e,t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,s,a,o,i=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),s=0,a=-32;a<u;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(o=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(o=o+1640531527|0,s=0==(n=i[127&a]^=r+o)?s+1:0);for(s>=128&&(i[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=i[s+34&127],n=i[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,i[s]=r^n;e.w=o,e.X=i,e.i=s}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new o(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},7405:function(e,t,n){var r;!function(e,s,a){function o(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new o(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},1730:function(e,t,n){var r;!function(e,s,a){function o(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new o(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},8721:function(e,t,n){var r;!function(s,a){var o,i=this,u=256,l=a.pow(u,6),c=a.pow(2,52),p=2*c,h=255;function d(e,t,n){var r=[],h=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(s)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(u):(e=new Uint8Array(u),(i.crypto||i.msCrypto).getRandomValues(e)),b(e)}catch(r){var t=i.navigator,n=t&&t.plugins;return[+new Date,i,n,i.screen,b(s)]}}():e,3),r),d=new f(r),x=function(){for(var e=d.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=d.g(1);for(;e>=p;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|d.g(4)},x.quick=function(){return d.g(4)/4294967296},x.double=x,y(b(d.S),s),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,d),e.state=function(){return m(d,{})}),n?(a.random=e,t):e})(x,h,"global"in t?t.global:this==a,t.state)}function f(e){var t,n=e.length,r=this,s=0,a=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);s<u;)o[s]=s++;for(s=0;s<u;s++)o[s]=o[a=h&a+e[s%n]+(t=o[s])],o[a]=t;(r.g=function(e){for(var t,n=0,s=r.i,a=r.j,o=r.S;e--;)t=o[s=h&s+1],n=n*u+o[h&(o[s]=o[a=h&a+t])+(o[a]=t)];return r.i=s,r.j=a,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(g(e[n],t-1))}catch(a){}return r.length?r:"string"==s?e:e+"\0"}function y(e,t){for(var n,r=e+"",s=0;s<r.length;)t[h&s]=h&(n^=19*t[h&s])+r.charCodeAt(s++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(a.seedrandom=d,y(a.random(),s),e.exports){e.exports=d;try{o=n(914)}catch(x){}}else void 0===(r=function(){return d}.call(t,n,t,e))||(e.exports=r)}([],Math)},9610:function(e,t,n){"use strict";n.d(t,{A:function(){return s}});var r=n(9319);function s(){let e,t,n,s,a,o,i,u,l,c;return 2===(0,r.OBj)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",s="in",a="texture",o="outputColor",i="out vec4 outputColor;",u="\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",c="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",s="varying",a="texture2D",o="gl_FragColor",i="",u="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",c="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:s,texture2D:a,output:o,defineOutput:i,defineSpecialNaN:u,defineSpecialInf:l,defineRound:c}}},8110:function(e,t,n){"use strict";n.d(t,{Kn:function(){return a},RW:function(){return s},al:function(){return o},ku:function(){return i},nc:function(){return u},ye:function(){return l}});var r=n(9319);function s(e,t,n="index"){const s=r.D5U.computeStrides(t);return s.map(((t,r)=>`${`int ${e[r]} = ${n} / ${t}`}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${t}`:`index -= ${e[r]} * ${t}`};`)).join("")}function a(e,t,n="index"){const s=r.D5U.computeStrides(t);return s.map(((t,r)=>`${`int ${e[r]} = ${n} / outShapeStrides[${r}]`}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * outShapeStrides[${r}]`:`index -= ${e[r]} * outShapeStrides[${r}]`};`)).join("")}function o(e,t,n="index"){const r=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),s=new Array(n-1);s[n-2]=r[n-1];for(let a=n-3;a>=0;--a)s[a]=`(${s[a+1]} * ${r[a+1]})`;return s}(e.map(((e,t)=>t)),t);return r.map(((t,s)=>`${`int ${e[s]} = ${n} / ${r[s]}`}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${r[s]}`:`index -= ${e[s]} * ${r[s]}`};`)).join("")}function i(e){const t=r.D5U.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}function u(){return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n"}const l="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n"},8713:function(e,t,n){"use strict";n.d(t,{JL:function(){return r},Zu:function(){return s}});class r{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class s{refCount(e){return a("refCount")}incRef(e){return a("incRef")}timerAvailable(){return!0}time(e){return a("time")}read(e){return a("read")}readSync(e){return a("readSync")}readToGPU(e,t){return a("readToGPU")}numDataIds(){return a("numDataIds")}disposeData(e,t){return a("disposeData")}write(e,t,n){return a("write")}move(e,t,n,r,s){return a("move")}memory(){return a("memory")}floatPrecision(){return a("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return a("dispose")}}function a(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},8329:function(e,t,n){"use strict";function r(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,a=0,o=!1;for(;r<s;){a=r+(s-r>>>1);const i=n(t,e[a]);i>0?r=a+1:(s=a,o=!i)}return o?r:-r-1}(e,t,n||s)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function s(e,t){return e>t?1:e<t?-1:0}function a(e,t,n,r,s){return u(e,t,n,r,s,0)}function o(e,t,n,r,s,a){return u(e,t,n,r,s,0,!1,a,!0)}function i(e,t,n,r,s,a){return u(e,t,n,r,s,a,!0)}function u(e,t,n,s,a,o,i=!1,u=!1,h=!1){const d=[];for(let r=0;r<t.length;r++)t[r]>a&&d.push({score:t[r],boxIndex:r,suppressBeginIndex:0});d.sort(p);const f=o>0?-.5/o:0,m=[],g=[];for(;m.length<n&&d.length>0;){const t=d.pop(),{score:n,boxIndex:o,suppressBeginIndex:i}=t;if(n<a)break;let u=!1;for(let r=m.length-1;r>=i;--r){const n=l(e,o,m[r]);if(n>=s){u=!0;break}if(t.score=t.score*c(s,f,n),t.score<=a)break}t.suppressBeginIndex=m.length,u||(t.score===n?(m.push(o),g.push(t.score)):t.score>a&&r(d,t,p))}const y=m.length,b=n-y;u&&b>0&&(m.push(...new Array(b).fill(0)),g.push(...new Array(b).fill(0)));const x={selectedIndices:m};return i&&(x.selectedScores=g),h&&(x.validOutputs=y),x}function l(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),o=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),p=Math.max(s[0],s[2]),h=Math.max(s[1],s[3]),d=(i-a)*(u-o),f=(p-l)*(h-c);if(d<=0||f<=0)return 0;const m=Math.max(a,l),g=Math.max(o,c),y=Math.min(i,p),b=Math.min(u,h),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(d+f-x)}function c(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function p(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}n.d(t,{GP:function(){return a},qP:function(){return o},pA:function(){return i}})},8333:function(e,t,n){"use strict";n.d(t,{Z:function(){return s}});var r=n(2657);function s(e,t){const n=[];for(let r=0;r<t.length;r++)t[r]&&n.push(r);const s=(0,r.f)(e,"int32"),a=(0,r.f)([n.length,e.length],"int32");for(let r=0;r<n.length;r++){const t=s.indexToLoc(n[r]),o=r*e.length;a.values.set(t,o)}return a.toTensor()}},196:function(e,t,n){"use strict";n.d(t,{BV:function(){return w},wv:function(){return x}});var r=n(8713),s=n(2885),a=n(5938),o=n(9121),i=n(6151),u=n(4706),l=n(3418),c=n(569);class p{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new d)}profileKernel(e,t,n){let r;const a=()=>{r=n()};let o;const i=l.now();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(a);else{a();for(const e of r)e.dataSync();o=Promise.resolve({kernelMs:l.now()-i})}if((0,s.OB)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let s=0;s<r.length;s++){const t=r[s];t.data().then((n=>{h(n,t.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:o.then((e=>e.kernelMs)),extraInfo:o.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),r,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])}))}))}}function h(e,t,n){if("float32"!==t)return!1;for(let r=0;r<e.length;r++){const t=e[r];if(isNaN(t)||!isFinite(t))return console.warn(`Found ${t} in the result of '${n}'`),!0}return!1}class d{logKernelProfile(e,t,n,r,s,a){const o="number"===typeof r?c.oj(`${r}ms`,9):r.error,i=c.oj(e,25),u=t.rank,l=t.size,p=c.oj(t.shape.toString(),14);let h="";for(const c in s){const e=s[c];if(null!=e){const n=e.shape||t.shape,r=n.length;h+=`${c}: ${r}D ${r>0?n:""} `}}console.log(`%c${i}\t%c${o}\t%c${u}D ${p}\t%c${l}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var f=n(974),m=n(747);function g(e){return null!=e.kernelName}class y{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class b{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new y}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void(await this.setBackend(n))}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(u.Z(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new p(this.backendInstance),!0}setupRegisteredKernels(){(0,i.tr)(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){(0,i.tr)(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof r.Zu||"function"!==typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,u.Z(`Initialization of backend ${e} failed`),u.Z(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(n){return u.Z(`Initialization of backend ${e} failed`),u.Z(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),a=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!==typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!==typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(r){throw t(),r}}nextTensorId(){return b.nextTensorId++}nextVariableId(){return b.nextVariableId++}clone(e){const t=w.runKernel(o.iJ,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return w.runKernel(o.RF,t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=(0,i.pI)(e,this.backendName)))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach((e=>{s+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=r-t-s-a;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;let o,u;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=g(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(g(e)){const{kernelName:t,inputs:s,attrs:a}=e;null==this.backendName&&this.backend;const l=(0,i.pI)(t,this.backendName);c.hu(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),o=()=>{const e=this.backend.numDataIds();u=l.kernelFunc({inputs:s,attrs:a,backend:this.backend});const o=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,o);const i=o.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(r){const e=this.getTensorsForGradient(t,s,i);n=this.saveTensorsForBackwardMode(e)}return i}}else{const{forwardFunc:t}=e,s=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};o=()=>{const e=this.backend.numDataIds();u=this.tidy((()=>t(this.backend,s)));const n=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:p,attrs:h}=e,d=g(e)?null:e.backwardsFunc;let f;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(l,p,(()=>o())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs):t=o()})),r&&this.addTapeNode(l,p,t,d,n,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(p).map((e=>null!=p[e]?p[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const r=(0,i.uk)(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(c.hu(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const o=n.filter(((e,t)=>s[t]));return a.concat(o)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&c.HD(e[0])&&(s=e.map((e=>l.encodeString(e))));const a=r.write(s,t,n),o=new f.es(t,n,a,this.nextTensorId());if(this.trackTensor(o,r),"string"===n){const e=this.state.tensorInfo.get(a),t=(0,c.Ub)(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return o}makeTensorFromDataId(e,t,n,r){const s={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(s,r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:s}=e,a=new f.es(r,s,n,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new f._w(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*c.bT(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof f._w||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*c.bT(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,a){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},u=(0,i.uk)(e);null!=u&&(r=u.gradFunc),null!=r&&(o.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=c.wT(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],s,a))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=(0,m.getTensorsInContainer)(e),n=new Set(t.map((e=>e.id)));for(let s=0;s<this.state.activeScope.track.length;s++){const e=this.state.activeScope.track[s];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(c.hu(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));c.hu(s instanceof f.es,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const r={},s={};for(let u=0;u<t.length;u++)r[t[u].id]=!0;for(let u=0;u<e.length;u++){const n=e[u],a=n.inputs;for(const e in a){const o=a[e];let i=!1;for(let e=0;e<t.length;e++)if(r[o.id]){n.outputs.forEach((e=>r[e.id]=!0)),i=!0,s[n.id]=!0;break}if(i)break}}const a={};a[n.id]=!0;const o={};for(let u=e.length-1;u>=0;u--){const t=e[u],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(a[t.outputs[e].id]){for(const e in n)a[n[e].id]=!0,o[t.id]=!0;break}}const i=[];for(let u=0;u<e.length;u++){const t=e[u];if(s[t.id]&&o[t.id]){const e={};for(const s in t.inputs){const n=t.inputs[s];r[n.id]&&(e[s]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,i.push(n)}}return i}(this.state.activeTape,t,s);if(!r&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?function(e){const t=(0,c.p8)((0,c.NA)(e),"float32");return w.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let s=t.length-1;s>=0;s--){const a=t[s],o=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?o.push(n):o.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const i=a.gradient(o);for(const t in a.inputs){if(!(t in i))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(i)}.`);const s=n((()=>i[t]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const o=a.inputs[t];if(!c.cO(s.shape,o.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${o.shape}'`);if(null==e[o.id])e[o.id]=s;else{const t=e[o.id];e[o.id]=r(t,s),t.dispose()}}}}(e,a,(e=>this.tidy(e)),v);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){return c.hu(c.mf(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;c.hu(t.every((e=>e instanceof f.es)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};t.forEach(((e,t)=>{r[t]=e}));return this.runKernelFunc({forwardFunc:(r,s)=>(n=e(...t,s),c.hu(n.value instanceof f.es,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),c.hu(c.mf(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const s=n.gradFunc(e,r),a=Array.isArray(s)?s:[s];c.hu(a.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),c.hu(a.every((e=>e instanceof f.es)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const o={};return a.forEach(((e,t)=>{o[t]=()=>e})),o},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=(0,l.now)(),n=await this.backend.time(e);return n.wallMs=(0,l.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new y;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function x(){const e=(0,a.D)();if(null==e._tfengine){const t=new s.qA(e);e._tfengine=new b(t)}return(0,s.iG)(e._tfengine.ENV),(0,f.Vi)((()=>e._tfengine)),e._tfengine}b.nextTensorId=0,b.nextVariableId=0;const w=x();function v(e,t){const n={a:e,b:t};return w.runKernel(o.mm,n)}},2885:function(e,t,n){"use strict";n.d(t,{OB:function(){return i},iG:function(){return l},qA:function(){return a}});var r=n(569);const s="tfjsflags";class a{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=o,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(i().getBool("IS_TEST")||i().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];i().getBool("IS_TEST")||i().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if((0,r.tI)(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(s in e){e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}}function o(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function i(){return u}let u=null;function l(e){u=e}},5938:function(e,t,n){"use strict";n.d(t,{D:function(){return a},R:function(){return o}});var r=n(3454);let s;function a(){if(null==s){let e;if("undefined"!==typeof window)e=window;else if("undefined"!==typeof n.g)e=n.g;else if("undefined"!==typeof r)e=r;else{if("undefined"===typeof self)throw new Error("Could not find a global object");e=self}s=e}return s}function o(e,t){const n=function(){const e=a();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}},4368:function(e,t,n){"use strict";n.d(t,{B9:function(){return p},CQ:function(){return d},Cn:function(){return h},G4:function(){return i},N_:function(){return f},SR:function(){return u},jq:function(){return m},lu:function(){return c},sq:function(){return l},y3:function(){return g}});var r=n(196),s=n(2885),a=n(974),o=n(747);function i(){(0,s.OB)().set("PROD",!0)}function u(){return r.BV}function l(){return r.BV.memory()}function c(e,t){return r.BV.tidy(e,t)}function p(e){(0,o.getTensorsInContainer)(e).forEach((e=>e.dispose()))}function h(e){return r.BV.keep(e)}function d(e){return r.BV.setBackend(e)}function f(){return r.BV.backendName}function m(e,t,n=1){return r.BV.registerBackend(e,t,n)}function g(){return r.BV.backend}(0,a.FZ)((function(e){(0,s.OB)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}))},633:function(e,t,n){"use strict";n.d(t,{cb:function(){return i},pn:function(){return o}});var r=n(196),s=n(974),a=n(569);function o(e,t){a.hu(a.mf(e),(()=>"The f passed in variableGrads(f) must be a function")),a.hu(null==t||Array.isArray(t)&&t.every((e=>e instanceof s._w)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in r.BV.registeredVariables)t.push(r.BV.registeredVariables[e])}const o=n?t.filter((e=>!e.trainable)):null,i=t.length;t=t.filter((e=>e.trainable)),a.hu(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${i} variables is trainable.`));const{value:u,grads:l}=r.BV.gradients(e,t,null,!0);a.hu(l.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),a.hu(0===u.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${u.rank} tensor`));const c={};return t.forEach(((e,t)=>{null!=l[t]&&(c[e.name]=l[t])})),null!=o&&o.forEach((e=>c[e.name]=null)),{value:u,grads:c}}function i(e){return r.BV.customGrad(e)}},9319:function(e,t,n){"use strict";n.d(t,{SYM:function(){return He.SY},VGw:function(){return He.VG},SpW:function(){return He.Sp},mm_:function(){return He.mm},Xze:function(){return He.Xz},oT6:function(){return He.oT},IKK:function(){return He.IK},sJF:function(){return He.sJ},aJk:function(){return He.aJ},M2y:function(){return He.M2},qw7:function(){return He.qw},jMg:function(){return He.jM},QCc:function(){return He.QC},Oyi:function(){return He.Oy},JhU:function(){return He.Jh},_k9:function(){return He._k},IMb:function(){return He.IM},ROF:function(){return He.RO},XLW:function(){return He.XL},zws:function(){return He.zw},zvY:function(){return He.zv},eEB:function(){return He.eE},RFZ:function(){return He.RF},gJX:function(){return He.gJ},xnO:function(){return He.xn},Zz9:function(){return He.Zz},yj2:function(){return He.yj},Eh3:function(){return He.Eh},mhS:function(){return He.mh},wUP:function(){return He.wU},wm:function(){return He.wm},x12:function(){return He.x1},o2y:function(){return He.o2},ik2:function(){return He.ik},mc4:function(){return He.mc},TR1:function(){return He.TR},VcC:function(){return He.Vc},Byc:function(){return He.By},iHb:function(){return He.iH},JLz:function(){return Vn.JL},QRR:function(){return He.QR},T0n:function(){return He.T0},cie:function(){return He.ci},sL$:function(){return He.sL},y7R:function(){return He.y7},$w:function(){return He.$w},p4S:function(){return He.p4},Vn9:function(){return He.Vn},ekb:function(){return He.ek},$g6:function(){return He.$g},SX0:function(){return He.SX},HEU:function(){return He.HE},hdR:function(){return He.hd},Omj:function(){return He.Om},NEP:function(){return He.NE},YFo:function(){return He.YF},Y0y:function(){return He.Y0},vwp:function(){return He.vw},deh:function(){return He.de},Uyb:function(){return He.Uy},OR:function(){return He.OR},jeX:function(){return He.je},eBW:function(){return He.eB},sHE:function(){return He.sH},_V0:function(){return He._V},luS:function(){return He.lu},q1x:function(){return He.q1},qi_:function(){return He.qi},iZT:function(){return He.iZ},Acj:function(){return He.Ac},Qg5:function(){return He.Qg},iJz:function(){return He.iJ},J_u:function(){return He.J_},avt:function(){return He.av},iWB:function(){return He.iW},r7n:function(){return He.r7},Zuw:function(){return Vn.Zu},eZ0:function(){return He.eZ},Hhh:function(){return He.Hh},J$2:function(){return He.J$},vtC:function(){return He.vt},CAk:function(){return He.CA},e7N:function(){return He.e7},ZbH:function(){return He.Zb},kU:function(){return He.kU},PYm:function(){return He.PY},VfG:function(){return He.Vf},MZg:function(){return He.MZ},YoZ:function(){return He.Yo},mTV:function(){return He.mT},OAf:function(){return He.OA},OU7:function(){return He.OU},OV7:function(){return He.OV},vFR:function(){return He.vF},BMI:function(){return He.BM},q2K:function(){return He.q2},c17:function(){return He.c1},q8u:function(){return He.q8},jQs:function(){return He.jQ},Vbg:function(){return He.Vb},NZg:function(){return He.NZ},wYn:function(){return He.wY},kuV:function(){return He.ku},uv1:function(){return He.uv},cye:function(){return He.cy},W0H:function(){return He.W0},yQU:function(){return He.yQ},we_:function(){return He.we},qWM:function(){return He.qW},gaJ:function(){return ht},QiL:function(){return He.Qi},lyA:function(){return He.ly},pe_:function(){return He.pe},o0g:function(){return He.o0},DlI:function(){return He.Dl},e6w:function(){return He.e6},xJR:function(){return He.xJ},oHH:function(){return He.oH},$HU:function(){return He.$H},qkr:function(){return He.qk},SbG:function(){return He.Sb},HZH:function(){return He.HZ},_Yw:function(){return He._Y},zbQ:function(){return He.zb},dpD:function(){return He.dp},Hmb:function(){return He.Hm},mKl:function(){return He.mK},b9H:function(){return He.b9},e07:function(){return He.e0},bV0:function(){return He.bV},xQA:function(){return He.xQ},nr8:function(){return He.nr},PhF:function(){return He.Ph},oFR:function(){return He.oF},a5O:function(){return He.a5},i5y:function(){return He.i5},RQH:function(){return He.RQ},wYB:function(){return He.w3},p2w:function(){return He.p2},Gcp:function(){return He.Gc},MRv:function(){return He.MR},TQc:function(){return He.TQ},O3z:function(){return He.O3},nhH:function(){return He.nh},w3H:function(){return He.YW},ZjV:function(){return He.Zj},D2d:function(){return He.D2},L8s:function(){return He.L8},FKq:function(){return He.FK},bK0:function(){return He.bK},_tC:function(){return He._t},h8e:function(){return He.h8},jQk:function(){return He.m2},_JP:function(){return He._J},s1s:function(){return He.s1},XkS:function(){return He.Xk},Tr8:function(){return He.Tr},GBy:function(){return He.GB},sEM:function(){return He.sE},MIZ:function(){return He.MI},esB:function(){return ke.es},YDk:function(){return ke.YD},n9L:function(){return He.n9},cWu:function(){return He.cW},wx7:function(){return He.wx},G3Y:function(){return He.G3},kpP:function(){return He.kp},ToN:function(){return He.To},Qvg:function(){return He.Qv},RuY:function(){return He.Ru},usg:function(){return He.us},WnP:function(){return ft.WnP},IHx:function(){return ft.IHx},$6P:function(){return ft.$6P},YjB:function(){return ft.YjB},NqF:function(){return ft.NqF},wS1:function(){return ft.wS1},uR5:function(){return ft.uR5},y3$:function(){return lt.y3},Wap:function(){return u},Dxk:function(){return ft.Dxk},JY5:function(){return ft.JY5},p3b:function(){return ft.p3b},Jyw:function(){return Ge},Xhn:function(){return a},f3b:function(){return ft.f3b},pju:function(){return ft.pju},iUl:function(){return ft.iUl},d9v:function(){return ft.d9v},zoF:function(){return ft.zoF},gME:function(){return ft.gME},Izb:function(){return ft.Izb},MNy:function(){return ft.MNy},ZaL:function(){return ft.ZaL},PAt:function(){return ft.PAt},Tek:function(){return ft.Tek},bc:function(){return ft.bc},pdZ:function(){return ft.pdZ},$QV:function(){return ft.$QV},B10:function(){return ft.B10},C2$:function(){return r},B90:function(){return lt.B9},hiC:function(){return ft.hiC},rvX:function(){return ft.rvX},pyx:function(){return ft.pyx},G48:function(){return lt.G4},SRH:function(){return lt.SR},OBj:function(){return m.OB},DgJ:function(){return ft.DgJ},Qqt:function(){return ft.Qqt},dt4:function(){return ft.dt4},iyy:function(){return ft.iyy},hlL:function(){return ft.hlL},GWj:function(){return ft.GWj},imm:function(){return ft.imm},Iqj:function(){return ft.Iqj},N_N:function(){return lt.N_},pjt:function(){return ft.pjt},brS:function(){return ft.brS},BHj:function(){return ft.BHj},io:function(){return s},CnY:function(){return lt.Cn},GDt:function(){return l},hi7:function(){return ft.hi7},$r2:function(){return ft.$r2},cM7:function(){return ft.cM7},Krr:function(){return ft.Krr},CmS:function(){return ft.CmS},HvI:function(){return ft.HvI},OI3:function(){return ft.OI3},Fp7:function(){return ft.Fp7},_sB:function(){return ft._sB},YQQ:function(){return ft.YQQ},gWQ:function(){return ft.gWQ},J69:function(){return ft.J69},sq6:function(){return lt.sq},LTh:function(){return ft.LTh},Gi7:function(){return ft.Gi7},dC7:function(){return ft.dC7},W76:function(){return ft.W76},glt:function(){return Mt},Quu:function(){return ft.Quu},lfX:function(){return ft.lfX},iUs:function(){return ft.iUs},JpU:function(){return ft.JpU},vku:function(){return ft.vku},AL3:function(){return ft.AL3},nGf:function(){return ft.nGf},LGj:function(){return ft.LGj},jqO:function(){return lt.jq},wCN:function(){return je.wC},UYe:function(){return ft.UYe},XLQ:function(){return ft.XLQ},GYS:function(){return ft.GYS},iD$:function(){return ft.iD$},snQ:function(){return ft.snQ},U8D:function(){return ft.U8D},U_I:function(){return ft.U_I},m7h:function(){return o},CQI:function(){return lt.CQ},XD2:function(){return ft.XD2},tPi:function(){return ft.tPi},jZU:function(){return ft.jZU},SmN:function(){return ft.SmN},CnO:function(){return ft.CnO},p0P:function(){return ft.p0P},kuN:function(){return nt},XAC:function(){return ft.XAC},Wvh:function(){return ft.Wvh},Vl2:function(){return ft.Vl2},_b3:function(){return ft._b3},L9e:function(){return ft.L9e},knu:function(){return ft.knu},luU:function(){return ft.luU},Smz:function(){return ft.Smz},z4k:function(){return dt.z4},AEp:function(){return ft.AEp},XeE:function(){return ft.XeE},RRF:function(){return ft.RRF},piX:function(){return ot},lub:function(){return lt.lu},Gg6:function(){return ft.Gg6},p_j:function(){return Rt},p4s:function(){return ft.p4s},Xu6:function(){return ft.Xu6},HHK:function(){return ft.HHK},x8V:function(){return dt.x8},D5U:function(){return it},VD$:function(){return ft.VD$},jTM:function(){return ut},arb:function(){return ft.arb},lls:function(){return ft.lls},P84:function(){return ft.P84}});var r={};n.r(r),n.d(r,{isBrowser:function(){return f},isMobile:function(){return d},mockIsMobile:function(){return h}});var s={};n.r(s),n.d(s,{browserFiles:function(){return Ce},browserHTTPRequest:function(){return Me},concatenateArrayBuffers:function(){return E},copyModel:function(){return he},decodeWeights:function(){return N},encodeWeights:function(){return I},fromMemory:function(){return ze},fromMemorySync:function(){return Pe},getLoadHandlers:function(){return L},getModelArtifactsForJSON:function(){return D},getModelArtifactsInfoForJSON:function(){return _},getSaveHandlers:function(){return B},http:function(){return Oe},isHTTPScheme:function(){return Fe},listModels:function(){return ce},loadWeights:function(){return $e},moveModel:function(){return de},registerLoadRouter:function(){return M},registerSaveRouter:function(){return O},removeModel:function(){return pe},weightsLoaderFactory:function(){return De},withSaveHandler:function(){return Ue},withSaveHandlerSync:function(){return Ve}});var a={};n.r(a),n.d(a,{fromPixels:function(){return tt},fromPixelsAsync:function(){return Je},toPixels:function(){return et}});var o={};n.r(o),n.d(o,{Serializable:function(){return rt},SerializationMap:function(){return st},registerClass:function(){return at}});var i={};n.r(i),n.d(i,{collectGatherOpShapeInfo:function(){return Ln},computeOutShape:function(){return Bn},segOpComputeOptimalWindowSize:function(){return Mn}});var u={};n.r(u),n.d(u,{ERF_A1:function(){return en},ERF_A2:function(){return tn},ERF_A3:function(){return nn},ERF_A4:function(){return rn},ERF_A5:function(){return sn},ERF_P:function(){return Jt},PARALLELIZE_THRESHOLD:function(){return Ut},SELU_SCALE:function(){return Yt.$},SELU_SCALEALPHA:function(){return Yt.y},applyActivation:function(){return Pt.QH},assertAndGetBroadcastShape:function(){return Ge.assertAndGetBroadcastShape},assertAxesAreInnerMostDims:function(){return Bt.lB},assertParamsConsistent:function(){return Lt},assignToTypedArray:function(){return hn},axesAreInnerMostDims:function(){return Bt.YB},calculateShapes:function(){return Zt.SU},checkEinsumDimSizes:function(){return xn},checkPadOnDimRoundingMode:function(){return zt.m},combineLocations:function(){return Bt.Vh},complexWithEvenIndex:function(){return ln},complexWithOddIndex:function(){return cn},computeConv2DInfo:function(){return zt.Ix},computeConv3DInfo:function(){return zt.jw},computeDefaultPad:function(){return zt.aO},computeDilation2DInfo:function(){return zt.Rf},computeOptimalWindowSize:function(){return Vt},computeOutAndReduceShapes:function(){return Bt.kz},computeOutShape:function(){return Wt},computePool2DInfo:function(){return zt.Xw},computePool3DInfo:function(){return zt.pl},convertConv2DDataFormat:function(){return zt.sl},decodeEinsumEquation:function(){return yn},eitherStridesOrDilationsAreOne:function(){return zt.jT},expandShapeToKeepDim:function(){return Bt.rv},exponent:function(){return fn},exponents:function(){return dn},fromStringArrayToUint8:function(){return zn},fromUint8ToStringArray:function(){return Wn},getAxesPermutation:function(){return Bt.Q3},getBroadcastDims:function(){return Ge.getBroadcastDims},getComplexWithIndex:function(){return pn},getEinsumComputePath:function(){return wn},getEinsumPermutation:function(){return bn},getFusedBiasGradient:function(){return Pt.pf},getFusedDyActivation:function(){return Pt.Fr},getImageCenter:function(){return Gt},getInnerMostAxes:function(){return Bt.sY},getPermuted:function(){return jt},getReductionAxes:function(){return Ge.getReductionAxes},getReshaped:function(){return Ht},getReshapedPermuted:function(){return Xt},getSliceBeginCoords:function(){return qt},getSliceSize:function(){return Kt},getSparseFillEmptyRowsIndicesDenseShapeMismatch:function(){return Nn},getSparseFillEmptyRowsNegativeIndexErrorMessage:function(){return Sn},getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:function(){return Tn},getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:function(){return An},getSparseReshapeInputOutputMismatchErrorMessage:function(){return Dn},getSparseReshapeInputOutputMultipleErrorMessage:function(){return $n},getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:function(){return Cn},getSparseReshapeNegativeOutputDimErrorMessage:function(){return En},getSparseSegmentReductionIndicesOutOfRangeErrorMessage:function(){return On},getSparseSegmentReductionNegativeSegmentIdsErrorMessage:function(){return _n},getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:function(){return Fn},getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:function(){return Rn},getUndoAxesPermutation:function(){return Bt.LJ},isIdentityPermutation:function(){return vn},log:function(){return an.c},mergeRealAndImagArrays:function(){return on},prepareAndValidate:function(){return Qt},prepareSplitSize:function(){return In},segment_util:function(){return i},shouldFuse:function(){return Pt.uy},slice_util:function(){return nt},splitRealAndImagArrays:function(){return un},tupleValuesAreOne:function(){return zt.I0},upcastType:function(){return dt.x8},validateInput:function(){return Zt.b0},validateUpdateShape:function(){return Zt.l5},warn:function(){return an.Z}});var l={};n.r(l),n.d(l,{GP:function(){return Pn.GP},qP:function(){return Pn.qP},pA:function(){return Pn.pA},ZA:function(){return Un.Z}});var c=n(196);let p;function h(e){p=e}function d(e){if(void 0!==p)return p;if(e||"undefined"!==typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!==typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function f(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}var m=n(2885),g=n(3454);const y=(0,m.OB)();y.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),y.registerFlag("IS_BROWSER",(()=>f())),y.registerFlag("IS_NODE",(()=>"undefined"!==typeof g&&"undefined"!==typeof g.versions&&"undefined"!==typeof g.versions.node)),y.registerFlag("IS_CHROME",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),y.registerFlag("PROD",(()=>!1)),y.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>y.getBool("DEBUG"))),y.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),y.registerFlag("IS_TEST",(()=>!1)),y.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),y.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),y.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));var b=n(1661),x=n(701),w=n(569);const v={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};var k=n(1876).Buffer;async function I(e,t){const n=[],r=[],s=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<s.length;++a){const o=s[a],i=Array.isArray(e)?e[a].tensor:e[o];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error(`Unsupported dtype in weight '${o}': ${i.dtype}`);const u={name:o,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const e=new Promise((async e=>{const t=await i.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let s=0;for(let a=0;a<t.length;a++){const e=t[a],n=new Uint8Array(new Uint32Array([e.length]).buffer);r.set(n,s),s+=4,r.set(e,s),s+=e.length}e(r)}));r.push(e)}else r.push(i.data());null!=t&&(u.group=t),n.push(u)}return{data:S(await Promise.all(r)),specs:n}}function N(e,t){const n={};let r,s=0;for(const a of t){const t=a.name,o=a.dtype,i=a.shape,u=(0,w.NA)(i);let l;if("quantization"in a){const n=a.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${a.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${a.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==o)throw new Error(`Weight ${a.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${o}.`)}const i=v[n.dtype],c=e.slice(s,s+u*i),p="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===o)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(p.length);for(let e=0;e<p.length;e++){const t=p[e];l[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=F()),l=r(p)}else{if("int32"!==o)throw new Error(`Unsupported dtype in weight '${t}': ${o}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(p.length);for(let e=0;e<p.length;e++){const t=p[e];l[e]=Math.round(t*n.scale+n.min)}}s+=u*i}else if("string"===o){const t=(0,w.NA)(a.shape);l=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(s,s+4))[0];s+=4;const n=new Uint8Array(e.slice(s,s+t));l.push(n),s+=t}}else{const r=v[o],a=e.slice(s,s+u*r);if("float32"===o)l=new Float32Array(a);else if("int32"===o)l=new Int32Array(a);else if("bool"===o)l=new Uint8Array(a);else{if("complex64"!==o)throw new Error(`Unsupported dtype in weight '${t}': ${o}`);{l=new Float32Array(a);const e=new Float32Array(l.length/2),r=new Float32Array(l.length/2);for(let t=0;t<e.length;t++)e[t]=l[2*t],r[t]=l[2*t+1];const s=(0,x.X)(e,i,"float32"),o=(0,x.X)(r,i,"float32");n[t]=(0,b.P)(s,o),s.dispose(),o.dispose()}}s+=u*r}"complex64"!==o&&(n[t]=(0,x.X)(l,i,o))}return n}function S(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let s=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength})),r.buffer}const T="undefined"!==typeof k&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function C(e){return T?k.byteLength(e):new Blob([e]).size}function E(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function A(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function $(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function D(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[r,s]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=s}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function _(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:C(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:C(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function F(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0===(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const s=new ArrayBuffer(4*r.length),a=new Uint32Array(s);for(let o=0;o<r.length;o++){const s=r[o],i=e[n[s>>10]+(1023&s)]+t[s>>10];a[o]=i}return new Float32Array(s)}}class R{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==R.instance&&(R.instance=new R),R.instance}static registerSaveRouter(e){R.getInstance().saveRouters.push(e)}static registerLoadRouter(e){R.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return R.getHandlers(e,"save")}static getLoadHandlers(e,t){return R.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?R.getInstance().loadRouters:R.getInstance().saveRouters).forEach((t=>{const s=t(e,n);null!==s&&r.push(s)})),r}}const O=e=>R.registerSaveRouter(e),M=e=>R.registerLoadRouter(e),B=e=>R.getSaveHandlers(e),L=(e,t)=>R.getLoadHandlers(e,t),W="tensorflowjs",z="models_store",P="model_info_store";function U(){if(!(0,m.OB)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"===typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function V(e){const t=e.result;t.createObjectStore(z,{keyPath:"modelPath"}),t.createObjectStore(P,{keyPath:"modelPath"})}class G{constructor(e){if(this.indexedDB=U(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(W,1);r.onupgradeneeded=()=>V(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction(z,"readonly"),r=t.objectStore(z).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{const r=_(t),a=s.transaction(P,"readwrite");let o=a.objectStore(P);const i=o.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;i.onsuccess=()=>{u=s.transaction(z,"readwrite");const i=u.objectStore(z).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});i.onsuccess=()=>e({modelArtifactsInfo:r}),i.onerror=e=>{o=a.objectStore(P);const t=o.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(i.error)),t.onerror=e=>(s.close(),n(i.error))}},i.onerror=e=>(s.close(),n(i.error)),a.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)}))}}G.URL_SCHEME="indexeddb://";const H=e=>{return(0,m.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(G.URL_SCHEME)?(t=e.slice(G.URL_SCHEME.length),new G(t)):null;var t};R.registerSaveRouter(H),R.registerLoadRouter(H);class j{constructor(){this.indexedDB=U()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(W,1);n.onupgradeneeded=()=>V(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(P,"readonly"),a=s.objectStore(P).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(r.close(),t(a.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(G.URL_SCHEME)?t.slice(G.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(W,1);r.onupgradeneeded=()=>V(r),r.onsuccess=()=>{const s=r.result,a=s.transaction(P,"readwrite"),o=a.objectStore(P),i=o.get(e);let u;i.onsuccess=()=>{if(null==i.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=o.delete(e),a=()=>{u=s.transaction(z,"readwrite");const r=u.objectStore(z).delete(e);r.onsuccess=()=>t(i.result.modelArtifactsInfo),r.onerror=e=>n(i.error)};r.onsuccess=a,r.onerror=e=>(a(),s.close(),n(i.error))}},i.onerror=e=>(s.close(),n(i.error)),a.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}}const X="/",q="tensorflowjs_models",K="info",Q="model_topology",Z="weight_specs",Y="weight_data",J="model_metadata";function ee(e){return{info:[q,e,K].join(X),topology:[q,e,Q].join(X),weightSpecs:[q,e,Z].join(X),weightData:[q,e,Y].join(X),modelMetadata:[q,e,J].join(X)}}function te(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function ne(e){const t=e.split(X);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(X)}class re{constructor(e){if(!(0,m.OB)().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=ee(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),s=_(e);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,function(e){if(T)return k.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let r=0,s=t.length;r<s;r++)n+=String.fromCharCode(t[r]);return btoa(n)}(e.weightData));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:s}}catch(t){throw te(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(T){const t=k.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let r=0;r<t.length;++r)n.set([t.charCodeAt(r)],r);return n.buffer}(a),t}}re.URL_SCHEME="localstorage://";const se=e=>{return(0,m.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(re.URL_SCHEME)?(t=e.slice(re.URL_SCHEME.length),new re(t)):null;var t};R.registerSaveRouter(se),R.registerLoadRouter(se);class ae{constructor(){(0,w.hu)((0,m.OB)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),(0,w.hu)("undefined"===typeof window||"undefined"!==typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=q+X,n=X+K;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);if(s.startsWith(t)&&s.endsWith(n)){e[ne(s)]=JSON.parse(this.LS.getItem(s))}}return e}async removeModel(e){var t;const n=ee(e=(t=e).startsWith(re.URL_SCHEME)?t.slice(re.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return te(n),r}}const oe="://";class ie{constructor(){this.managers={}}static getInstance(){return null==ie.instance&&(ie.instance=new ie),ie.instance}static registerManager(e,t){(0,w.hu)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(oe)&&(e=e.slice(0,e.indexOf(oe))),(0,w.hu)(e.length>0,(()=>"scheme must not be an empty string."));const n=ie.getInstance();(0,w.hu)(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function ue(e){if(-1===e.indexOf(oe))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${ie.getSchemes().join(",")}`);return{scheme:e.split(oe)[0],path:e.split(oe)[1]}}async function le(e,t,n=!1){(0,w.hu)(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=R.getLoadHandlers(e);(0,w.hu)(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),(0,w.hu)(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const s=r[0],a=R.getSaveHandlers(t);(0,w.hu)(a.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),(0,w.hu)(a.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const o=a[0],i=ue(e).scheme,u=ue(e).path,l=i===ue(e).scheme,c=await s.load();n&&l&&await ie.getManager(i).removeModel(u);const p=await o.save(c);return n&&!l&&await ie.getManager(i).removeModel(u),p.modelArtifactsInfo}async function ce(){const e=ie.getSchemes(),t={};for(const n of e){const e=await ie.getManager(n).listModels();for(const r in e){t[n+oe+r]=e[r]}}return t}async function pe(e){const t=ue(e);return ie.getManager(t.scheme).removeModel(t.path)}async function he(e,t){return le(e,t,!1)}async function de(e,t){return le(e,t,!0)}class fe{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if((0,m.OB)().get("IS_BROWSER")){(0,m.OB)().setPlatform("browser",new fe);try{ie.registerManager(re.URL_SCHEME,new ae)}catch(Gn){}try{ie.registerManager(G.URL_SCHEME,new j)}catch(Gn){}}var me=n(3454);const ge=()=>n(5410);let ye;class be{constructor(){this.util=n(8628),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=(0,m.OB)().global.fetch?(0,m.OB)().global.fetch(e,t):(null==ye&&(ye=ge()),ye(e,t))}now(){const e=me.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}}(0,m.OB)().get("IS_NODE")&&!(0,m.OB)().get("IS_BROWSER")&&(0,m.OB)().setPlatform("node",new be);var xe=n(2657),we=n(2271),ve=n(8723);var ke=n(974);(0,c.wv)();const Ie={buffer:xe.f,cast:we.p,clone:ve.d,print:function(e,t=!1){console.log(e.toString(t))}};(0,ke.Vp)(Ie);function Ne(e){return new Promise((e=>setTimeout(e))).then(e)}class Se{constructor(e){if(!(0,m.OB)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Se.URL_SCHEME)&&(e=e.slice(Se.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=$(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=r,await Ne((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Ne((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:_(e)}}}}Se.URL_SCHEME="downloads://";class Te{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),s=r.modelTopology;if(null==s)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:s});const a=D(r,(e=>this.loadWeights(e)));e(a)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const a of e)t.push(...a.weights),n.push(...a.paths);const r=this.checkManifestAndWeightFiles(e),s=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(s).then((e=>[t,E(e)]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const s=new FileReader;s.onload=e=>{const t=e.target.result;n(t)},s.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),s.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>A(e.name))),r={};for(const s of e)s.paths.forEach((e=>{const s=A(e);if(-1!==t.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(t.push(s),-1===n.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(s)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function Ce(e){return new Te(e)}function Ee(e,t,n,r){!function(e){(0,w.hu)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){(0,w.hu)(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),(0,w.hu)(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),(0,w.hu)(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{const o=n+ ++s/e.length*(r-n);return t(o),a})),a))))}async function Ae(e,t){null==t&&(t={});const n=null==t.fetchFunc?(0,m.OB)().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),s=(null==t.onProgress?await Promise.all(r):await Ee(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(s):await Ee(s,t.onProgress,.5,1)}async function $e(e,t="",n,r){return De((e=>Ae(e,{requestInit:r})))(e,t,n)}function De(e){return async(t,n="",r)=>{const s=t.map((()=>!1)),a={},o=null!=r?r.map((()=>!1)):[],i=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,l=v[u]*w.NA(e.shape),c=()=>{s[t]=!0,null==a[t]&&(a[t]=[]),a[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=r?r.forEach(((t,n)=>{t===e.name&&(c(),o[n]=!0)})):c(),i.push(e.name),n+=l}))})),!o.every((e=>e))){const e=r.filter(((e,t)=>!o[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${i.join(", ")}.`)}const u=s.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),l=[];u.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)}))}));const c=await e(l),p={};let h=0;return u.forEach((e=>{const n=t[e].paths.length;let r=0;for(let t=0;t<n;t++)r+=c[h+t].byteLength;const s=new ArrayBuffer(r),o=new Uint8Array(s);let i=0;for(let t=0;t<n;t++){const e=new Uint8Array(c[h+t]);o.set(e,i),i+=e.byteLength}a[e].forEach((e=>{const t=N(s.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const n in t)p[n]=t[n]})),h+=n})),p}}R.registerSaveRouter((e=>(0,m.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Se.URL_SCHEME)?function(e="model"){return new Se(e)}(e.slice(Se.URL_SCHEME.length)):null));class _e{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?((0,w.hu)("function"===typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=(0,m.OB)().platform.fetch,(0,w.hu)(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&(0,w.hu)(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=$(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:_(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(s){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return D(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),s=n>t?e.substring(n):"";return[r+"/",s]}(t),s=this.weightPathPrefix||n,a=[];for(const u of e)a.push(...u.weights);const o=[],i=[];for(const u of e)for(const e of u.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):o.push(s+e+r);this.weightUrlConverter&&o.push(...await Promise.all(i));return[a,E(await Ae(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Fe(e){return null!=e.match(_e.URL_SCHEME_REGEX)}_e.URL_SCHEME_REGEX=/^https?:\/\//;const Re=(e,t)=>{if("undefined"===typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Fe(e))):Fe(e),n)return Oe(e,t)}return null};function Oe(e,t){return new _e(e,t)}function Me(e,t){return Oe(e,t)}R.registerSaveRouter(Re),R.registerLoadRouter(Re);class Be{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class Le{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class We{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function ze(e,t,n,r){const s=arguments;return new We(Pe(...s))}function Pe(e,t,n,r){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new Be(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Be({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Be({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})}function Ue(e){return new Le(e)}function Ve(e){return new Le(e)}var Ge=n(2200),He=n(9121),je=n(6151),Xe=n(3740),qe=n(2668),Ke=n(7852);let Qe;function Ze(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,a=!1,o=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!==typeof HTMLVideoElement&&e instanceof HTMLVideoElement)s=!0;else if("undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement)a=!0;else if(null!=e.getContext)o=!0;else{if(!("undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);i=!0}if(s){const t=2;if(s&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=(0,je.pI)(He.eB,c.BV.backendName)){const n={pixels:e},r={numChannels:t};return c.BV.runKernel(He.eB,n,r)}const[u,l]=s?[e.videoWidth,e.videoHeight]:[e.width,e.height];let p,h;if(o)p=e.getContext("2d").getImageData(0,0,u,l).data;else if(r||n)p=e.data;else if(a||s||i){if(null==Qe)if("undefined"===typeof document){if("undefined"===typeof OffscreenCanvas||"undefined"===typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Qe=new OffscreenCanvas(1,1).getContext("2d")}else Qe=document.createElement("canvas").getContext("2d");Qe.canvas.width=u,Qe.canvas.height=l,Qe.drawImage(e,0,0,u,l),p=Qe.getImageData(0,0,u,l).data}if(4===t)h=new Int32Array(p);else{const e=u*l;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=p[4*n+e]}return function(e,t,n){if((0,w.Cq)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=(0,Xe.C)(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,Ke.H)(e,t,r,n)}(h,[l,u,t],"int32")}function Ye(e){return"undefined"!==typeof window&&"undefined"!==typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function Je(e,t=3){let n=null;if((0,m.OB)().getBool("WRAP_TO_IMAGEBITMAP")&&Ye(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(r){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return Ze(n,t)}async function et(e,t){let n=(0,Xe._1)(e,"img","toPixels");if(!(e instanceof ke.es)){const e=n;n=(0,we.p)(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,s]=n.shape.slice(0,2),a=2===n.rank?1:n.shape[2];if(a>4||2===a)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${a}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const o=await n.data(),i="float32"===n.dtype?255:1,u=new Uint8ClampedArray(s*r*4);for(let l=0;l<r*s;++l){const e=[0,0,0,255];for(let r=0;r<a;r++){const t=o[l*a+r];if("float32"===n.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===n.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===a?(e[0]=t*i,e[1]=t*i,e[2]=t*i):e[r]=t*i}const t=4*l;u[t+0]=Math.round(e[0]),u[t+1]=Math.round(e[1]),u[t+2]=Math.round(e[2]),u[t+3]=Math.round(e[3])}if(null!=t){t.width=s,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,s,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}const tt=(0,qe.op)({fromPixels_:Ze});var nt=n(7650);class rt{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class st{constructor(){this.classNameMap={}}static getMap(){return null==st.instance&&(st.instance=new st),st.instance}static register(e){st.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function at(e){(0,w.hu)(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),(0,w.hu)("string"===typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),(0,w.hu)(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),st.register(e)}var ot=n(747),it=n(3418);const ut="3.18.0";var lt=n(4368),ct=n(633),pt=n(9494);class ht extends rt{minimize(e,t=!1,n){const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:s[e.name]})));this.applyGradients(e)}else this.applyGradients(s);return(0,lt.B9)(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return(0,ct.pn)(e,t)}dispose(){null!=this.iterations_&&(0,lt.B9)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:(0,pt.i)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(ht,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});var dt=n(1221),ft=n(3974),mt=n(6407),gt=n(1274),yt=n(4841),bt=n(3261),xt=n(248),wt=n(6577);class vt extends ht{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=c.BV.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=c.BV.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:(0,lt.lu)((()=>(0,wt.P)(r).variable(false)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:(0,lt.lu)((()=>(0,wt.P)(r).variable(false)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;(0,lt.lu)((()=>{const e=(0,mt.I)((0,yt.d)(a,this.rho),(0,yt.d)((0,xt.h)(s),1-this.rho)),t=(0,yt.d)((0,gt.h)((0,bt._)((0,mt.I)(o,this.epsilon)),(0,bt._)((0,mt.I)(a,this.epsilon))),s),n=(0,mt.I)((0,yt.d)(o,this.rho),(0,yt.d)((0,xt.h)(t),1-this.rho));a.assign(e),o.assign(n);const i=(0,mt.I)((0,yt.d)(t,-this.learningRate),r);r.assign(i)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&((0,lt.B9)(this.accumulatedGrads.map((e=>e.variable))),(0,lt.B9)(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}vt.className="Adadelta",at(vt);var kt=n(4006);class It extends ht{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=c.BV.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:(0,lt.lu)((()=>(0,kt.h)(r.shape,this.initialAccumulatorValue).variable(e)))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable;(0,lt.lu)((()=>{const e=(0,mt.I)(a,(0,xt.h)(s));a.assign(e);const t=(0,mt.I)((0,yt.d)((0,gt.h)(s,(0,bt._)((0,mt.I)(e,c.BV.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&(0,lt.B9)(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}It.className="Adagrad",at(It);var Nt=n(3453),St=n(827);class Tt extends ht{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],(0,lt.lu)((()=>{this.accBeta1=(0,pt.i)(t).variable(),this.accBeta2=(0,pt.i)(n).variable()})),null==r&&(this.epsilon=c.BV.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,lt.lu)((()=>{const n=(0,St.l)(1,this.accBeta1),r=(0,St.l)(1,this.accBeta2);t.forEach(((t,s)=>{const a=c.BV.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:(0,lt.lu)((()=>(0,wt.P)(a).variable(false)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${t}/v`,variable:(0,lt.lu)((()=>(0,wt.P)(a).variable(false)))});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const i=this.accumulatedFirstMoment[s].variable,u=this.accumulatedSecondMoment[s].variable,l=(0,mt.I)((0,yt.d)(i,this.beta1),(0,yt.d)(o,1-this.beta1)),p=(0,mt.I)((0,yt.d)(u,this.beta2),(0,yt.d)((0,xt.h)(o),1-this.beta2)),h=(0,gt.h)(l,n),d=(0,gt.h)(p,r);i.assign(l),u.assign(p);const f=(0,mt.I)((0,yt.d)((0,gt.h)(h,(0,mt.I)((0,bt._)(d),this.epsilon)),-this.learningRate),a);a.assign(f)})),this.accBeta1.assign((0,yt.d)(this.accBeta1,this.beta1)),this.accBeta2.assign((0,yt.d)(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&(0,lt.B9)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&(0,lt.B9)(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),(0,lt.lu)((()=>{this.accBeta1.assign((0,Nt.s)(this.beta1,this.iterations_+1)),this.accBeta2.assign((0,Nt.s)(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}Tt.className="Adam",at(Tt);var Ct=n(6235),Et=n(632);class At extends ht{constructor(e,t,n,r=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],(0,lt.lu)((()=>{this.iteration=(0,pt.i)(0).variable(),this.accBeta1=(0,pt.i)(t).variable()})),null==r&&(this.epsilon=c.BV.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,lt.lu)((()=>{const n=(0,St.l)(1,this.accBeta1),r=(0,gt.h)(-this.learningRate,(0,mt.I)((0,yt.d)(this.iteration,this.decay),1));t.forEach(((t,s)=>{const a=c.BV.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:(0,wt.P)(a).variable(false)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${t}/v`,variable:(0,wt.P)(a).variable(false)});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const i=this.accumulatedFirstMoment[s].variable,u=this.accumulatedWeightedInfNorm[s].variable,l=(0,mt.I)((0,yt.d)(i,this.beta1),(0,yt.d)(o,1-this.beta1)),p=(0,yt.d)(u,this.beta2),h=(0,Ct.W)(o),d=(0,Et.g)(p,h);i.assign(l),u.assign(d);const f=(0,mt.I)((0,yt.d)((0,gt.h)(r,n),(0,gt.h)(l,(0,mt.I)(d,this.epsilon))),a);a.assign(f)})),this.iteration.assign((0,mt.I)(this.iteration,1)),this.accBeta1.assign((0,yt.d)(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&(0,lt.B9)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&(0,lt.B9)(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}At.className="Adamax",at(At);class $t extends ht{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=c.BV.registeredVariables[t];(0,lt.lu)((()=>{const e=(0,mt.I)((0,yt.d)(this.c,r),s);s.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=(0,lt.Cn)((0,pt.i)(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}$t.className="SGD",at($t);class Dt extends $t{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=(0,pt.i)(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=c.BV.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:(0,lt.lu)((()=>(0,wt.P)(r).variable(e)))}}const s=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&(0,lt.lu)((()=>{let e;const t=(0,mt.I)((0,yt.d)(this.m,s),a);e=this.useNesterov?(0,mt.I)((0,yt.d)(this.c,(0,mt.I)(a,(0,yt.d)(t,this.m))),r):(0,mt.I)((0,yt.d)(this.c,t),r),s.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&(0,lt.B9)(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}Dt.className="Momentum",at(Dt);class _t extends ht{constructor(e,t=.9,n=0,r=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=c.BV.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=c.BV.registeredVariables[t],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:(0,lt.lu)((()=>(0,wt.P)(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:(0,lt.lu)((()=>(0,wt.P)(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:(0,lt.lu)((()=>(0,wt.P)(r).variable(s)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const o=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;(0,lt.lu)((()=>{const e=(0,mt.I)((0,yt.d)(o,this.decay),(0,yt.d)((0,xt.h)(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,s=(0,mt.I)((0,yt.d)(t,this.decay),(0,yt.d)(a,1-this.decay)),u=(0,gt.h)((0,yt.d)(a,this.learningRate),(0,bt._)((0,St.l)(e,(0,mt.I)((0,xt.h)(s),this.epsilon)))),l=(0,mt.I)((0,yt.d)(i,this.momentum),u);o.assign(e),t.assign(s),i.assign(l);const c=(0,St.l)(r,l);r.assign(c)}else{const e=(0,mt.I)((0,yt.d)(o,this.decay),(0,yt.d)((0,xt.h)(a),1-this.decay)),t=(0,mt.I)((0,yt.d)(i,this.momentum),(0,gt.h)((0,yt.d)(a,this.learningRate),(0,bt._)((0,mt.I)(e,this.epsilon))));o.assign(e),i.assign(t);const n=(0,St.l)(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&(0,lt.B9)(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&(0,lt.B9)(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&(0,lt.B9)(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}_t.className="RMSProp",at(_t);class Ft{static sgd(e){return new $t(e)}static momentum(e,t,n=!1){return new Dt(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,s=!1){return new _t(e,t,n,r,s)}static adam(e=.001,t=.9,n=.999,r=null){return new Tt(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new vt(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,s=0){return new At(e,t,n,r,s)}static adagrad(e,t=.1){return new It(e,t)}}const Rt={sgd:Ft.sgd,momentum:Ft.momentum,adadelta:Ft.adadelta,adagrad:Ft.adagrad,rmsprop:Ft.rmsprop,adamax:Ft.adamax,adam:Ft.adam},Ot="undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:e=>e();function Mt(){return new Promise((e=>Ot((()=>e()))))}var Bt=n(3591);function Lt(e,t){const n=e[0].length;e.forEach(((e,t)=>{w.hu(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),w.hu(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,s)=>{for(let a=0;a<n;a++)w.hu(a===t||e[a]===r[a],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function Wt(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var zt=n(2582),Pt=n(9323);const Ut=30;function Vt(e){return e<=Ut?e:(0,w.jP)(e,Math.floor(Math.sqrt(e)))}function Gt(e,t,n){return[n*("number"===typeof e?e:e[0]),t*("number"===typeof e?e:e[1])]}function Ht(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s}function jt(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<e;++r)r>=2*t+1||r%2===1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function Xt(e,t,n,r=!0){const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let a=1;a<e.length;++a)a<=t.length?r?s.push(t[a-1]*e[a]):s.push(e[a]/t[a-1]):s.push(e[a]);return s}function qt(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Kt(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}function Qt(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===(0,w.NA)(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,a=s[s.length-1];let o=1;for(let p=0;p<s.length-1;++p)o*=s[p];const i=e.shape,u=s.slice();u.pop();let l=1;for(let p=a;p<n;++p)l*=i[p],u.push(i[p]);const c=[...(0,w.e3)(e.shape).map((e=>e/l)),1].slice(0,a);return[u,o,l,c]}var Zt=n(3028),Yt=n(3179);const Jt=.3275911,en=.254829592,tn=-.284496736,nn=1.421413741,rn=-1.453152027,sn=1.061405429;var an=n(4706);function on(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function un(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function ln(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let s=0;s<e.length;s+=4)n[Math.floor(s/4)]=e[s],r[Math.floor(s/4)]=e[s+1];return{real:n,imag:r}}function cn(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let s=2;s<e.length;s+=4)n[Math.floor(s/4)]=e[s],r[Math.floor(s/4)]=e[s+1];return{real:n,imag:r}}function pn(e,t){return{real:e[2*t],imag:e[2*t+1]}}function hn(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function dn(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const a=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function fn(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const mn="->",gn=/->/g;function yn(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(gn,"").length)/mn.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,s]=e.split(mn);(0,w.hu)(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const a=r.split(","),o=a.length;if(t!==o)throw new Error(`Expected ${o} input tensors, received ${t}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let p=0;p<s.length;++p){const e=s[p];if(!a.some((t=>-1!==t.indexOf(e))))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===i.indexOf(e)&&i.push(e)}for(let p=0;p<r.length;++p){const e=r[p];-1===i.indexOf(e)&&","!==e&&i.push(e)}const u=new Array(a.length);for(let p=0;p<o;++p){if(new Set(a[p].split("")).size!==a[p].length)throw new Error(`Found duplicate axes in input component ${a[p]}. Support for duplicate axes in input is not implemented yet.`);u[p]=[];for(let e=0;e<a[p].length;++e)u[p].push(i.indexOf(a[p][e]))}const l=i.length,c=[];for(let p=s.length;p<l;++p)c.push(p);return{allDims:i,summedDims:c,idDims:u}}function bn(e,t){let n=new Array(e);n.fill(-1);for(let s=0;s<t.length;++s)n[t[s]]=s;const r=[];for(let s=0;s<e;++s)-1===n[s]&&r.push(s);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function xn(e,t,n){const r=new Array(e);for(let s=0;s<n.length;++s){const e=n[s].shape;for(let n=0;n<t[s].length;++n)void 0===r[t[s][n]]?r[t[s][n]]=e[n]:(0,w.hu)(r[t[s][n]]===e[n],(()=>`Expected dimension ${r[t[s][n]]} at axis ${n} of input shaped ${JSON.stringify(e)}, but got dimension ${e[n]}`))}}function wn(e,t){const n=e,r=[];let s=0;0===e.length&&n.push(-1),s=e.length+1;for(let o=0;o<s;++o)r.push([]);const a=[];for(let o=0;o<n.length;++o){const e=kn(t,n[o]);for(const t of e)-1===a.indexOf(t)&&(r[o].push(t),a.push(t))}return{path:n,steps:r}}function vn(e){return e.every(((e,t)=>e===t))}function kn(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function In(e,t,n=0){let r=[];if("number"===typeof t)(0,w.hu)(e.shape[n]%t===0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const s=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);(0,w.hu)(s<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const r=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-r}(0,w.hu)(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function Nn(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function Sn(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Tn(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function Cn(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function En(e,t){return`size ${e} must be non-negative, not ${t}`}function An(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function $n(e,t){return`Input to reshape is a SparseTensor with ${(0,w.NA)(e)}\n  dense values, but the requested shape requires a multiple of ${(0,w.NA)(t)}. inputShape=${e} outputShape= ${t}`}function Dn(e,t){return`Input to reshape is a tensor with ${(0,w.NA)(e)} dense values, but the requested shape has ${(0,w.NA)(t)}. inputShape=${e} outputShape=${t}`}function _n(){return"segment ids must be >= 0"}function Fn(){return"segment ids are not increasing"}function Rn(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function On(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function Mn(e,t){let n,r=!1;for(e<=Ut?(n=e,r=!0):n=(0,w.jP)(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=(0,w.jP)(e,n+1);return n}function Bn(e,t,n){const r=[],s=e.length;for(let a=0;a<s;a++)a!==t?r.push(e[a]):r.push(n);return r}function Ln(e,t,n,r){const s=t.shape.length,a=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${a}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let p=0;p<r;++p)if(e.shape[p]!==t.shape[p])throw new Error(`x.shape[${p}]: ${e.shape[p]} should be equal to indices.shape[${p}]: ${t.shape[p]}.`);const o=e.shape[n],i=[];let u=1,l=1,c=1;for(let p=0;p<r;++p)i.push(e.shape[p]),u*=e.shape[p];for(let p=r;p<n;p++)i.push(e.shape[p]),l*=e.shape[p];for(let p=r;p<s;p++)i.push(t.shape[p]);for(let p=n+1;p<a;p++)i.push(e.shape[p]),c*=e.shape[p];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:o,outputShape:i}}function Wn(e){try{return e.map((e=>(0,it.decodeString)(e)))}catch(Gn){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${Gn}`)}}function zn(e){return e.map((e=>(0,it.encodeString)(e)))}var Pn=n(8329),Un=n(8333),Vn=n(8713)},9121:function(e,t,n){"use strict";n.d(t,{$H:function(){return lt},$g:function(){return J},$w:function(){return q},Ac:function(){return ge},BM:function(){return Me},By:function(){return z},CA:function(){return Se},D2:function(){return Wt},Dl:function(){return ot},Eh:function(){return D},FK:function(){return $t},G3:function(){return Yt},GB:function(){return Dt},Gc:function(){return Rt},HE:function(){return te},HZ:function(){return pt},Hh:function(){return Re},Hm:function(){return dt},IK:function(){return l},IM:function(){return w},J$:function(){return Ie},J_:function(){return xe},Jh:function(){return y},L8:function(){return Ft},Ly:function(){return N},M2:function(){return h},MI:function(){return qt},MR:function(){return At},MZ:function(){return De},NE:function(){return se},NZ:function(){return Xe},O3:function(){return Ot},OA:function(){return We},OR:function(){return ce},OU:function(){return ze},OV:function(){return Le},Om:function(){return ne},Oy:function(){return m},PY:function(){return Ae},Ph:function(){return kt},QC:function(){return g},QR:function(){return V},Qg:function(){return be},Qi:function(){return nt},Qv:function(){return tn},RF:function(){return T},RO:function(){return b},RQ:function(){return St},Ru:function(){return nn},SX:function(){return ee},SY:function(){return r},Sb:function(){return gt},Sp:function(){return a},T0:function(){return G},TQ:function(){return _t},TR:function(){return W},To:function(){return en},Tr:function(){return jt},Uy:function(){return le},VG:function(){return s},Vb:function(){return je},Vc:function(){return U},Vf:function(){return $e},Vn:function(){return Z},W0:function(){return Je},XL:function(){return v},Xk:function(){return Ht},Xz:function(){return i},Y0:function(){return oe},YF:function(){return ae},YW:function(){return Bt},Yo:function(){return Oe},Zb:function(){return Ce},Zj:function(){return Lt},Zz:function(){return A},_J:function(){return Vt},_V:function(){return un},_Y:function(){return ft},_k:function(){return x},_t:function(){return zt},a5:function(){return Et},aJ:function(){return p},av:function(){return we},b9:function(){return an},bK:function(){return Pt},bV:function(){return xt},c1:function(){return Ve},cW:function(){return Qt},ci:function(){return H},cy:function(){return Ye},de:function(){return ue},dp:function(){return ht},e0:function(){return bt},e6:function(){return it},e7:function(){return Te},eB:function(){return sn},eE:function(){return S},eZ:function(){return Fe},ek:function(){return Q},gJ:function(){return C},h8:function(){return rn},hd:function(){return re},i5:function(){return Ct},iH:function(){return P},iJ:function(){return ye},iW:function(){return ve},iZ:function(){return me},ik:function(){return B},jM:function(){return f},jQ:function(){return He},je:function(){return pe},kU:function(){return Ee},kp:function(){return Jt},ku:function(){return Ke},lu:function(){return ln},ly:function(){return rt},m2:function(){return Ut},mK:function(){return yt},mT:function(){return Be},mc:function(){return L},mh:function(){return _},mm:function(){return o},n9:function(){return Kt},nh:function(){return Mt},nr:function(){return vt},o0:function(){return at},o2:function(){return M},oF:function(){return It},oH:function(){return Y},oT:function(){return u},p2:function(){return Nt},p4:function(){return K},pe:function(){return st},q1:function(){return fe},q2:function(){return Ue},q8:function(){return Ge},qC:function(){return _e},qW:function(){return et},qi:function(){return de},qk:function(){return ct},qw:function(){return d},r7:function(){return ke},s1:function(){return Gt},sE:function(){return Xt},sH:function(){return he},sJ:function(){return c},sL:function(){return j},us:function(){return on},uv:function(){return Ze},vF:function(){return Pe},vt:function(){return Ne},vw:function(){return ie},w3:function(){return Tt},wU:function(){return F},wY:function(){return qe},we:function(){return tt},wm:function(){return R},wx:function(){return Zt},x1:function(){return O},xJ:function(){return ut},xQ:function(){return wt},xn:function(){return E},y7:function(){return X},yQ:function(){return Qe},yj:function(){return $},zb:function(){return mt},zv:function(){return I},zw:function(){return k}});const r="Abs",s="Acos",a="Acosh",o="Add",i="AddN",u="All",l="Any",c="ArgMax",p="ArgMin",h="Asin",d="Asinh",f="Atan",m="Atanh",g="Atan2",y="AvgPool",b="AvgPoolGrad",x="AvgPool3D",w="AvgPool3DGrad",v="BatchMatMul",k="BatchToSpaceND",I="Bincount",N="BroadcastTo",S="BroadcastArgs",T="Cast",C="Ceil",E="ClipByValue",A="Complex",$="ComplexAbs",D="Concat",_="Conv2D",F="Conv2DBackpropFilter",R="Conv2DBackpropInput",O="Conv3D",M="Conv3DBackpropFilterV2",B="Conv3DBackpropInputV2",L="Cos",W="Cosh",z="Cumprod",P="Cumsum",U="CropAndResize",V="DenseBincount",G="DepthToSpace",H="DepthwiseConv2dNative",j="DepthwiseConv2dNativeBackpropFilter",X="DepthwiseConv2dNativeBackpropInput",q="Diag",K="Dilation2D",Q="Dilation2DBackpropInput",Z="Dilation2DBackpropFilter",Y="RealDiv",J="Einsum",ee="Elu",te="EluGrad",ne="Erf",re="Equal",se="Exp",ae="ExpandDims",oe="Expm1",ie="FFT",ue="Fill",le="FlipLeftRight",ce="Floor",pe="FloorDiv",he="FusedBatchNorm",de="GatherV2",fe="GatherNd",me="Greater",ge="GreaterEqual",ye="Identity",be="IFFT",xe="Imag",we="IsFinite",ve="IsInf",ke="IsNan",Ie="LeakyRelu",Ne="Less",Se="LessEqual",Te="LinSpace",Ce="Log",Ee="Log1p",Ae="LogicalAnd",$e="LogicalNot",De="LogicalOr",_e="LogSoftmax",Fe="LRN",Re="LRNGrad",Oe="Max",Me="Maximum",Be="MaxPool",Le="MaxPoolGrad",We="MaxPool3D",ze="MaxPool3DGrad",Pe="MaxPoolWithArgmax",Ue="Mean",Ve="Min",Ge="Minimum",He="MirrorPad",je="Mod",Xe="Multinomial",qe="Multiply",Ke="Neg",Qe="NotEqual",Ze="NonMaxSuppressionV3",Ye="NonMaxSuppressionV4",Je="NonMaxSuppressionV5",et="OnesLike",tt="OneHot",nt="Pack",rt="PadV2",st="Pow",at="Prelu",ot="Prod",it="Range",ut="Real",lt="Reciprocal",ct="Relu",pt="Reshape",ht="ResizeNearestNeighbor",dt="ResizeNearestNeighborGrad",ft="ResizeBilinear",mt="ResizeBilinearGrad",gt="Relu6",yt="Reverse",bt="Round",xt="Rsqrt",wt="ScatterNd",vt="SearchSorted",kt="Select",It="Selu",Nt="Slice",St="Sin",Tt="Sinh",Ct="Sign",Et="Sigmoid",At="Softplus",$t="Sqrt",Dt="Sum",_t="SpaceToBatchND",Ft="SplitV",Rt="Softmax",Ot="SparseFillEmptyRows",Mt="SparseReshape",Bt="SparseSegmentMean",Lt="SparseSegmentSum",Wt="SparseToDense",zt="SquaredDifference",Pt="Square",Ut="StridedSlice",Vt="StringNGrams",Gt="StringSplit",Ht="StringToHashBucketFast",jt="Sub",Xt="Tan",qt="Tanh",Kt="Tile",Qt="TopK",Zt="Transform",Yt="Transpose",Jt="Unique",en="Unpack",tn="UnsortedSegmentSum",nn="ZerosLike",rn="Step",sn="FromPixels",an="RotateWithOffset",on="_FusedMatMul",un="FusedConv2D",ln="FusedDepthwiseConv2D"},6151:function(e,t,n){"use strict";n.d(t,{Li:function(){return h},pI:function(){return u},tr:function(){return c},uk:function(){return l},wC:function(){return p}});var r=n(2885),s=n(5938),a=n(4706);const o=(0,s.R)("kernelRegistry",(()=>new Map)),i=(0,s.R)("gradRegistry",(()=>new Map));function u(e,t){const n=d(e,t);return o.get(n)}function l(e){return i.get(e)}function c(e){const t=o.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[a,o]=s,[i]=a.split("_");i===e&&n.push(o)}return n}function p(e){const{kernelName:t,backendName:n}=e,r=d(t,n);o.has(r)&&a.Z(`The kernel '${t}' for backend '${n}' is already registered`),o.set(r,e)}function h(e){const{kernelName:t}=e;i.has(t)&&(0,r.OB)().getBool("DEBUG")&&a.Z(`Overriding the gradient for '${t}'`),i.set(t,e)}function d(e,t){return`${t}_${e}`}},4706:function(e,t,n){"use strict";n.d(t,{Z:function(){return s},c:function(){return a}});var r=n(2885);function s(...e){(0,r.OB)().getBool("IS_TEST")||(0,r.OB)().getBool("PROD")||console.warn(...e)}function a(...e){(0,r.OB)().getBool("IS_TEST")||(0,r.OB)().getBool("PROD")||console.log(...e)}},6235:function(e,t,n){"use strict";n.d(t,{W:function(){return o}});var r=n(196),s=n(9121),a=n(3740);const o=(0,n(2668).op)({abs_:function(e){const t=(0,a._1)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return r.BV.runKernel(s.yj,e)}{const e={x:t};return r.BV.runKernel(s.SY,e)}}})},6407:function(e,t,n){"use strict";n.d(t,{I:function(){return i}});var r=n(196),s=n(9121),a=n(747),o=n(3740);const i=(0,n(2668).op)({add_:function(e,t){let n=(0,o._1)(e,"a","add"),i=(0,o._1)(t,"b","add");[n,i]=(0,a.makeTypesMatch)(n,i);const u={a:n,b:i};return r.BV.runKernel(s.mm,u)}})},781:function(e,t,n){"use strict";n.d(t,{$:function(){return o}});var r=n(196),s=n(9121),a=n(3740);const o=(0,n(2668).op)({all_:function(e,t=null,n=!1){const o={x:(0,a._1)(e,"x","all","bool")},i={axis:t,keepDims:n};return r.BV.runKernel(s.oT,o,i)}})},2998:function(e,t,n){"use strict";n.d(t,{Y:function(){return o}});var r=n(196),s=n(9121),a=n(3740);const o=(0,n(2668).op)({any_:function(e,t=null,n=!1){const o={x:(0,a._1)(e,"x","any","bool")},i={axis:t,keepDims:n};return r.BV.runKernel(s.IK,o,i)}})},47:function(e,t,n){"use strict";n.d(t,{N:function(){return o}});var r=n(196),s=n(9121),a=n(3740);const o=(0,n(2668).op)({argMax_:function(e,t=0){const n={x:(0,a._1)(e,"x","argMax")},o={axis:t};return r.BV.runKernel(s.sJ,n,o)}})},5176:function(e,t,n){"use strict";n.d(t,{w:function(){return p}});var r=n(196),s=n(9121),a=n(3740),o=n(569),i=n(2271),u=n(2582),l=n(2668),c=n(4968);const p=(0,l.op)({avgPool_:function(e,t,n,l,p){const h=(0,a._1)(e,"x","avgPool","float32");o.hu(u.jT(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let d=h,f=!1;3===h.rank&&(f=!0,d=(0,c.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),o.hu(4===d.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${d.rank}.`)),u.m("avgPool",l,p);const m={x:d},g={filterSize:t,strides:n,pad:l,dimRoundingMode:p};let y=r.BV.runKernel(s.Jh,m,g);return y=(0,i.p)(y,h.dtype),f?(0,c.X)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},1749:function(e,t,n){"use strict";n.d(t,{u:function(){return p}});var r=n(196),s=n(9121),a=n(3740),o=n(569),i=n(2582),u=n(2271),l=n(2668),c=n(4968);const p=(0,l.op)({avgPool3d_:function(e,t,n,l,p,h="NDHWC"){const d=(0,a._1)(e,"x","avgPool3d","float32");let f=d,m=!1;4===d.rank&&(m=!0,f=(0,c.X)(d,[1,d.shape[0],d.shape[1],d.shape[2],d.shape[3]])),o.hu(5===f.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${f.rank}.`)),o.hu("NDHWC"===h,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${h}`)),(0,i.m)("avgPool3d",l,p);const g={x:f},y={filterSize:t,strides:n,pad:l,dimRoundingMode:p,dataFormat:h};let b=r.BV.runKernel(s._k,g,y);return b=(0,u.p)(b,f.dtype),m?(0,c.X)(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}})},3591:function(e,t,n){"use strict";n.d(t,{LJ:function(){return c},Q3:function(){return l},Vh:function(){return a},YB:function(){return s},kz:function(){return o},lB:function(){return u},rv:function(){return i},sY:function(){return p}});var r=n(569);function s(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function a(e,t,n){const r=e.length+t.length,s=[];let a=0,o=0;for(let i=0;i<r;i++)-1===n.indexOf(i)?s.push(e[a++]):s.push(t[o++]);return s}function o(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map((t=>e[t]))]}function i(e,t){return a(e,t.map((e=>1)),t)}function u(e,t,n){r.hu(s(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function l(e,t){if(s(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function c(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function p(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}},94:function(e,t,n){"use strict";n.d(t,{t:function(){return u}});var r=n(196),s=n(9121),a=n(3740),o=n(569),i=n(4968);const u=(0,n(2668).op)({batchNorm_:function(e,t,n,u,l,c){null==c&&(c=.001);const p=(0,a._1)(e,"x","batchNorm"),h=(0,a._1)(t,"mean","batchNorm"),d=(0,a._1)(n,"variance","batchNorm");let f,m;null!=l&&(f=(0,a._1)(l,"scale","batchNorm")),null!=u&&(m=(0,a._1)(u,"offset","batchNorm")),o.hu(h.rank===d.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),o.hu(null==m||h.rank===m.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),o.hu(null==f||h.rank===f.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const g=function(e){let t;return t=0===e.rank||1===e.rank?(0,i.X)(e,[1,1,1,e.size]):2===e.rank?(0,i.X)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?(0,i.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(p),y={x:g,scale:f,offset:m,mean:h,variance:d},b={varianceEpsilon:c},x=r.BV.runKernel(s.sH,y,b);return(0,i.X)(x,p.shape)}})},3865:function(e,t,n){"use strict";n.d(t,{y:function(){return i}});var r=n(196),s=n(9121),a=n(3740),o=n(569);const i=(0,n(2668).op)({bincount_:function(e,t,n){const i=(0,a._1)(e,"x","bincount"),u=(0,a._1)(t,"weights","bincount");o.hu("int32"===i.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${i.dtype}`)),o.hu(n>=0,(()=>`size must be non-negative, but got ${n}.`)),o.hu(u.size===i.size||0===u.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${i.shape}, weights shape: ${u.shape}.`));const l={x:i,weights:u},c={size:n};return r.BV.runKernel(s.zv,l,c)}})},8247:function(e,t,n){"use strict";n.d(t,{U:function(){return l}});var r=n(196),s=n(9121),a=n(3740),o=n(8723),i=n(2668),u=n(4968);const l=(0,i.op)({broadcastTo_:function(e,t){let n=(0,a._1)(e,"broadcastTo","x");const i=n.shape;if(t.some((e=>!(e>0)||e%1!==0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=(0,u.X)(n,e)}const l=n.shape,c=Array.from(t);for(let r=t.length-1;r>=0;r--)if(l[r]===t[r])c[r]=1;else if(1!==n.shape[r])throw new Error(`broadcastTo(): [${i}] cannot be broadcast to [${t}].`);if(0===c.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return(0,o.d)(n);const p={x:n},h={reps:c};return r.BV.runKernel(s.n9,p,h)}})},2200:function(e,t,n){"use strict";function r(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,o=e[a]||1;(t[t.length-1-s]||1)>1&&1===o&&r.unshift(a)}return r}function s(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],a=t.length-r-1,o=t[a];(null==s||1===s&&o>1)&&n.unshift(a)}return n}function a(e,t){const n=[],r=Math.max(e.length,t.length);for(let s=0;s<r;s++){let r=e[e.length-s-1];null==r&&(r=1);let a=t[t.length-s-1];if(null==a&&(a=1),1===r)n.unshift(a);else if(1===a)n.unshift(r);else{if(r!==a){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}n.unshift(r)}}return n}n.r(t),n.d(t,{assertAndGetBroadcastShape:function(){return a},getBroadcastDims:function(){return r},getReductionAxes:function(){return s}})},2657:function(e,t,n){"use strict";n.d(t,{f:function(){return a}});var r=n(974),s=n(569);function a(e,t="float32",n){return t=t||"float32",s.Mu(e),new r.YD(e,t,n)}},2271:function(e,t,n){"use strict";n.d(t,{p:function(){return i}});var r=n(196),s=n(9121),a=n(3740),o=n(569);const i=(0,n(2668).op)({cast_:function(e,t){const n=(0,a._1)(e,"x","cast");if(!o.LP(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const i={x:n},u={dtype:t};return r.BV.runKernel(s.RF,i,u)}})},2279:function(e,t,n){"use strict";n.d(t,{i:function(){return i}});var r=n(196),s=n(9121),a=n(3740),o=n(569);const i=(0,n(2668).op)({clipByValue_:function(e,t,n){const i=(0,a._1)(e,"x","clipByValue");o.hu(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const u={x:i},l={clipValueMin:t,clipValueMax:n};return r.BV.runKernel(s.xn,u,l)}})},8723:function(e,t,n){"use strict";n.d(t,{d:function(){return o}});var r=n(196),s=n(9121),a=n(3740);const o=(0,n(2668).op)({clone_:function(e){const t={x:(0,a._1)(e,"x","clone","string_or_numeric")};return r.BV.runKernel(s.iJ,t)}})},1661:function(e,t,n){"use strict";n.d(t,{P:function(){return i}});var r=n(196),s=n(9121),a=n(3740),o=n(569);const i=(0,n(2668).op)({complex_:function(e,t){const n=(0,a._1)(e,"real","complex"),i=(0,a._1)(t,"imag","complex");o.k5(n.shape,i.shape,`real and imag shapes, ${n.shape} and ${i.shape}, must match in call to tf.complex().`);const u={real:n,imag:i};return r.BV.runKernel(s.Zz,u)}})},6884:function(e,t,n){"use strict";n.d(t,{z:function(){return u}});var r=n(196),s=n(9121),a=n(3740),o=n(569),i=n(8723);const u=(0,n(2668).op)({concat_:function(e,t=0){(0,o.hu)(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=(0,a.sI)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return(0,i.d)(n[0]);const u=n,l={axis:t};return r.BV.runKernel(s.Eh,u,l)}})},1355:function(e,t,n){"use strict";n.d(t,{P:function(){return l}});var r=n(3740),s=n(569),a=n(4794),o=n(2582),i=n(2668),u=n(4968);const l=(0,i.op)({conv1d_:function(e,t,n,i,l="NWC",c=1,p){const h=(0,r._1)(e,"x","conv1d"),d=(0,r._1)(t,"filter","conv1d");let f=h,m=!1;2===h.rank&&(m=!0,f=(0,u.X)(h,[1,h.shape[0],h.shape[1]])),s.hu(3===f.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${f.rank}.`)),s.hu(3===d.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${d.rank}.`)),o.m("conv1d",i,p),s.hu(f.shape[2]===d.shape[1],(()=>`Error in conv1d: depth of input (${f.shape[2]}) must match input depth for filter ${d.shape[1]}.`)),s.hu(o.jT(n,c),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${c}'`)),s.hu("NWC"===l,(()=>`Error in conv1d: got dataFormat of ${l} but only NWC is currently supported.`));const g=(0,u.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]]),y=(0,u.X)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),b=[1,n],x=[1,c],w=(0,a.T)(y,g,b,i,"NHWC",x,p);return m?(0,u.X)(w,[w.shape[2],w.shape[3]]):(0,u.X)(w,[w.shape[0],w.shape[2],w.shape[3]])}})},4794:function(e,t,n){"use strict";n.d(t,{T:function(){return c}});var r=n(196),s=n(9121),a=n(3740),o=n(569),i=n(2582),u=n(2668),l=n(4968);const c=(0,u.op)({conv2d_:function(e,t,n,u,c="NHWC",p=[1,1],h){const d=(0,a._1)(e,"x","conv2d","float32"),f=(0,a._1)(t,"filter","conv2d","float32");let m=d,g=!1;3===d.rank&&(g=!0,m=(0,l.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),o.hu(4===m.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${m.rank}.`)),o.hu(4===f.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${f.rank}.`)),i.m("conv2d",u,h);const y="NHWC"===c?m.shape[3]:m.shape[1];o.hu(y===f.shape[2],(()=>`Error in conv2d: depth of input (${y}) must match input depth for filter ${f.shape[2]}.`)),o.hu(i.jT(n,p),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${p}'`));const b={x:m,filter:f},x={strides:n,pad:u,dataFormat:c,dilations:p,dimRoundingMode:h},w=r.BV.runKernel(s.mh,b,x);return g?(0,l.X)(w,[w.shape[1],w.shape[2],w.shape[3]]):w}})},6013:function(e,t,n){"use strict";n.d(t,{p:function(){return l}});var r=n(196),s=n(9121),a=n(569),o=n(2582),i=n(2668),u=n(4968);const l=(0,i.op)({conv2DBackpropFilter_:function(e,t,n,i,l,c="NHWC",p){let h=e;3===e.rank&&(h=(0,u.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let d=t;3===d.rank&&(d=(0,u.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),a.hu(4===h.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${h.shape}.`)),a.hu(4===d.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${d.shape}.`)),a.hu(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const f="NHWC"===c?h.shape[3]:h.shape[1],m="NHWC"===c?d.shape[3]:d.shape[1];a.hu(f===n[2],(()=>`Error in conv2dDerFilter: depth of input ${f}) must match input depth in filter (${n[2]}.`)),a.hu(m===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${m}) must match output depth for filter (${n[3]}).`)),o.m("conv2dDerFilter",l,p);const g={x:h,dy:d},y={strides:i,pad:l,dataFormat:c,dimRoundingMode:p,filterShape:n};return r.BV.runKernel(s.wU,g,y)}})},9832:function(e,t,n){"use strict";n.d(t,{_:function(){return l}});var r=n(196),s=n(9121),a=n(569),o=n(2582),i=n(2668),u=n(4968);const l=(0,i.op)({conv2DBackpropInput_:function(e,t,n,i,l,c="NHWC",p){a.hu(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let h=e,d=t,f=!1;3===t.rank&&(f=!0,d=(0,u.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),h=[1,e[0],e[1],e[2]]),a.hu(4===h.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${h.length}.`)),a.hu(4===d.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${d.rank}`)),a.hu(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const m="NHWC"===c?h[3]:h[1],g="NHWC"===c?d.shape[3]:d.shape[1];a.hu(m===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${m}) must match input depth for filter ${n.shape[2]}.`)),a.hu(g===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${g}) must match output depth for filter ${n.shape[3]}.`)),o.m("conv2dDerInput",l,p);const y={dy:d,filter:n},b={strides:i,pad:l,dataFormat:c,dimRoundingMode:p,inputShape:h},x=r.BV.runKernel(s.wm,y,b);return f?(0,u.X)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},1405:function(e,t,n){"use strict";n.d(t,{b:function(){return a}});var r=n(3740),s=n(9832);const a=(0,n(2668).op)({conv2dTranspose_:function(e,t,n,a,o,i){const u=(0,r._1)(e,"x","conv2dTranspose"),l=(0,r._1)(t,"filter","conv2dTranspose");return(0,s._)(n,u,l,a,o,"NHWC",i)}})},473:function(e,t,n){"use strict";n.d(t,{p:function(){return c}});var r=n(196),s=n(9121),a=n(3740),o=n(569),i=n(2582),u=n(2668),l=n(4968);const c=(0,u.op)({conv3d_:function(e,t,n,u,c="NDHWC",p=[1,1,1]){const h=(0,a._1)(e,"x","conv3d"),d=(0,a._1)(t,"filter","conv3d");let f=h,m=!1;4===h.rank&&(m=!0,f=(0,l.X)(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),o.hu(5===f.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${f.rank}.`)),o.hu(5===d.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${d.rank}.`)),o.hu(f.shape[4]===d.shape[3],(()=>`Error in conv3d: depth of input (${f.shape[4]}) must match input depth for filter ${d.shape[3]}.`)),o.hu((0,i.jT)(n,p),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${p}'`)),o.hu("NDHWC"===c,(()=>`Error in conv3d: got dataFormat of ${c} but only NDHWC is currently supported.`));const g={x:f,filter:d},y={strides:n,pad:u,dataFormat:c,dilations:p},b=r.BV.runKernel(s.x1,g,y);return m?(0,l.X)(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}})},7594:function(e,t,n){"use strict";n.d(t,{_:function(){return u}});var r=n(196),s=n(9121),a=n(569),o=n(2668),i=n(4968);const u=(0,o.op)({conv3DBackpropInput_:function(e,t,n,o,u){a.hu(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let l=e,c=t,p=!1;4===t.rank&&(p=!0,c=(0,i.X)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),l=[1,e[0],e[1],e[2],e[3]]);const h=l[4],d=c.shape[4];a.hu(5===l.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${l.length}.`)),a.hu(5===c.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${c.rank}`)),a.hu(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),a.hu(h===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${h}) must match input depth for filter ${n.shape[3]}.`)),a.hu(d===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[4]}.`));const f={dy:c,filter:n},m={pad:u,strides:o,inputShape:l},g=r.BV.runKernel(s.ik,f,m);return p?(0,i.X)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}})},2582:function(e,t,n){"use strict";n.d(t,{I0:function(){return f},Ix:function(){return i},Rf:function(){return s},Xw:function(){return a},aO:function(){return l},jT:function(){return m},jw:function(){return u},m:function(){return y},pl:function(){return o},sl:function(){return g}});var r=n(569);function s(e,t,n,r,s="NHWC",a){return i(e,[...t,e[3]],n,a,r,null,null,g(s))}function a(e,t,n,r,s,a,o="channelsLast"){const[u,l]=c(t);let p;if("channelsLast"===o)p=[u,l,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);p=[u,l,e[1],e[1]]}return i(e,p,n,r,s,a,!1,o)}function o(e,t,n,r,s,a,o="NDHWC"){const[i,l,c]=p(t);let h,d;if("NDHWC"===o)d="channelsLast",h=[i,l,c,e[4],e[4]];else{if("NCDHW"!==o)throw new Error(`Unknown dataFormat ${o}`);d="channelsFirst",h=[i,l,c,e[1],e[1]]}return u(e,h,n,r,s,!1,d,a)}function i(e,t,n,r,s,a,o=!1,i="channelsLast"){let[u,p,f,m]=[-1,-1,-1,-1];if("channelsLast"===i)[u,p,f,m]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,m,p,f]=e}const[g,y,,b]=t,[x,w]=c(n),[v,k]=c(r),I=h(g,v),N=h(y,k),{padInfo:S,outHeight:T,outWidth:C}=function(e,t,n,r,s,a,o,i,u){let c,p,h;if("number"===typeof e){c={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=l(e,t,n));const a=e[0],o=e[1],i=d((a-t+2*r)/n+1,s),u=d((o-t+2*r)/n+1,s);return[i,u]}([t,n],a,r,e,i);p=s[0],h=s[1]}else if("same"===e){p=Math.ceil(t/r),h=Math.ceil(n/s);const e=Math.max(0,(p-1)*r+a-t),i=Math.max(0,(h-1)*s+o-n),u=Math.floor(e/2),l=e-u,d=Math.floor(i/2);c={top:u,bottom:l,left:d,right:i-d,type:"SAME"}}else if("valid"===e)c={top:0,bottom:0,left:0,right:0,type:"VALID"},p=Math.ceil((t-a+1)/r),h=Math.ceil((n-o+1)/s);else{if("object"!==typeof e)throw Error(`Unknown padding parameter: ${e}`);{const l="channelsLast"===u?e[1][0]:e[2][0],f="channelsLast"===u?e[1][1]:e[2][1],m="channelsLast"===u?e[2][0]:e[3][0],g="channelsLast"===u?e[2][1]:e[3][1];c={top:l,bottom:f,left:m,right:g,type:0===l&&0===f&&0===m&&0===g?"VALID":"EXPLICIT"},p=d((t-a+l+f)/r+1,i),h=d((n-o+m+g)/s+1,i)}}return{padInfo:c,outHeight:p,outWidth:h}}(s,p,f,x,w,I,N,a,i),E=o?b*m:b;let A;return"channelsFirst"===i?A=[u,E,T,C]:"channelsLast"===i&&(A=[u,T,C,E]),{batchSize:u,dataFormat:i,inHeight:p,inWidth:f,inChannels:m,outHeight:T,outWidth:C,outChannels:E,padInfo:S,strideHeight:x,strideWidth:w,filterHeight:g,filterWidth:y,effectiveFilterHeight:I,effectiveFilterWidth:N,dilationHeight:v,dilationWidth:k,inShape:e,outShape:A,filterShape:t}}function u(e,t,n,r,s,a=!1,o="channelsLast",i){let[u,c,f,m,g]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[u,c,f,m,g]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,g,c,f,m]=e}const[y,b,x,,w]=t,[v,k,I]=p(n),[N,S,T]=p(r),C=h(y,N),E=h(b,S),A=h(x,T),{padInfo:$,outDepth:D,outHeight:_,outWidth:F}=function(e,t,n,r,s,a,o,i,u,c,p){let h,f,m,g;if("number"===typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,s,a){null==s&&(s=l(e,t,r));const o=e[0],i=e[1],u=e[2],c=d((o-t+2*s)/r+1,a),p=d((i-t+2*s)/r+1,a),h=d((u-t+2*s)/r+1,a);return[c,p,h,n]}([t,n,r,1],i,1,s,e,p);f=a[0],m=a[1],g=a[2]}else if("same"===e){f=Math.ceil(t/s),m=Math.ceil(n/a),g=Math.ceil(r/o);const e=(f-1)*s+i-t,l=(m-1)*a+u-n,p=(g-1)*o+c-r,d=Math.floor(e/2),y=e-d,b=Math.floor(l/2),x=l-b,w=Math.floor(p/2);h={top:b,bottom:x,left:w,right:p-w,front:d,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},f=Math.ceil((t-i+1)/s),m=Math.ceil((n-u+1)/a),g=Math.ceil((r-c+1)/o)}return{padInfo:h,outDepth:f,outHeight:m,outWidth:g}}(s,c,f,m,v,k,I,C,E,A,i),R=a?w*g:w;let O;return"channelsFirst"===o?O=[u,R,D,_,F]:"channelsLast"===o&&(O=[u,D,_,F,R]),{batchSize:u,dataFormat:o,inDepth:c,inHeight:f,inWidth:m,inChannels:g,outDepth:D,outHeight:_,outWidth:F,outChannels:R,padInfo:$,strideDepth:v,strideHeight:k,strideWidth:I,filterDepth:y,filterHeight:b,filterWidth:x,effectiveFilterDepth:C,effectiveFilterHeight:E,effectiveFilterWidth:A,dilationDepth:N,dilationHeight:S,dilationWidth:T,inShape:e,outShape:O,filterShape:t}}function l(e,t,n,r=1){const s=h(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function c(e){return"number"===typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function p(e){return"number"===typeof e?[e,e,e]:e}function h(e,t){return t<=1?e:e+(e-1)*(t-1)}function d(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function f(e){const[t,n,r]=c(e);return 1===t&&1===n&&1===r}function m(e,t){return f(e)||f(t)}function g(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function y(e,t,n){if(null!=n){if("string"===typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"===typeof t)r.hu(r.GN(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!==typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{r.hu(r.GN(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}},4718:function(e,t,n){"use strict";n.d(t,{B:function(){return c}});var r=n(196),s=n(9121),a=n(3740),o=n(569),i=n(2582),u=n(2668),l=n(4968);const c=(0,u.op)({depthwiseConv2d_:function(e,t,n,u,c="NHWC",p=[1,1],h){const d=(0,a._1)(e,"x","depthwiseConv2d","float32"),f=(0,a._1)(t,"filter","depthwiseConv2d","float32");let m=d,g=!1;3===d.rank&&(g=!0,m=(0,l.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),o.hu(4===m.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${m.rank}.`)),o.hu(4===f.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${f.rank}.`)),o.hu(m.shape[3]===f.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${m.shape[3]}) must match the inChannels dimension in filter ${f.shape[2]}.`)),i.m("depthwiseConv2d",u,h);const y={x:m,filter:f},b={strides:n,pad:u,dataFormat:c,dilations:p,dimRoundingMode:h},x=r.BV.runKernel(s.ci,y,b);return g?(0,l.X)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},8098:function(e,t,n){"use strict";n.d(t,{z:function(){return i}});var r=n(196),s=n(9121),a=n(2668),o=n(4968);const i=(0,a.op)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,a,i,u=[1,1],l){let c=e;3===e.rank&&(c=(0,o.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let p=t;3===p.rank&&(p=(0,o.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h={x:c,dy:p},d={strides:a,pad:i,dimRoundingMode:l,dilations:u,filterShape:n};return r.BV.runKernel(s.sL,h,d)}})},4375:function(e,t,n){"use strict";n.d(t,{v:function(){return i}});var r=n(196),s=n(9121),a=n(2668),o=n(4968);const i=(0,a.op)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,a,i,u=[1,1],l){let c=t,p=!1;3===t.rank&&(p=!0,c=(0,o.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h={dy:c,filter:n},d={strides:a,pad:i,dimRoundingMode:l,dilations:u,inputShape:e},f=r.BV.runKernel(s.y7,h,d);return p?(0,o.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},1274:function(e,t,n){"use strict";n.d(t,{h:function(){return u}});var r=n(196),s=n(9121),a=n(747),o=n(3740),i=n(9165);const u=(0,n(2668).op)({div_:function(e,t){let n=(0,o._1)(e,"a","div"),u=(0,o._1)(t,"b","div");if([n,u]=(0,a.makeTypesMatch)(n,u),"int32"===n.dtype&&"int32"===u.dtype)return(0,i.q)(n,u);const l={a:n,b:u};return r.BV.runKernel(s.oH,l,{})}})},3233:function(e,t,n){"use strict";n.d(t,{p:function(){return o}});var r=n(196),s=n(9121),a=n(3740);const o=(0,n(2668).op)({elu_:function(e){const t={x:(0,a._1)(e,"x","elu","float32")};return r.BV.runKernel(s.SX,t)}})},6477:function(e,t,n){"use strict";n.d(t,{D:function(){return u}});var r=n(196),s=n(9121),a=n(747),o=n(3740),i=n(2200);const u=(0,n(2668).op)({equal_:function(e,t){let n=(0,o._1)(e,"a","equal","string_or_numeric"),u=(0,o._1)(t,"b","equal","string_or_numeric");[n,u]=(0,a.makeTypesMatch)(n,u),(0,i.assertAndGetBroadcastShape)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(s.hd,l)}})},4842:function(e,t,n){"use strict";n.d(t,{Q:function(){return o}});var r=n(196),s=n(9121),a=n(3740);const o=(0,n(2668).op)({exp_:function(e){const t={x:(0,a._1)(e,"x","exp")};return r.BV.runKernel(s.NE,t)}})},1300:function(e,t,n){"use strict";n.d(t,{d:function(){return i}});var r=n(196),s=n(9121),a=n(3740),o=n(569);const i=(0,n(2668).op)({expandDims_:function(e,t=0){const n=(0,a._1)(e,"x","expandDims","string_or_numeric");o.hu(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const i={input:n},u={dim:t};return r.BV.runKernel(s.YF,i,u)}})},4006:function(e,t,n){"use strict";n.d(t,{h:function(){return a}});var r=n(196),s=n(9121);function a(e,t,n){const a={shape:e,value:t,dtype:n};return r.BV.runKernel(s.de,{},a)}},6943:function(e,t,n){"use strict";n.d(t,{G:function(){return o}});var r=n(196),s=n(9121),a=n(3740);const o=(0,n(2668).op)({floor_:function(e){const t={x:(0,a._1)(e,"x","floor","float32")};return r.BV.runKernel(s.OR,t)}})},9165:function(e,t,n){"use strict";n.d(t,{q:function(){return i}});var r=n(196),s=n(9121),a=n(747),o=n(3740);const i=(0,n(2668).op)({floorDiv_:function(e,t){let n=(0,o._1)(e,"a","floorDiv"),i=(0,o._1)(t,"b","floorDiv");[n,i]=(0,a.makeTypesMatch)(n,i);const u={a:n,b:i};return r.BV.runKernel(s.je,u)}})},3854:function(e,t,n){"use strict";n.r(t),n.d(t,{conv2d:function(){return b},depthwiseConv2d:function(){return k},matMul:function(){return N}});var r=n(196),s=n(633),a=n(9121),o=n(747),i=n(3740),u=n(569),l=n(6407),c=n(2200),p=n(4794),h=n(6013),d=n(9832),f=n(2582),m=n(9323),g=n(2668),y=n(4968);const b=(0,g.op)({fusedConv2d_:function({x:e,filter:t,strides:n,pad:g,dataFormat:b="NHWC",dilations:x=[1,1],dimRoundingMode:w,bias:v,activation:k="linear",preluActivationWeights:I,leakyreluAlpha:N}){if(k=k||"linear",!1===(0,m.uy)(r.BV.state.gradientDepth,k)){u.hu("NHWC"===b,(()=>`Error in fused conv2d: got dataFormat of ${b} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let r=(0,p.T)(e,t,n,g,b,x,w);return null!=v&&(r=(0,l.I)(r,v)),(0,m.QH)(r,k,I,N)}const S=(0,i._1)(e,"x","conv2d","float32"),T=(0,i._1)(t,"filter","conv2d","float32");let C=S,E=!1;3===S.rank&&(E=!0,C=(0,y.X)(S,[1,S.shape[0],S.shape[1],S.shape[2]])),u.hu(4===C.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${C.rank}.`)),u.hu(4===T.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${T.rank}.`)),f.m("fused conv2d",g,w);const A="NHWC"===b?C.shape[3]:C.shape[1];u.hu(T.shape[2]===A,(()=>`Error in conv2d: depth of input (${A}) must match input depth for filter ${T.shape[2]}.`)),u.hu(f.jT(n,x),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${x}'`));const $=f.Ix(C.shape,T.shape,n,x,g,w);let D,_;if(null!=v&&(D=(0,i._1)(v,"bias","fused conv2d"),[D]=(0,o.makeTypesMatch)(D,S),"NHWC"===b?c.assertAndGetBroadcastShape($.outShape,D.shape):(u.hu(D.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${D.shape.length}.`)),u.hu(0===D.shape.length||D.shape[0]===$.outChannels||1===D.shape[0],(()=>`Error in fused conv2d: bias shape (${D.shape}) is not compatible with the number of output channels (${$.outChannels})`)))),null!=I){const e=I.shape;if(u.hu(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)u.hu(1===e[0]||e[0]===$.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${$.outChannels}).`));else if(3===e.length)try{c.assertAndGetBroadcastShape(e,$.outShape)}catch(M){const t=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${$.outShape}).`;throw Error(t)}_=(0,i._1)(I,"prelu weights","fused conv2d")}const F=(e,t)=>{u.hu("NHWC"===b,(()=>`Error in gradient of fused conv2D: got dataFormat of ${b} but only NHWC is currently supported.`));const[r,s,a,o]=t,i=(0,m.Fr)(e,a,k);u.hu(f.I0(x),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${x}'`));const l=[(0,d._)(s.shape,i,r,n,g),(0,h.p)(s,i,r.shape,n,g)];if(null!=o){const e=(0,m.pf)(o,i);l.push(e)}return l},R={x:C,filter:T,bias:D,preluActivationWeights:_},O={strides:n,pad:g,dataFormat:b,dilations:x,dimRoundingMode:w,activation:k,leakyreluAlpha:N};if(null==v){const e=(0,s.cb)(((e,t,n)=>{let s=r.BV.runKernel(a._V,R,O);return n([t,e,s]),E&&(s=(0,y.X)(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:F}}));return e(C,T)}{const e=(0,s.cb)(((e,t,n,s)=>{let o=r.BV.runKernel(a._V,R,O);return s([t,e,o,n]),E&&(o=(0,y.X)(o,[o.shape[1],o.shape[2],o.shape[3]])),{value:o,gradFunc:F}}));return e(C,T,D)}}});var x=n(4718),w=n(8098),v=n(4375);const k=(0,g.op)({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:p,dataFormat:h="NHWC",dilations:d=[1,1],dimRoundingMode:g,bias:b,activation:k="linear",preluActivationWeights:I,leakyreluAlpha:N}){if(!1===(0,m.uy)(r.BV.state.gradientDepth,k)){let r=(0,x.B)(e,t,n,p,h,d,g);return null!=b&&(r=(0,l.I)(r,b)),(0,m.QH)(r,k,I,N)}const S=(0,i._1)(e,"x","depthwiseConv2d","float32"),T=(0,i._1)(t,"filter","depthwiseConv2d","float32");let C=S,E=!1;3===S.rank&&(E=!0,C=(0,y.X)(S,[1,S.shape[0],S.shape[1],S.shape[2]])),u.hu(4===C.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${C.rank}.`)),u.hu(4===T.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${T.rank}.`)),u.hu(C.shape[3]===T.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${C.shape[3]}) must match the inChannels dimension in filter ${T.shape[2]}.`)),null==d&&(d=[1,1]),u.hu(f.jT(n,d),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${d}'`)),f.m("fused depthwiseConv2d",p,g);const A=f.Ix(C.shape,T.shape,n,d,p,g,!0);let $,D;null!=b&&($=(0,i._1)(b,"bias","fused conv2d"),[$]=(0,o.makeTypesMatch)($,S),c.assertAndGetBroadcastShape(A.outShape,$.shape)),null!=I&&(D=(0,i._1)(I,"prelu weights","fused depthwiseConv2d"));const _=(e,t)=>{u.hu(f.I0(d),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${d}'`));const[r,s,a,o]=t,i=(0,m.Fr)(e,a,k),l=(0,v.v)(s.shape,i,r,n,p,d,g),c=(0,w.z)(s,i,r.shape,n,p,d,g);if(null!=o){return[l,c,(0,m.pf)($,i)]}return[l,c]},F={x:C,filter:T,bias:$,preluActivationWeights:D},R={strides:n,pad:p,dataFormat:h,dilations:d,dimRoundingMode:g,activation:k,leakyreluAlpha:N};if(null==b){const e=(0,s.cb)(((e,t,n)=>{let s=r.BV.runKernel(a.lu,F,R);return n([t,e,s]),E&&(s=(0,y.X)(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:_}}));return e(C,T)}{const e=(0,s.cb)(((e,t,n,s)=>{let o=r.BV.runKernel(a.lu,F,R);return s([t,e,o,n]),E&&(o=(0,y.X)(o,[o.shape[1],o.shape[2],o.shape[3]])),{value:o,gradFunc:_}}));return e(C,T,$)}}});var I=n(8687);const N=(0,g.op)({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:p=!1,bias:h,activation:d="linear",preluActivationWeights:f,leakyreluAlpha:g}){if(!1===(0,m.uy)(r.BV.state.gradientDepth,d)){let r=(0,I.O)(e,t,n,p);return null!=h&&(r=(0,l.I)(r,h)),(0,m.QH)(r,d,f,g)}let b=(0,i._1)(e,"a","fused matMul"),x=(0,i._1)(t,"b","fused matMul");[b,x]=(0,o.makeTypesMatch)(b,x);const w=n?b.shape[b.rank-2]:b.shape[b.rank-1],v=p?x.shape[x.rank-1]:x.shape[x.rank-2],k=n?b.shape[b.rank-1]:b.shape[b.rank-2],N=p?x.shape[x.rank-2]:x.shape[x.rank-1],S=b.shape.slice(0,-2),T=x.shape.slice(0,-2),C=u.NA(S),E=u.NA(T);u.hu(w===v,(()=>`Error in fused matMul: inner shapes (${w}) and (${v}) of Tensors with shapes ${b.shape} and ${x.shape} and transposeA=${n} and transposeB=${p} must match.`));const A=c.assertAndGetBroadcastShape(b.shape.slice(0,-2),x.shape.slice(0,-2)).concat([k,N]),$=n?(0,y.X)(b,[C,w,k]):(0,y.X)(b,[C,k,w]),D=p?(0,y.X)(x,[E,N,v]):(0,y.X)(x,[E,v,N]);let _,F;null!=h&&(_=(0,i._1)(h,"bias","fused matMul"),[_]=(0,o.makeTypesMatch)(_,b),c.assertAndGetBroadcastShape(A,_.shape)),null!=f&&(F=(0,i._1)(f,"prelu weights","fused matMul"));const R=(e,t)=>{const[r,s,a,o]=t,i=(0,m.Fr)((0,y.X)(e,a.shape),a,d);let u,l;if(n||p?!n&&p?(u=(0,I.O)(i,s,!1,!1),l=(0,I.O)(i,r,!0,!1)):n&&!p?(u=(0,I.O)(s,i,!1,!0),l=(0,I.O)(r,i,!1,!1)):(u=(0,I.O)(s,i,!0,!0),l=(0,I.O)(i,r,!0,!0)):(u=(0,I.O)(i,s,!1,!0),l=(0,I.O)(r,i,!0,!1)),null!=h){return[u,l,(0,m.pf)(o,i)]}return[u,l]},O={a:$,b:D,bias:_,preluActivationWeights:F},M={transposeA:n,transposeB:p,activation:d,leakyreluAlpha:g};if(null==h){const e=(0,s.cb)(((e,t,n)=>{const s=r.BV.runKernel(a.us,O,M);return n([e,t,s]),{value:(0,y.X)(s,A),gradFunc:R}}));return e($,D)}{const e=(0,s.cb)(((e,t,n,s)=>{const o=r.BV.runKernel(a.us,O,M);return s([e,t,o,n]),{value:(0,y.X)(o,A),gradFunc:R}}));return e($,D,_)}}})},9323:function(e,t,n){"use strict";n.d(t,{Fr:function(){return f},QH:function(){return g},pf:function(){return m},uy:function(){return y}});var r=n(2200),s=n(3233),a=n(9133),o=n(4841),i=n(8151),u=n(7409),l=n(3582),c=n(4968),p=n(625),h=n(1901),d=n(5475);function f(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return(0,o.d)(e,(0,h.N)(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function m(e,t){let n=t;const s=r.getReductionAxes(e.shape,t.shape);return s.length>0&&(n=(0,d.S)(n,s)),(0,c.X)(n,e.shape)}function g(e,t,n,r){if("linear"===t)return e;if("relu"===t)return(0,u.U)(e);if("elu"===t)return(0,s.p)(e);if("relu6"===t)return(0,l.b)(e);if("prelu"===t)return(0,i.A)(e,n);if("leakyrelu"===t)return(0,a.h)(e,r);if("sigmoid"===t)return(0,p.X)(e);throw new Error(`Unknown fused activation ${t}.`)}const y=(e,t)=>!(e>0)||"linear"===t},4926:function(e,t,n){"use strict";n.d(t,{I:function(){return o}});var r=n(196),s=n(9121),a=n(3740);const o=(0,n(2668).op)({gather_:function(e,t,n=0,o=0){const i={x:(0,a._1)(e,"x","gather"),indices:(0,a._1)(t,"indices","gather","int32")},u={axis:n,batchDims:o};return r.BV.runKernel(s.qi,i,u)}})},636:function(e,t,n){"use strict";n.d(t,{p:function(){return u}});var r=n(196),s=n(9121),a=n(747),o=n(3740),i=n(2200);const u=(0,n(2668).op)({greater_:function(e,t){let n=(0,o._1)(e,"a","greater","string_or_numeric"),u=(0,o._1)(t,"b","greater","string_or_numeric");[n,u]=(0,a.makeTypesMatch)(n,u),(0,i.assertAndGetBroadcastShape)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(s.iZ,l)}})},7630:function(e,t,n){"use strict";n.d(t,{b:function(){return u}});var r=n(196),s=n(9121),a=n(747),o=n(3740),i=n(2200);const u=(0,n(2668).op)({greaterEqual_:function(e,t){let n=(0,o._1)(e,"a","greaterEqual","string_or_numeric"),u=(0,o._1)(t,"b","greaterEqual","string_or_numeric");[n,u]=(0,a.makeTypesMatch)(n,u),(0,i.assertAndGetBroadcastShape)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(s.Ac,l)}})},4386:function(e,t,n){"use strict";n.d(t,{a:function(){return o}});var r=n(196),s=n(9121),a=n(3740);const o=(0,n(2668).op)({imag_:function(e){const t={input:(0,a._1)(e,"input","imag")};return r.BV.runKernel(s.J_,t)}})},3305:function(e,t,n){"use strict";n.d(t,{I:function(){return l}});var r=n(196),s=n(9121),a=n(3740),o=n(569),i=n(2668),u=n(4968);const l=(0,i.op)({resizeBilinear_:function(e,t,n=!1,i=!1){const l=(0,a._1)(e,"images","resizeBilinear");o.hu(3===l.rank||4===l.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${l.rank}.`)),o.hu(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),o.hu(!1===i||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let c=l,p=!1;3===l.rank&&(p=!0,c=(0,u.X)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const[]=t,h={images:c},d={alignCorners:n,halfPixelCenters:i,size:t},f=r.BV.runKernel(s._Y,h,d);return p?(0,u.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},5098:function(e,t,n){"use strict";n.d(t,{j:function(){return l}});var r=n(196),s=n(9121),a=n(3740),o=n(569),i=n(2668),u=n(4968);const l=(0,i.op)({resizeNearestNeighbor_:function(e,t,n=!1,i=!1){const l=(0,a._1)(e,"images","resizeNearestNeighbor");o.hu(3===l.rank||4===l.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${l.rank}.`)),o.hu(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),o.hu("float32"===l.dtype||"int32"===l.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),o.hu(!1===i||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let c=l,p=!1;3===l.rank&&(p=!0,c=(0,u.X)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const[]=t,h={images:c},d={alignCorners:n,halfPixelCenters:i,size:t},f=r.BV.runKernel(s.dp,h,d);return p?(0,u.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},9133:function(e,t,n){"use strict";n.d(t,{h:function(){return o}});var r=n(196),s=n(9121),a=n(3740);const o=(0,n(2668).op)({leakyRelu_:function(e,t=.2){const n={x:(0,a._1)(e,"x","leakyRelu")},o={alpha:t};return r.BV.runKernel(s.J$,n,o)}})},624:function(e,t,n){"use strict";n.d(t,{z:function(){return u}});var r=n(196),s=n(9121),a=n(747),o=n(3740),i=n(2200);const u=(0,n(2668).op)({lessEqual_:function(e,t){let n=(0,o._1)(e,"a","lessEqual","string_or_numeric"),u=(0,o._1)(t,"b","lessEqual","string_or_numeric");[n,u]=(0,a.makeTypesMatch)(n,u),(0,i.assertAndGetBroadcastShape)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(s.CA,l)}})},2597:function(e,t,n){"use strict";n.d(t,{c:function(){return o}});var r=n(196),s=n(9121),a=n(3740);const o=(0,n(2668).op)({log_:function(e){const t={x:(0,a._1)(e,"x","log","float32")};return r.BV.runKernel(s.Zb,t)}})},7474:function(e,t,n){"use strict";n.d(t,{K:function(){return o}});var r=n(196),s=n(9121),a=n(3740);const o=(0,n(2668).op)({log1p_:function(e){const t={x:(0,a._1)(e,"x","log1p")};return r.BV.runKernel(s.kU,t)}})},1510:function(e,t,n){"use strict";n.d(t,{C:function(){return d}});var r=n(633),s=n(3740),a=n(2271),o=n(4842),i=n(2597),u=n(3307),l=n(4841),c=n(2668),p=n(827),h=n(5475);const d=(0,c.op)({logSoftmax_:function(e,t=-1){const n=(0,s._1)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const c=(0,r.cb)(((e,n)=>{const r=(0,u.F)(e,t,!0),s=(0,p.l)(e,r),c=(0,p.l)((0,a.p)(s,"float32"),(0,i.c)((0,h.S)((0,o.Q)(s),t,!0)));n([c]);return{value:c,gradFunc:(e,n)=>{const[r]=n,s=(0,o.Q)(r);return(0,p.l)(e,(0,l.d)((0,h.S)(e,t,!0),s))}}}));return c(n)}})},1391:function(e,t,n){"use strict";n.d(t,{l:function(){return f}});var r=n(3740),s=n(569),a=n(6407),o=n(3591),i=n(4842),u=n(2597),l=n(3307),c=n(2668),p=n(4968),h=n(827),d=n(5475);const f=(0,c.op)({logSumExp_:function(e,t=null,n=!1){const c=(0,r._1)(e,"x","logSumExp"),f=(0,s.EC)(t,c.shape),m=(0,l.F)(c,f,!0),g=(0,h.l)(c,m),y=(0,i.Q)(g),b=(0,d.S)(y,f),x=(0,u.c)(b),w=(0,a.I)((0,p.X)(m,x.shape),x);if(n){const e=(0,o.rv)(w.shape,f);return(0,p.X)(w,e)}return w}})},2856:function(e,t,n){"use strict";n.d(t,{H:function(){return i}});var r=n(196),s=n(9121),a=n(3740),o=n(2200);const i=(0,n(2668).op)({logicalAnd_:function(e,t){const n=(0,a._1)(e,"a","logicalAnd","bool"),i=(0,a._1)(t,"b","logicalAnd","bool");(0,o.assertAndGetBroadcastShape)(n.shape,i.shape);const u={a:n,b:i};return r.BV.runKernel(s.PY,u)}})},8687:function(e,t,n){"use strict";n.d(t,{O:function(){return i}});var r=n(196),s=n(9121),a=n(747),o=n(3740);const i=(0,n(2668).op)({matMul_:function(e,t,n=!1,i=!1){let u=(0,o._1)(e,"a","matMul"),l=(0,o._1)(t,"b","matMul");[u,l]=(0,a.makeTypesMatch)(u,l);const c={a:u,b:l},p={transposeA:n,transposeB:i};return r.BV.runKernel(s.XL,c,p)}})},3307:function(e,t,n){"use strict";n.d(t,{F:function(){return o}});var r=n(196),s=n(9121),a=n(3740);const o=(0,n(2668).op)({max_:function(e,t=null,n=!1){const o={x:(0,a._1)(e,"x","max")},i={reductionIndices:t,keepDims:n};return r.BV.runKernel(s.Yo,o,i)}})},1174:function(e,t,n){"use strict";n.d(t,{_:function(){return c}});var r=n(196),s=n(9121),a=n(3740),o=n(569),i=n(2582),u=n(2668),l=n(4968);const c=(0,u.op)({maxPool_:function(e,t,n,u,c){const p=(0,a._1)(e,"x","maxPool");let h=p,d=!1;3===p.rank&&(d=!0,h=(0,l.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),o.hu(4===h.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${h.rank}.`)),o.hu(i.jT(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),i.m("maxPool",u,c);const f={x:h},m={filterSize:t,strides:n,pad:u,dimRoundingMode:c},g=r.BV.runKernel(s.mT,f,m);return d?(0,l.X)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},5020:function(e,t,n){"use strict";n.d(t,{Y:function(){return c}});var r=n(196),s=n(9121),a=n(3740),o=n(569),i=n(2582),u=n(2668),l=n(4968);const c=(0,u.op)({maxPool3d_:function(e,t=[1,1,1],n,u,c,p="NDHWC"){const h=(0,a._1)(e,"x","maxPool3d");let d=h,f=!1;4===h.rank&&(f=!0,d=(0,l.X)(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),o.hu(5===d.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${d.rank}.`)),o.hu("NDHWC"===p,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${p}`)),(0,i.m)("maxPool3d",u,c);const m={x:d},g={filterSize:t,strides:n,pad:u,dimRoundingMode:c,dataFormat:p},y=r.BV.runKernel(s.OA,m,g);return f?(0,l.X)(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}})},632:function(e,t,n){"use strict";n.d(t,{g:function(){return l}});var r=n(196),s=n(9121),a=n(747),o=n(3740),i=n(2200),u=n(2271);const l=(0,n(2668).op)({maximum_:function(e,t){let n=(0,o._1)(e,"a","maximum"),l=(0,o._1)(t,"b","maximum");[n,l]=(0,a.makeTypesMatch)(n,l),"bool"===n.dtype&&(n=(0,u.p)(n,"int32"),l=(0,u.p)(l,"int32")),(0,i.assertAndGetBroadcastShape)(n.shape,l.shape);const c={a:n,b:l};return r.BV.runKernel(s.BM,c)}})},5130:function(e,t,n){"use strict";n.d(t,{J:function(){return o}});var r=n(196),s=n(9121),a=n(3740);const o=(0,n(2668).op)({mean_:function(e,t=null,n=!1){const o={x:(0,a._1)(e,"x","mean")},i={axis:t,keepDims:n};return r.BV.runKernel(s.q2,o,i)}})},5735:function(e,t,n){"use strict";n.d(t,{V:function(){return o}});var r=n(196),s=n(9121),a=n(3740);const o=(0,n(2668).op)({min_:function(e,t=null,n=!1){const o={x:(0,a._1)(e,"x","min")},i={axis:t,keepDims:n};return r.BV.runKernel(s.c1,o,i)}})},4513:function(e,t,n){"use strict";n.d(t,{L:function(){return l}});var r=n(196),s=n(9121),a=n(747),o=n(3740),i=n(2200),u=n(2271);const l=(0,n(2668).op)({minimum_:function(e,t){let n=(0,o._1)(e,"a","minimum"),l=(0,o._1)(t,"b","minimum");[n,l]=(0,a.makeTypesMatch)(n,l),"bool"===n.dtype&&(n=(0,u.p)(n,"int32"),l=(0,u.p)(l,"int32")),(0,i.assertAndGetBroadcastShape)(n.shape,l.shape);const c={a:n,b:l};return r.BV.runKernel(s.q8,c)}})},4841:function(e,t,n){"use strict";n.d(t,{d:function(){return i}});var r=n(196),s=n(9121),a=n(747),o=n(3740);const i=(0,n(2668).op)({mul_:function(e,t){let n=(0,o._1)(e,"a","mul"),i=(0,o._1)(t,"b","mul");[n,i]=(0,a.makeTypesMatch)(n,i);const u={a:n,b:i};return r.BV.runKernel(s.wY,u)}})},7370:function(e,t,n){"use strict";n.d(t,{W:function(){return o}});var r=n(196),s=n(9121),a=n(3740);const o=(0,n(2668).op)({neg_:function(e){const t={x:(0,a._1)(e,"x","neg")};return r.BV.runKernel(s.ku,t)}})},3561:function(e,t,n){"use strict";n.d(t,{K:function(){return y}});var r=n(3740),s=n(569),a=n(6235),o=n(3591),i=n(3307),u=n(5735),l=n(2668),c=n(3453),p=n(4968),h=n(9494),d=n(3261),f=n(248),m=n(5475);function g(e,t,n=null){if(0===e.rank)return(0,a.W)(e);if(1!==e.rank&&null===n)return g((0,p.X)(e,[-1]),t,n);if(1===e.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===t)return(0,m.S)((0,a.W)(e),n);if(t===1/0)return(0,i.F)((0,a.W)(e),n);if(t===-1/0)return(0,u.V)((0,a.W)(e),n);if("euclidean"===t||2===t)return(0,d._)((0,m.S)((0,c.s)((0,a.W)(e),(0,h.i)(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return(0,i.F)((0,m.S)((0,a.W)(e),n[0]),n[1]-1);if(t===1/0)return(0,i.F)((0,m.S)((0,a.W)(e),n[1]),n[0]);if(t===-1/0)return(0,u.V)((0,m.S)((0,a.W)(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return(0,d._)((0,m.S)((0,f.h)(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const y=(0,l.op)({norm_:function(e,t="euclidean",n=null,a=!1){const i=g(e=(0,r._1)(e,"x","norm"),t,n);let u=i.shape;if(a){const t=(0,s.EC)(n,e.shape);u=o.rv(i.shape,t)}return(0,p.X)(i,u)}})},6500:function(e,t,n){"use strict";n.d(t,{Q:function(){return u}});var r=n(196),s=n(9121),a=n(747),o=n(3740),i=n(2200);const u=(0,n(2668).op)({notEqual_:function(e,t){let n=(0,o._1)(e,"a","notEqual","string_or_numeric"),u=(0,o._1)(t,"b","notEqual","string_or_numeric");[n,u]=(0,a.makeTypesMatch)(n,u),(0,i.assertAndGetBroadcastShape)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(s.yQ,l)}})},6708:function(e,t,n){"use strict";n.d(t,{l:function(){return o}});var r=n(196),s=n(9121),a=n(3740);const o=(0,n(2668).op)({oneHot_:function(e,t,n=1,o=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const i={indices:(0,a._1)(e,"indices","oneHot","int32")},u={depth:t,onValue:n,offValue:o};return r.BV.runKernel(s.we,i,u)}})},4917:function(e,t,n){"use strict";n.d(t,{i:function(){return i}});var r=n(196),s=n(569),a=n(1661),o=n(9640);function i(e,t="float32"){if("complex64"===t){const t=i(e,"float32"),n=(0,o.l)(e,"float32");return(0,a.P)(t,n)}const n=(0,s.p8)((0,s.NA)(e),t);return r.BV.makeTensor(n,e,t)}},7846:function(e,t,n){"use strict";n.d(t,{J:function(){return o}});var r=n(196),s=n(9121),a=n(3740);const o=(0,n(2668).op)({onesLike_:function(e){const t={x:(0,a._1)(e,"x","onesLike")};return r.BV.runKernel(s.qW,t)}})},2668:function(e,t,n){"use strict";n.d(t,{op:function(){return a}});var r=n(196),s=n(569);function a(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const a=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const o=(...e)=>{r.BV.startScope(n);try{const t=a(...e);return(0,s.tI)(t)&&console.error("Cannot return a Promise inside of tidy."),r.BV.endScope(t),t}catch(t){throw r.BV.endScope(null),t}};return Object.defineProperty(o,"name",{value:n,configurable:!0}),o}},3974:function(e,t,n){"use strict";n.d(t,{WnP:function(){return r.W},IHx:function(){return s.I},$6P:function(){return a.$},YjB:function(){return o.Y},NqF:function(){return i.N},wS1:function(){return u.w},uR5:function(){return l.u},Dxk:function(){return f},JY5:function(){return m},p3b:function(){return g},f3b:function(){return y.f},pju:function(){return b.p},iUl:function(){return x.i},d9v:function(){return w.d},zoF:function(){return v.z},gME:function(){return k},Izb:function(){return I},MNy:function(){return N},ZaL:function(){return S},PAt:function(){return T.P},Tek:function(){return C.T},bc:function(){return E.b},pdZ:function(){return A.p},$QV:function(){return D},B10:function(){return _.B},hiC:function(){return F.h},rvX:function(){return Qe},pyx:function(){return R.p},DgJ:function(){return O.D},Qqt:function(){return M.Q},dt4:function(){return B.d},iyy:function(){return z},hlL:function(){return P.h},GWj:function(){return U.G},imm:function(){return tt},Iqj:function(){return V.I},pjt:function(){return G.p},brS:function(){return H.b},BHj:function(){return jt},hi7:function(){return j.h},$r2:function(){return Xt},cM7:function(){return X.c},Krr:function(){return q.K},CmS:function(){return K.C},HvI:function(){return Q.H},OI3:function(){return Z.O},Fp7:function(){return Y.F},_sB:function(){return J._},YQQ:function(){return ee.Y},gWQ:function(){return te.g},J69:function(){return ne.J},LTh:function(){return re.L},Gi7:function(){return ie},dC7:function(){return ue.d},W76:function(){return le.W},Quu:function(){return ce.Q},lfX:function(){return pe.l},iUs:function(){return he.i},JpU:function(){return de.J},vku:function(){return fe.v},AL3:function(){return me.A},nGf:function(){return ye},LGj:function(){return be.L},UYe:function(){return xe.U},XLQ:function(){return L.X},GYS:function(){return we.G},iD$:function(){return ve.i},snQ:function(){return qe.s},U8D:function(){return ke.U},U_I:function(){return Ie.U},XD2:function(){return Ne.X},tPi:function(){return Se.t},jZU:function(){return Te},SmN:function(){return Ce},CnO:function(){return Ee},p0P:function(){return Ae},XAC:function(){return $e.X},Wvh:function(){return De.W},rVs:function(){return qt},Vl2:function(){return _e.V},_b3:function(){return Fe._},L9e:function(){return Re.L},knu:function(){return Oe.k},Z_8:function(){return Kt},luU:function(){return oe.l},Smz:function(){return Me.S},AEp:function(){return Be.A},XeE:function(){return Le.X},RRF:function(){return We.R},Gg6:function(){return W.G},p4s:function(){return Xe.p},Xu6:function(){return ze.X},HHK:function(){return Pe.H},VD$:function(){return Ve},arb:function(){return Ge.a},lls:function(){return He.l},P84:function(){return je.P}});var r=n(6235),s=n(6407),a=n(781),o=n(2998),i=n(47),u=n(5176),l=n(1749),c=n(3740),p=n(569),h=n(94),d=n(2668);const f=(0,d.op)({batchNorm2d_:function(e,t,n,r,s,a){const o=(0,c._1)(e,"x","batchNorm"),i=(0,c._1)(t,"mean","batchNorm"),u=(0,c._1)(n,"variance","batchNorm");let l,d;return null!=s&&(l=(0,c._1)(s,"scale","batchNorm")),null!=r&&(d=(0,c._1)(r,"offset","batchNorm")),p.hu(2===o.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`)),p.hu(2===i.rank||1===i.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`)),p.hu(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=l&&p.hu(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=d&&p.hu(2===d.rank||1===d.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${d.rank}.`)),(0,h.t)(o,i,u,d,l,a)}});const m=(0,d.op)({batchNorm3d_:function(e,t,n,r,s,a){const o=(0,c._1)(e,"x","batchNorm"),i=(0,c._1)(t,"mean","batchNorm"),u=(0,c._1)(n,"variance","batchNorm");let l,d;return null!=s&&(l=(0,c._1)(s,"scale","batchNorm")),null!=r&&(d=(0,c._1)(r,"offset","batchNorm")),p.hu(3===o.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`)),p.hu(3===i.rank||1===i.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`)),p.hu(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=l&&p.hu(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=d&&p.hu(3===d.rank||1===d.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${d.rank}.`)),(0,h.t)(o,i,u,d,l,a)}});const g=(0,d.op)({batchNorm4d_:function(e,t,n,r,s,a){const o=(0,c._1)(e,"x","batchNorm"),i=(0,c._1)(t,"mean","batchNorm"),u=(0,c._1)(n,"variance","batchNorm");let l,d;return null!=s&&(l=(0,c._1)(s,"scale","batchNorm")),null!=r&&(d=(0,c._1)(r,"offset","batchNorm")),p.hu(4===o.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`)),p.hu(4===i.rank||1===i.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`)),p.hu(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=l&&p.hu(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=d&&p.hu(4===d.rank||1===d.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${d.rank}.`)),(0,h.t)(o,i,u,d,l,a)}});var y=n(2657),b=n(2271),x=n(2279),w=n(8723),v=n(6884);const k=(0,d.op)({concat1d_:function(e){return(0,v.z)(e,0)}});const I=(0,d.op)({concat2d_:function(e,t){return(0,v.z)(e,t)}});const N=(0,d.op)({concat3d_:function(e,t){return(0,v.z)(e,t)}});const S=(0,d.op)({concat4d_:function(e,t){return(0,v.z)(e,t)}});var T=n(1355),C=n(4794),E=n(1405),A=n(473),$=n(7594);const D=(0,d.op)({conv3dTranspose_:function(e,t,n,r,s){const a=(0,c._1)(e,"x","conv3dTranspose"),o=(0,c._1)(t,"filter","conv3dTranspose");return(0,$._)(n,a,o,r,s)}});var _=n(4718),F=n(1274),R=n(3233),O=n(6477),M=n(4842),B=n(1300),L=n(4968),W=n(7501);const z=(0,d.op)({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const s=(0,y.f)([e,t],r),a=e<=t?e:t;for(let i=0;i<a;++i)s.set(1,i,i);const o=(0,L.X)(s.toTensor(),[e,t]);if(null==n)return o;if(1===n.length)return(0,W.G)((0,B.d)(o,0),[n[0],1,1]);if(2===n.length)return(0,W.G)((0,B.d)((0,B.d)(o,0),0),[n[0],n[1],1,1]);if(3===n.length)return(0,W.G)((0,B.d)((0,B.d)((0,B.d)(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});var P=n(4006),U=n(6943),V=n(4926),G=n(636),H=n(7630),j=n(9133),X=n(2597),q=n(7474),K=n(1510),Q=n(2856),Z=n(8687),Y=n(3307),J=n(1174),ee=n(5020),te=n(632),ne=n(5130),re=n(4513),se=n(3591),ae=n(248),oe=n(827);const ie=(0,d.op)({moments_:function(e,t=null,n=!1){e=(0,c._1)(e,"x","moments");const r=(0,p.EC)(t,e.shape),s=(0,ne.J)(e,r,n);let a=s.shape;n||(a=(0,se.rv)(s.shape,r));const o=(0,ae.h)((0,oe.l)((0,b.p)(e,"float32"),(0,L.X)(s,a)));return{mean:s,variance:(0,ne.J)(o,r,n)}}});var ue=n(4841),le=n(7370),ce=n(6500),pe=n(6708),he=n(4917),de=n(7846),fe=n(9682),me=n(8151),ge=n(6845);const ye=(0,d.op)({randomNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const a=new ge.Yi(t,n,r,!1,s),o=(0,y.f)(e,r);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}});var be=n(5002),xe=n(7409),we=n(7486),ve=n(9494),ke=n(5503),Ie=n(8678),Ne=n(625),Se=n(2676);const Te=(0,d.op)({slice1d_:function(e,t,n){const r=(0,c._1)(e,"x","slice1d");return p.hu(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),(0,Se.t)(r,[t],[n])}});const Ce=(0,d.op)({slice2d_:function(e,t,n){const r=(0,c._1)(e,"x","slice2d");return p.hu(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),(0,Se.t)(r,t,n)}});const Ee=(0,d.op)({slice3d_:function(e,t,n){const r=(0,c._1)(e,"x","slice3d");return p.hu(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),(0,Se.t)(r,t,n)}});const Ae=(0,d.op)({slice4d_:function(e,t,n){const r=(0,c._1)(e,"x","slice4d");return p.hu(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),(0,Se.t)(r,t,n)}});var $e=n(682),De=n(3694),_e=n(8644),Fe=n(3261),Re=n(9590),Oe=n(2991),Me=n(5475),Be=n(1869),Le=n(701),We=n(6092),ze=n(3596),Pe=n(4136),Ue=n(196);function Ve(e,t=!0,n,r){return Ue.BV.makeVariable(e,t,n,r)}var Ge=n(5912),He=n(9640),je=n(6577),Xe=n(9065),qe=n(3100),Ke=n(974);const Qe=(0,d.op)({dropout_:function(e,t,n,r){const a=(0,c._1)(e,"x","dropout");if(p.hu("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),p.hu(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Ke.es?a.clone():a;const o=function(e,t){if(null==t)return e.shape.slice();if(p.cO(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),i=1-t,u=(0,F.h)((0,U.G)((0,s.I)((0,be.L)(o,0,1,"float32",r),i)),i);return(0,ue.d)(a,u)}});var Ze=n(3710),Ye=n(7020),Je=n(8447),et=n(4415),tt=n(3854);function nt(e,t,n){const r=1-e%2,s=new Float32Array(e);for(let a=0;a<e;++a){const o=2*Math.PI*a/(e+r-1);s[a]=t-n*Math.cos(o)}return(0,We.R)(s,"float32")}(0,d.op)({hammingWindow_:function(e){return nt(e,.54,.46)}});const rt=(0,d.op)({hannWindow_:function(e){return nt(e,.5,.5)}});var st=n(7852);function at(e,t,n){if((0,p.Cq)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=(0,c.C)(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,st.H)(e,t,r,n)}const ot=(0,d.op)({frame_:function(e,t,n,r=!1,s=0){let a=0;const o=[];for(;a+t<=e.size;)o.push((0,Se.t)(e,a,t)),a+=n;if(r)for(;a<e.size;){const r=a+t-e.size,i=(0,v.z)([(0,Se.t)(e,a,t-r),(0,P.h)([r],s)]);o.push(i),a+=n}return 0===o.length?at([],[0,t]):(0,L.X)((0,v.z)(o),[o.length,t])}});(0,d.op)({stft_:function(e,t,n,r,s=rt){var a;null==r&&(a=t,r=Math.floor(Math.pow(2,Math.ceil(Math.log(a)/Math.log(2)))));const o=ot(e,t,n),i=(0,ue.d)(o,s(t));return(0,Ze.Q)(i,r)}});var it=n(9121);const ut=(0,d.op)({cropAndResize_:function(e,t,n,r,s="bilinear",a=0){const o=(0,c._1)(e,"image","cropAndResize"),i=(0,c._1)(t,"boxes","cropAndResize","float32"),u=(0,c._1)(n,"boxInd","cropAndResize","int32"),l=i.shape[0];p.hu(4===o.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`)),p.hu(2===i.rank&&4===i.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${i.shape}.`)),p.hu(1===u.rank&&u.shape[0]===l,(()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${i.shape}.`)),p.hu(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),p.hu(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),p.hu("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const h={image:o,boxes:i,boxInd:u},d={method:s,extrapolationValue:a,cropSize:r};return Ue.BV.runKernel(it.Vc,h,d)}});const lt=(0,d.op)({flipLeftRight_:function(e){const t=(0,c._1)(e,"image","flipLeftRight","float32");p.hu(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return Ue.BV.runKernel(it.Uy,n,{})}});const ct=(0,d.op)({grayscaleToRGB_:function(e){const t=(0,c._1)(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];p.hu(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),p.hu(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const s=new Array(t.rank);return s.fill(1,0,n),s[n]=3,(0,W.G)(t,s)}});const pt=(0,d.op)({rotateWithOffset_:function(e,t,n=0,r=.5){const s=(0,c._1)(e,"image","rotateWithOffset","float32");p.hu(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const a={image:s},o={radians:t,fillValue:n,center:r};return Ue.BV.runKernel(it.b9,a,o)}});function ht(e,t,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const o=e.shape[0];return n=Math.min(n,o),p.hu(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),p.hu(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),p.hu(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),p.hu(1===t.rank,(()=>"scores must be a 1D tensor")),p.hu(t.shape[0]===o,(()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`)),p.hu(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}const dt=(0,d.op)({nonMaxSuppression_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=(0,c._1)(e,"boxes","nonMaxSuppression","float32"),o=(0,c._1)(t,"scores","nonMaxSuppression","float32"),i=ht(a,o,n,r,s),u={maxOutputSize:n=i.maxOutputSize,iouThreshold:r=i.iouThreshold,scoreThreshold:s=i.scoreThreshold};return Ue.BV.runKernel(it.uv,{boxes:a,scores:o},u)}});var ft=n(8329);const mt=async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=(0,c._1)(e,"boxes","nonMaxSuppressionAsync"),o=(0,c._1)(t,"scores","nonMaxSuppressionAsync"),i=ht(a,o,n,r,s);n=i.maxOutputSize,r=i.iouThreshold,s=i.scoreThreshold;const u=await Promise.all([a.data(),o.data()]),l=u[0],p=u[1],{selectedIndices:h}=(0,ft.GP)(l,p,n,r,s);return a!==e&&a.dispose(),o!==t&&o.dispose(),(0,We.R)(h,"int32")};const gt=(0,d.op)({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const o=(0,c._1)(e,"boxes","nonMaxSuppression"),i=(0,c._1)(t,"scores","nonMaxSuppression"),u=ht(o,i,n,r,s,a),l={boxes:o,scores:i},p={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:s=u.scoreThreshold,softNmsSigma:a=u.softNmsSigma},h=Ue.BV.runKernel(it.W0,l,p);return{selectedIndices:h[0],selectedScores:h[1]}}});const yt=async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const o=(0,c._1)(e,"boxes","nonMaxSuppressionAsync"),i=(0,c._1)(t,"scores","nonMaxSuppressionAsync"),u=ht(o,i,n,r,s,a);n=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,a=u.softNmsSigma;const l=await Promise.all([o.data(),i.data()]),p=l[0],h=l[1],{selectedIndices:d,selectedScores:f}=(0,ft.pA)(p,h,n,r,s,a);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:(0,We.R)(d,"int32"),selectedScores:(0,We.R)(f)}};const bt=(0,d.op)({nonMaxSuppressionPadded_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const o=(0,c._1)(e,"boxes","nonMaxSuppression"),i=(0,c._1)(t,"scores","nonMaxSuppression"),u=ht(o,i,n,r,s,null),l={boxes:o,scores:i},p={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:a},h=Ue.BV.runKernel(it.cy,l,p);return{selectedIndices:h[0],validOutputs:h[1]}}});const xt=async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const o=(0,c._1)(e,"boxes","nonMaxSuppressionAsync"),i=(0,c._1)(t,"scores","nonMaxSuppressionAsync"),u=ht(o,i,n,r,s,null),l=u.maxOutputSize,p=u.iouThreshold,h=u.scoreThreshold,[d,f]=await Promise.all([o.data(),i.data()]),{selectedIndices:m,validOutputs:g}=(0,ft.qP)(d,f,l,p,h,a);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:(0,We.R)(m,"int32"),validOutputs:(0,ve.i)(g,"int32")}};var wt=n(3305),vt=n(5098),kt=n(3865),It=n(624),Nt=n(7809),St=n(7245);const Tt=(0,d.op)({threshold_:function(e,t="binary",n=!1,r=.5){const a=(0,c._1)(e,"image","threshold"),o=a.shape[0]*a.shape[1];let i,u,l,h,d=(0,ue.d)((0,We.R)([r]),255);if(p.hu(3===a.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`)),p.hu(3===a.shape[2]||1===a.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`)),p.hu("int32"===a.dtype||"float32"===a.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`)),p.hu("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===a.shape[2]){[i,u,l]=(0,_e.V)(a,[1,1,1],-1);const e=(0,ue.d)(i,.2989),t=(0,ue.d)(u,.587),n=(0,ue.d)(l,.114);h=(0,s.I)((0,s.I)(e,t),n)}else h=e;if("otsu"===t){d=function(e,t){let n,r,a,o,i,u,l=(0,We.R)([-1]),c=(0,We.R)([0]),p=(0,We.R)([0]);for(let h=0;h<e.size-1;h++){n=(0,Se.t)(e,0,h+1),r=(0,Se.t)(e,h+1),i=(0,F.h)((0,Me.S)(n),t),u=(0,F.h)((0,Me.S)(r),t);const d=(0,Me.S)((0,ue.d)(n,(0,St.w)(0,n.size)));a=(0,F.h)(d,(0,Me.S)(n));const f=(0,P.h)(r.shape,n.size),m=(0,s.I)((0,St.w)(0,r.size),f),g=(0,ue.d)(r,m);o=(0,F.h)((0,Me.S)(g),(0,Me.S)(r));const y=(0,oe.l)(a,o),b=(0,oe.l)(a,o),x=(0,ue.d)(i,u);p=(0,ue.d)((0,ue.d)(x,y),b);const w=(0,G.p)(p,c);c=(0,Ge.a)(w,p,c),l=(0,Ge.a)(w,(0,We.R)([h]),l)}return l}((0,kt.y)((0,b.p)((0,Nt.N)(h),"int32"),(0,Le.X)([]),256),o)}const f=n?(0,It.z)(h,d):(0,G.p)(h,d);return(0,b.p)((0,ue.d)(f,255),"int32")}});const Ct=(0,d.op)({transform_:function(e,t,n="nearest",r="constant",s=0,a){const o=(0,c._1)(e,"image","transform","float32"),i=(0,c._1)(t,"transforms","transform","float32");p.hu(4===o.rank,(()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`)),p.hu(2===i.rank&&(i.shape[0]===o.shape[0]||1===i.shape[0])&&8===i.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),p.hu(null==a||2===a.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`));const u={image:o,transforms:i},l={interpolation:n,fillMode:r,fillValue:s,outputShape:a};return Ue.BV.runKernel(it.wx,u,l)}});const Et=(0,d.op)({bandPart_:function(e,t,n){(0,p.hu)(t%1===0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),(0,p.hu)(n%1===0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=(0,c._1)(e,"a","bandPart");(0,p.hu)(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[a,o]=r.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=o))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`);t<0&&(t=a),n<0&&(n=o);const i=(0,L.X)((0,St.w)(0,a,1,"int32"),[-1,1]),u=(0,St.w)(0,o,1,"int32"),l=(0,oe.l)(i,u),h=(0,Q.H)((0,It.z)(l,(0,ve.i)(+t,"int32")),(0,H.b)(l,(0,ve.i)(-n,"int32"))),d=(0,He.l)([a,o],r.dtype);return(0,L.X)((0,Oe.k)((0,Pe.H)((0,L.X)(r,[-1,a,o])).map((e=>(0,Ge.a)(h,e,d)))),s)}});var At=n(3561);const $t=(0,d.op)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,(0,p.hu)(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)(0,p.hu)(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=(0,_e.V)(e,e.shape[0],0).map((e=>(0,Re.L)(e,[0])));(0,p.hu)(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let s=0;s<e.length;++s)n.push(Ue.BV.tidy((()=>{let e=r[s];if(s>0)for(let t=0;t<s;++t){const r=(0,ue.d)((0,Me.S)((0,ue.d)(n[t],e)),n[t]);e=(0,oe.l)(e,r)}return(0,F.h)(e,(0,At.K)(e,"euclidean"))})));return t?(0,Oe.k)(n,0):n}});var Dt=n(4368);function _t(e,t=!1){return Ue.BV.tidy((()=>{(0,p.hu)(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=z(n),a=(0,w.d)(e);const o=at([[1]],[1,1]);let i=(0,w.d)(o);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=a,u=i,l=s;[i,a,s]=Ue.BV.tidy((()=>{const t=(0,Se.t)(a,[e,e],[n-e,1]),u=(0,At.K)(t),l=(0,Se.t)(a,[e,e],[1,1]),c=(0,Ge.a)((0,G.p)(l,0),at([[-1]]),at([[1]])),p=(0,oe.l)(l,(0,ue.d)(c,u)),h=(0,F.h)(t,p);i=1===h.shape[0]?(0,w.d)(o):(0,v.z)([o,(0,Se.t)(h,[1,0],[h.shape[0]-1,h.shape[1]])],0);const d=(0,le.W)((0,F.h)((0,Z.O)(c,p),u)),f=(0,Se.t)(a,[e,0],[n-e,r]),m=(0,ue.d)(d,i),g=(0,Xe.p)(i);if(0===e)a=(0,oe.l)(f,(0,Z.O)(m,(0,Z.O)(g,f)));else{const t=(0,oe.l)(f,(0,Z.O)(m,(0,Z.O)(g,f)));a=(0,v.z)([(0,Se.t)(a,[0,0],[e,r]),t],0)}const y=(0,Xe.p)(m),b=(0,Se.t)(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=(0,oe.l)(b,(0,Z.O)((0,Z.O)(b,i),y));else{const t=(0,oe.l)(b,(0,Z.O)((0,Z.O)(b,i),y));s=(0,v.z)([(0,Se.t)(s,[0,0],[n,e]),t],1)}return[i,a,s]})),(0,Dt.B9)([t,u,l])}return!t&&n>r&&(s=(0,Se.t)(s,[0,0],[n,r]),a=(0,Se.t)(a,[0,0],[r,r])),[s,a]}))}const Ft=(0,d.op)({qr_:function(e,t=!1){if((0,p.hu)(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return _t(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=(0,Pe.H)((0,L.X)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],a=[];r.forEach((e=>{const[n,r]=_t(e,t);s.push(n),a.push(r)}));return[(0,L.X)((0,Oe.k)(s,0),e.shape),(0,L.X)((0,Oe.k)(a,0),e.shape)]}}});var Rt;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Rt||(Rt={}));const Ot=(0,d.op)({computeWeightedLoss_:function(e,t,n=Rt.SUM_BY_NONZERO_WEIGHTS){const r=(0,c._1)(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=(0,c._1)(t,"weights","computeWeightedLoss"));const a=null==s?r:(0,ue.d)(r,s);if(n===Rt.NONE)return a;if(n===Rt.SUM)return(0,Me.S)(a);if(n===Rt.MEAN){if(null==s)return(0,ne.J)(a);{const e=r.size/s.size,t=(0,F.h)((0,Me.S)(a),(0,Me.S)(s));return e>1?(0,F.h)(t,(0,ve.i)(e)):t}}if(n===Rt.SUM_BY_NONZERO_WEIGHTS){if(null==s)return(0,F.h)((0,Me.S)(a),(0,ve.i)(r.size));{const e=(0,ue.d)(s,(0,he.i)(r.shape)),t=(0,b.p)((0,Me.S)((0,ce.Q)(e,(0,ve.i)(0))),"float32");return(0,F.h)((0,Me.S)(a),t)}}throw Error(`Unknown reduction: ${n}`)}});(0,d.op)({absoluteDifference_:function(e,t,n,s=Rt.SUM_BY_NONZERO_WEIGHTS){const a=(0,c._1)(e,"labels","absoluteDifference"),o=(0,c._1)(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=(0,c._1)(n,"weights","absoluteDifference")),(0,p.k5)(a.shape,o.shape,"Error in absoluteDifference: ");const u=(0,r.W)((0,oe.l)(a,o));return Ot(u,i,s)}});(0,d.op)({cosineDistance_:function(e,t,n,r,s=Rt.SUM_BY_NONZERO_WEIGHTS){const a=(0,c._1)(e,"labels","cosineDistance"),o=(0,c._1)(t,"predictions","cosineDistance");let i=null;null!=r&&(i=(0,c._1)(r,"weights","cosineDistance")),(0,p.k5)(a.shape,o.shape,"Error in cosineDistance: ");const u=(0,ve.i)(1),l=(0,oe.l)(u,(0,Me.S)((0,ue.d)(a,o),n,!0));return Ot(l,i,s)}});(0,d.op)({hingeLoss_:function(e,t,n,r=Rt.SUM_BY_NONZERO_WEIGHTS){let s=(0,c._1)(e,"labels","hingeLoss");const a=(0,c._1)(t,"predictions","hingeLoss");let o=null;null!=n&&(o=(0,c._1)(n,"weights","hingeLoss")),(0,p.k5)(s.shape,a.shape,"Error in hingeLoss: ");const i=(0,ve.i)(1);s=(0,oe.l)((0,ue.d)((0,ve.i)(2),s),i);const u=(0,xe.U)((0,oe.l)(i,(0,ue.d)(s,a)));return Ot(u,o,r)}});(0,d.op)({huberLoss_:function(e,t,n,a=1,o=Rt.SUM_BY_NONZERO_WEIGHTS){const i=(0,c._1)(e,"labels","huberLoss"),u=(0,c._1)(t,"predictions","huberLoss");let l=null;null!=n&&(l=(0,c._1)(n,"weights","huberLoss")),(0,p.k5)(i.shape,u.shape,"Error in huberLoss: ");const h=(0,ve.i)(a),d=(0,r.W)((0,oe.l)(u,i)),f=(0,re.L)(d,h),m=(0,oe.l)(d,f),g=(0,s.I)((0,ue.d)((0,ve.i)(.5),(0,ae.h)(f)),(0,ue.d)(h,m));return Ot(g,l,o)}});(0,d.op)({logLoss_:function(e,t,n,r=1e-7,a=Rt.SUM_BY_NONZERO_WEIGHTS){const o=(0,c._1)(e,"labels","logLoss"),i=(0,c._1)(t,"predictions","logLoss");let u=null;null!=n&&(u=(0,c._1)(n,"weights","logLoss")),(0,p.k5)(o.shape,i.shape,"Error in logLoss: ");const l=(0,ve.i)(1),h=(0,ve.i)(r),d=(0,le.W)((0,ue.d)(o,(0,X.c)((0,s.I)(i,h)))),f=(0,ue.d)((0,oe.l)(l,o),(0,X.c)((0,s.I)((0,oe.l)(l,i),h))),m=(0,oe.l)(d,f);return Ot(m,u,a)}});var Mt=n(5265);(0,d.op)({meanSquaredError_:function(e,t,n,r=Rt.SUM_BY_NONZERO_WEIGHTS){const s=(0,c._1)(e,"labels","meanSquaredError"),a=(0,c._1)(t,"predictions","meanSquaredError");let o=null;null!=n&&(o=(0,c._1)(n,"weights","meanSquaredError")),(0,p.k5)(s.shape,a.shape,"Error in meanSquaredError: ");const i=(0,Mt.$)(s,a);return Ot(i,o,r)}});(0,d.op)({sigmoidCrossEntropy_:function(e,t,n,a=0,o=Rt.SUM_BY_NONZERO_WEIGHTS){let i=(0,c._1)(e,"multiClassLabels","sigmoidCrossEntropy");const u=(0,c._1)(t,"logits","sigmoidCrossEntropy");let l=null;if(null!=n&&(l=(0,c._1)(n,"weights","sigmoidCrossEntropy")),(0,p.k5)(i.shape,u.shape,"Error in sigmoidCrossEntropy: "),a>0){const e=(0,ve.i)(a),t=(0,ve.i)(1),n=(0,ve.i)(.5);i=(0,s.I)((0,ue.d)(i,(0,oe.l)(t,e)),(0,ue.d)(n,e))}const h=function(e,t){const n=(0,c._1)(e,"labels","sigmoidCrossEntropyWithLogits"),a=(0,c._1)(t,"logits","sigmoidCrossEntropyWithLogits");(0,p.k5)(n.shape,a.shape,"Error in sigmoidCrossEntropyWithLogits: ");const o=(0,xe.U)(a),i=(0,ue.d)(a,n),u=(0,q.K)((0,M.Q)((0,le.W)((0,r.W)(a))));return(0,s.I)((0,oe.l)(o,i),u)}(i,u);return Ot(h,l,o)}});var Bt=n(633),Lt=n(1391);(0,d.op)({softmaxCrossEntropy_:function(e,t,n,r=0,a=Rt.SUM_BY_NONZERO_WEIGHTS){let o=(0,c._1)(e,"onehotLabels","softmaxCrossEntropy");const i=(0,c._1)(t,"logits","softmaxCrossEntropy");let u=null;if(null!=n&&(u=(0,c._1)(n,"weights","softmaxCrossEntropy")),(0,p.k5)(o.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=(0,ve.i)(r),t=(0,ve.i)(1),n=(0,ve.i)(o.shape[1]);o=(0,s.I)((0,ue.d)(o,(0,oe.l)(t,e)),(0,F.h)(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=(0,Bt.cb)(((e,t,r)=>{const s=(0,Lt.l)(t,[n],!0),a=(0,oe.l)((0,b.p)(t,"float32"),s);r([e,a]);const o=(0,le.W)((0,ue.d)(a,e));return{value:(0,Me.S)(o,[n]),gradFunc:(e,t)=>{const[r,s]=t,a=(0,se.rv)(e.shape,[n]);return[(0,ue.d)((0,L.X)(e,a),(0,oe.l)((0,b.p)(r,"float32"),(0,M.Q)(s))),(0,ue.d)((0,L.X)(e,a),(0,oe.l)((0,M.Q)(s),(0,b.p)(r,"float32")))]}}}));return r(e,t)}(o,i);return Ot(l,u,a)}});const Wt=(0,d.op)({sparseFillEmptyRows_:function(e,t,n,r){const s=(0,c._1)(e,"indices","sparseFillEmptyRows","int32"),a=(0,c._1)(t,"values","sparseFillEmptyRows"),o=(0,c._1)(n,"denseShape","sparseFillEmptyRows","int32"),i=(0,c._1)(r,"defaultValue","sparseFillEmptyRows",a.dtype);if(2!==s.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==a.rank)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(1!==o.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${o.shape}`);if(0!==i.rank)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);const u={indices:s,values:a,denseShape:o,defaultValue:i},l=Ue.BV.runKernel(it.O3,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}});const zt=(0,d.op)({sparseReshape_:function(e,t,n){const r=(0,c._1)(e,"inputIndices","sparseReshape","int32"),s=(0,c._1)(t,"inputShape","sparseReshape","int32"),a=(0,c._1)(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(1!==a.rank)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);const o={inputIndices:r,inputShape:s,newShape:a},i=Ue.BV.runKernel(it.nh,o);return{outputIndices:i[0],outputShape:i[1]}}});const Pt=(0,d.op)({sparseSegmentMean_:function(e,t,n){const r=(0,c._1)(e,"data","sparseSegmentMean"),s=(0,c._1)(t,"indices","sparseSegmentMean","int32"),a=(0,c._1)(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${s.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${a.shape}`);const o={data:r,indices:s,segmentIds:a};return Ue.BV.runKernel(it.YW,o)}});const Ut=(0,d.op)({sparseSegmentSum_:function(e,t,n){const r=(0,c._1)(e,"data","sparseSegmentSum"),s=(0,c._1)(t,"indices","sparseSegmentSum","int32"),a=(0,c._1)(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${s.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${a.shape}`);const o={data:r,indices:s,segmentIds:a};return Ue.BV.runKernel(it.Zj,o)}});const Vt=(0,d.op)({stringNGrams_:function(e,t,n,r,s,a,o,i){const u=(0,c._1)(e,"data","stringNGrams","string");if("string"!==u.dtype)throw new Error("Data must be of datatype string");if(1!==u.shape.length)throw new Error(`Data must be a vector, saw: ${u.shape}`);const l=(0,c._1)(t,"dataSplits","stringNGrams");if("int32"!==l.dtype)throw new Error("Data splits must be of datatype int32");const p={separator:n,nGramWidths:r,leftPad:s,rightPad:a,padWidth:o,preserveShortSequences:i},h={data:u,dataSplits:l},d=Ue.BV.runKernel(it._J,h,p);return{nGrams:d[0],nGramsSplits:d[1]}}});const Gt=(0,d.op)({stringSplit_:function(e,t,n=!0){const r=(0,c._1)(e,"input","stringSplit","string"),s=(0,c._1)(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==s.rank)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const a={skipEmpty:n},o={input:r,delimiter:s},i=Ue.BV.runKernel(it.s1,o,a);return{indices:i[0],values:i[1],shape:i[2]}}});const Ht=(0,d.op)({stringToHashBucketFast_:function(e,t){const n=(0,c._1)(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const s={input:n};return Ue.BV.runKernel(it.Xk,s,r)}}),jt=(Ye.k,Je.S,Ze.Q,et.w,{flipLeftRight:lt,grayscaleToRGB:ct,resizeNearestNeighbor:vt.j,resizeBilinear:wt.I,rotateWithOffset:pt,cropAndResize:ut,nonMaxSuppression:dt,nonMaxSuppressionAsync:mt,nonMaxSuppressionWithScore:gt,nonMaxSuppressionWithScoreAsync:yt,nonMaxSuppressionPadded:bt,nonMaxSuppressionPaddedAsync:xt,threshold:Tt,transform:Ct}),Xt={bandPart:Et,gramSchmidt:$t,qr:Ft},qt={sparseFillEmptyRows:Wt,sparseReshape:zt,sparseSegmentMean:Pt,sparseSegmentSum:Ut},Kt={stringNGrams:Vt,stringSplit:Gt,stringToHashBucketFast:Ht}},9682:function(e,t,n){"use strict";n.d(t,{v:function(){return o}});var r=n(196),s=n(9121),a=n(3740);const o=(0,n(2668).op)({pad_:function(e,t,n=0){const o=(0,a._1)(e,"x","pad");if(0===o.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const i={paddings:t,constantValue:n},u={x:o};return r.BV.runKernel(s.ly,u,i)}})},3453:function(e,t,n){"use strict";n.d(t,{s:function(){return i}});var r=n(196),s=n(9121),a=n(747),o=n(3740);const i=(0,n(2668).op)({pow_:function(e,t){let n=(0,o._1)(e,"base","pow"),i=(0,o._1)(t,"exp","pow");[n,i]=(0,a.makeTypesMatch)(n,i);const u={a:n,b:i};return r.BV.runKernel(s.pe,u)}})},8151:function(e,t,n){"use strict";n.d(t,{A:function(){return o}});var r=n(196),s=n(9121),a=n(3740);const o=(0,n(2668).op)({prelu_:function(e,t){const n={x:(0,a._1)(e,"x","prelu"),alpha:(0,a._1)(t,"alpha","prelu")};return r.BV.runKernel(s.o0,n)}})},6845:function(e,t,n){"use strict";n.d(t,{Yi:function(){return s},wv:function(){return a}});var r=n(3129);class s{constructor(e,t,n,s,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const o=a||Math.random();this.random=r.alea(o.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const o=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*o,t=this.mean+this.stdDev*s*o,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class a{constructor(e=0,t=1,n,s){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==s&&(s=Math.random()),"number"===typeof s&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=r.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}},5002:function(e,t,n){"use strict";n.d(t,{L:function(){return o}});var r=n(2657),s=n(2668),a=n(6845);const o=(0,s.op)({randomUniform_:function(e,t=0,n=1,s="float32",o){const i=(0,r.f)(e,s),u=new a.wv(t,n,null,o);for(let r=0;r<i.values.length;r++)i.values[r]=u.nextValue();return i.toTensor()}})},7245:function(e,t,n){"use strict";n.d(t,{w:function(){return a}});var r=n(196),s=n(9121);function a(e,t,n=1,a="float32"){if(0===n)throw new Error("Cannot have a step of zero");const o={start:e,stop:t,step:n,dtype:a};return r.BV.runKernel(s.e6,{},o)}},766:function(e,t,n){"use strict";n.d(t,{k:function(){return o}});var r=n(196),s=n(9121),a=n(3740);const o=(0,n(2668).op)({real_:function(e){const t={input:(0,a._1)(e,"input","real")};return r.BV.runKernel(s.xJ,t)}})},7409:function(e,t,n){"use strict";n.d(t,{U:function(){return o}});var r=n(196),s=n(9121),a=n(3740);const o=(0,n(2668).op)({relu_:function(e){const t={x:(0,a._1)(e,"x","relu")};return r.BV.runKernel(s.qk,t)}})},3582:function(e,t,n){"use strict";n.d(t,{b:function(){return o}});var r=n(196),s=n(9121),a=n(3740);const o=(0,n(2668).op)({relu6_:function(e){const t={x:(0,a._1)(e,"x","relu6")};return r.BV.runKernel(s.Sb,t)}})},4968:function(e,t,n){"use strict";n.d(t,{X:function(){return o}});var r=n(196),s=n(9121),a=n(3740);const o=(0,n(2668).op)({reshape_:function(e,t){const n={x:(0,a._1)(e,"x","reshape","string_or_numeric")},o={shape:t};return r.BV.runKernel(s.HZ,n,o)}})},7486:function(e,t,n){"use strict";n.d(t,{G:function(){return o}});var r=n(196),s=n(9121),a=n(3740);const o=(0,n(2668).op)({reverse_:function(e,t){const n={x:(0,a._1)(e,"x","reverse")},o={dims:t};return r.BV.runKernel(s.mK,n,o)}})},7809:function(e,t,n){"use strict";n.d(t,{N:function(){return o}});var r=n(196),s=n(9121),a=n(3740);const o=(0,n(2668).op)({round_:function(e){const t={x:(0,a._1)(e,"x","round")};return r.BV.runKernel(s.e0,t)}})},9494:function(e,t,n){"use strict";n.d(t,{i:function(){return a}});var r=n(569),s=n(7852);function a(e,t){if(((0,r.fU)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&(0,r.fU)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,s.H)(e,[],[],t)}},3100:function(e,t,n){"use strict";n.d(t,{s:function(){return u}});var r=n(196),s=n(9121),a=n(3740),o=n(2668),i=n(3028);const u=(0,o.op)({scatterND_:function(e,t,n){const o=(0,a._1)(e,"indices","scatterND","int32"),u=(0,a._1)(t,"updates","scatterND");i.b0(u,o,n);const l={indices:o,updates:u},c={shape:n};return r.BV.runKernel(s.xQ,l,c)}})},3028:function(e,t,n){"use strict";n.d(t,{SU:function(){return o},b0:function(){return a},l5:function(){return s}});var r=n(569);function s(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(a+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(a+" update.rank != "+(s+e.length-r));for(let o=0;o<s;++o)if(n.shape[o]!==t.shape[o])throw new Error(a+` updates.shape[${o}] (${n.shape[o]}) != indices.shape[${o}] (${t.shape[o]}).`);for(let o=0;o<n.rank-s;++o)if(n.shape[o+s]!==e[o+r])throw new Error(a+` updates.shape[${o+s}] (${n.shape[o+s]}) != shape[${o+s}] (${e[o+s]})`)}function a(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}s(n,t,e)}function o(e,t,n){const s=t.shape.length,a=s>1?t.shape[s-1]:1,o=n.length;let i=1;for(let r=a;r<o;++r)i*=n[r];const u=a<1?1:a;return{sliceRank:a,numUpdates:(0,r.NA)(t.shape)/u,sliceSize:i,strides:[...(0,r.e3)(n.slice(0,a)),1],outputSize:(0,r.NA)(n)}}},5503:function(e,t,n){"use strict";n.d(t,{U:function(){return o}});var r=n(196),s=n(9121),a=n(3740);const o=(0,n(2668).op)({selu_:function(e){const t={x:(0,a._1)(e,"x","selu")};return r.BV.runKernel(s.oF,t)}})},3179:function(e,t,n){"use strict";n.d(t,{$:function(){return s},y:function(){return r}});const r=1.7580993408473768,s=1.0507009873554805},8678:function(e,t,n){"use strict";n.d(t,{U:function(){return l}});var r=n(3740),s=n(569),a=n(4794),o=n(4718),i=n(2668),u=n(4968);const l=(0,i.op)({separableConv2d_:function(e,t,n,i,l,c=[1,1],p="NHWC"){const h=(0,r._1)(e,"x","separableConv2d"),d=(0,r._1)(t,"depthwiseFilter","separableConv2d"),f=(0,r._1)(n,"pointwiseFilter","separableConv2d");let m=h,g=!1;if(3===h.rank&&(g=!0,m=(0,u.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),"NCHW"===p)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");s.hu(4===m.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${m.rank}.`)),s.hu(4===d.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${d.rank}.`)),s.hu(4===f.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${d.rank}.`)),s.hu(1===f.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${f.shape[0]}.`)),s.hu(1===f.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${f.shape[1]}.`));const y=d.shape[2],b=d.shape[3];s.hu(f.shape[2]===y*b,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${y*b}, but got ${f.shape[2]}.`));const x=(0,o.B)(m,d,i,l,p,c),w=(0,a.T)(x,f,1,"valid",p);return g?(0,u.X)(w,[w.shape[1],w.shape[2],w.shape[3]]):w}})},625:function(e,t,n){"use strict";n.d(t,{X:function(){return o}});var r=n(196),s=n(9121),a=n(3740);const o=(0,n(2668).op)({sigmoid_:function(e){const t={x:(0,a._1)(e,"x","sigmoid","float32")};return r.BV.runKernel(s.a5,t)}})},2676:function(e,t,n){"use strict";n.d(t,{t:function(){return o}});var r=n(196),s=n(9121),a=n(3740);const o=(0,n(2668).op)({slice_:function(e,t,n){const o=(0,a._1)(e,"x","slice","string_or_numeric");if(0===o.rank)throw new Error("Slicing scalar is not possible");const i={x:o},u={begin:t,size:n};return r.BV.runKernel(s.p2,i,u)}})},7650:function(e,t,n){"use strict";n.r(t),n.d(t,{assertParamsValid:function(){return s},computeFlatOffset:function(){return y},computeOutShape:function(){return o},getNormalizedAxes:function(){return c},isSliceContinous:function(){return g},maskToAxes:function(){return a},parseSliceParams:function(){return b},sliceInfo:function(){return x},startForAxis:function(){return f},startIndicesWithElidedDims:function(){return p},stopForAxis:function(){return m},stopIndicesWithElidedDims:function(){return h},stridesForAxis:function(){return d},stridesWithElidedDims:function(){return i}});var r=n(569);function s(e,t,n){const s=e.shape.length;r.hu(s===t.length,(()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`)),r.hu(s===n.length,(()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`));for(let a=0;a<s;++a)r.hu(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${s}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function a(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function o(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function i(e,t,n,r){const s=[...e];for(let a=s.length;a<r.length;a++)s.push(1);for(let a=0;a<n;a++)0===a?s[t]=1:(s.splice(t,0,1),s.pop());return s}function u(e,t,n){return n<=e?n:n-(t-1)}function l(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function c(e,t,n,r,s,a,o,u,l){const c=e.length;let g=new Array(c),y=new Array(c),b=new Array(c);if(t.length&&n>0){const l=t[0],c=n+1;g=p(o,l,c,r,e),y=h(u,l,c,s,e),b=i(a,l,c,e)}else for(let i=0;i<c;i++)g[i]=f(o,r,a,e,i,l),y[i]=m(u,s,a,e,i,l),b[i]=d(a,i,l);return{begin:g,end:y,strides:b}}function p(e,t,n,r,s){const a=[...s],o=l(n,t);for(let i=0;i<a.length;i++)if(o.indexOf(i)>-1)a[i]=0;else{const s=u(t,n,i);let o=r[s];e&1<<s&&(o=0),a[i]=o}return a}function h(e,t,n,s,a){const o=[...a],i=l(n,t);for(let r=0;r<o.length;r++)if(i.indexOf(r)>-1)o[r]=Number.MAX_SAFE_INTEGER;else{const a=u(t,n,r);let i=s[a];e&1<<a&&(i=Number.MAX_SAFE_INTEGER),o[r]=i}for(let u=0;u<o.length;u++){const e=a[u];o[u]<0&&(o[u]+=e),o[u]=r.uZ(0,o[u],a[u])}return o}function d(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function f(e,t,n,s,a,o){let i=t[a];const u=n[a]||1;(e&1<<a||o&1<<a||null==i)&&(i=u>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=s[a];return i<0&&(i+=l),i=r.uZ(0,i,l-1),i}function m(e,t,n,s,a,o){let i=t[a];const u=n[a]||1;(e&1<<a||o&1<<a||null==i)&&(i=u>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=s[a];return i<0&&(i+=l),i=u>0?r.uZ(0,i,l):r.uZ(-1,i,l-1),i}function g(e,t,n){let r=n.length;for(let s=0;s<n.length;s++)if(n[s]>1){r=s;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function y(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function b(e,t,n){let s;const a=e.shape.length;let o;return s="number"===typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),s.forEach((e=>{r.hu(-1!==e,(()=>"slice() does not support negative begin indexing."))})),o=null==n?new Array(a).fill(-1):"number"===typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,o=o.map(((t,n)=>t>=0?t:(r.hu(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-s[n]))),[s,o]}function x(e,t,n,r,s,a,o,i,u){let l;if(null==r?(l=new Array(t.length),l.fill(1)):l=r,null!=o&&0!==(o&o-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const p={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:s,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:u};for(let b=0;b<p.dims;b++)c&&0!==(1<<b&i)&&p.numAddAxisAfterEllipsis++,1<<b&o&&(c=!0);c||(p.ellipsisMask|=1<<p.dims,p.dims++);const h={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const s=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<s;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(p,h);let d=!0,f=!0,m=!0;const g=[],y=[];for(let b=0;b<e.length;++b){if(0===h.strides[b])throw Error(`strides[${b}] must be non-zero`);const t=!!(h.shrinkAxisMask&1<<b),n=e[b];if(-1===n){g.push(t?1:-1);continue}const r=[h.beginMask&1<<b,h.endMask&1<<b],s=[h.strides[b]>0?0:-1,h.strides[b]>0?n:n-1];if(t&&h.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===h.strides[b];const a=!!(h.beginMask&1<<b&&h.endMask&1<<b);if(h.beginValid&&h.endValid){if(t){const e=h.begin[b]<0?n+h.begin[b]:h.begin[b];if(h.begin[b]=e,h.end[b]=h.begin[b]+1,e<0||e>=n)throw Error(`slice index ${h.begin[b]} of dimension ${b} out of bounds.`)}else h.begin[b]=w(h.begin[b],0,h.strides[b],n,r,s),h.end[b]=w(h.end[b],1,h.strides[b],n,r,s);const e=1===h.strides[b]&&0===h.begin[b]&&h.end[b]===n;d=d&&e,f=f&&(0===b&&1===h.strides[b]||e)}else d=d&&1===h.strides[b]&&a,f=f&&(0===b&&1===h.strides[b]||a);let o,i=!1;if(h.beginValid&&h.endValid?(o=h.end[b]-h.begin[b],i=!0):t?(o=1,i=!0):a&&n>=0&&(o=h.strides[b]<0?-n:n,i=!0),i){let e;e=0===o||o<0!==h.strides[b]<0?0:Math.trunc(o/h.strides[b])+(o%h.strides[b]!==0?1:0),g.push(e)}else g.push(-1)}for(let b=0;b<h.finalShapeGatherIndices.length;++b){const e=h.finalShapeGatherIndices[b];e>=0?y.push(g[e]):-2===e&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>-2!==h.finalShapeGatherIndices[t])),finalShape:y,isIdentity:d,sliceDim0:f,isSimpleSlice:m,begin:h.begin,end:h.end,strides:h.strides}}function w(e,t,n,r,s,a){if(s[t])return n>0?a[t]:a[t+1&1];{const t=e<0?r+e:e;return t<a[0]?a[0]:t>a[1]?a[1]:t}}},682:function(e,t,n){"use strict";n.d(t,{X:function(){return o}});var r=n(196),s=n(9121),a=n(3740);const o=(0,n(2668).op)({softmax_:function(e,t=-1){const n=(0,a._1)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const o={logits:n},i={dim:t};return r.BV.runKernel(s.Gc,o,i)}})},3694:function(e,t,n){"use strict";n.d(t,{W:function(){return o}});var r=n(196),s=n(9121),a=n(3740);const o=(0,n(2668).op)({softplus_:function(e){const t={x:(0,a._1)(e,"x","softplus")};return r.BV.runKernel(s.MR,t)}})},7020:function(e,t,n){"use strict";n.d(t,{k:function(){return o}});var r=n(196),s=n(9121),a=n(569);const o=(0,n(2668).op)({fft_:function(e){(0,a.hu)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return r.BV.runKernel(s.vw,t)}})},8447:function(e,t,n){"use strict";n.d(t,{S:function(){return o}});var r=n(196),s=n(9121),a=n(569);const o=(0,n(2668).op)({ifft_:function(e){(0,a.hu)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return r.BV.runKernel(s.Qg,t)}})},4415:function(e,t,n){"use strict";n.d(t,{w:function(){return f}});var r=n(1661),s=n(6884),a=n(4386),o=n(4841),i=n(2668),u=n(766),l=n(4968),c=n(7486),p=n(9494),h=n(2676),d=n(8447);const f=(0,i.op)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let i;if(t<=2){const r=(0,l.X)(e,[n,t]);i=(0,d.S)(r)}else{const f=[n,2*(t-1)],m=(0,l.X)((0,u.k)(e),[n,t]),g=(0,l.X)((0,a.a)(e),[n,t]),y=(0,c.G)((0,h.t)(m,[0,1],[n,t-2]),1),b=(0,o.d)((0,c.G)((0,h.t)(g,[0,1],[n,t-2]),1),(0,p.i)(-1)),x=(0,s.z)([m,y],1),w=(0,s.z)([g,b],1),v=(0,l.X)((0,r.P)(x,w),[f[0],f[1]]);i=(0,d.S)(v)}if(i=(0,u.k)(i),3===e.rank&&0!==e.shape[0]){const t=i,n=e.shape[0];i=(0,l.X)(i,[n,i.shape[0]/n,i.shape[1]]),t.dispose()}return i}})},3710:function(e,t,n){"use strict";n.d(t,{Q:function(){return m}});var r=n(569),s=n(1661),a=n(6884),o=n(4386),i=n(2668),u=n(766),l=n(4968),c=n(2676),p=n(8644),h=n(9640),d=n(6577),f=n(7020);const m=(0,i.op)({rfft_:function(e,t){(0,r.hu)("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const i=e.size/n;let m;if(null!=t&&t<n){const r=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,m=(0,c.t)(e,r,s),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,m=(0,a.z)([e,(0,h.l)(r)],e.shape.length-1),n=t}else m=e;const g=(0,d.P)(m),y=(0,l.X)((0,s.P)(m,g),[i,n]),b=(0,f.k)(y),x=Math.floor(n/2)+1,w=(0,u.k)(b),v=(0,o.a)(b),k=(0,p.V)(w,[x,n-x],w.shape.length-1),I=(0,p.V)(v,[x,n-x],v.shape.length-1),N=m.shape.slice();return N[m.shape.length-1]=x,(0,l.X)((0,s.P)(k[0],I[0]),N)}})},8644:function(e,t,n){"use strict";n.d(t,{V:function(){return o}});var r=n(196),s=n(9121),a=n(3740);const o=(0,n(2668).op)({split_:function(e,t,n=0){const o={x:(0,a._1)(e,"x","split")},i={numOrSizeSplits:t,axis:n};return r.BV.runKernel(s.L8,o,i)}})},3261:function(e,t,n){"use strict";n.d(t,{_:function(){return o}});var r=n(196),s=n(9121),a=n(3740);const o=(0,n(2668).op)({sqrt_:function(e){const t={x:(0,a._1)(e,"x","sqrt","float32")};return r.BV.runKernel(s.FK,t)}})},248:function(e,t,n){"use strict";n.d(t,{h:function(){return a}});var r=n(196),s=n(3740);const a=(0,n(2668).op)({square_:function(e){const t=(0,s._1)(e,"x","square");return r.BV.runKernel("Square",{x:t},{})}})},5265:function(e,t,n){"use strict";n.d(t,{$:function(){return u}});var r=n(196),s=n(9121),a=n(747),o=n(3740),i=n(2200);const u=(0,n(2668).op)({squaredDifference_:function(e,t){let n=(0,o._1)(e,"a","squaredDifference"),u=(0,o._1)(t,"b","squaredDifference");[n,u]=(0,a.makeTypesMatch)(n,u),(0,i.assertAndGetBroadcastShape)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(s._t,l,{})}})},9590:function(e,t,n){"use strict";n.d(t,{L:function(){return i}});var r=n(3740),s=n(569),a=n(2668),o=n(4968);const i=(0,a.op)({squeeze_:function(e,t){const n=(0,r._1)(e,"x","squeeze");return(0,o.X)(n,(0,s.bp)(n.shape,t).newShape)}})},2991:function(e,t,n){"use strict";n.d(t,{k:function(){return i}});var r=n(196),s=n(9121),a=n(3740),o=n(569);const i=(0,n(2668).op)({stack_:function(e,t=0){const n=(0,a.sI)(e,"tensors","stack","string_or_numeric");o.hu(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&o.hu(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const i=n,u={axis:t};return r.BV.runKernel(s.Qi,i,u)}})},1901:function(e,t,n){"use strict";n.d(t,{N:function(){return o}});var r=n(196),s=n(9121),a=n(3740);const o=(0,n(2668).op)({step_:function(e,t=0){const n={x:(0,a._1)(e,"x","step")},o={alpha:t};return r.BV.runKernel(s.h8,n,o)}})},827:function(e,t,n){"use strict";n.d(t,{l:function(){return i}});var r=n(196),s=n(9121),a=n(747),o=n(3740);const i=(0,n(2668).op)({sub_:function(e,t){let n=(0,o._1)(e,"a","sub"),i=(0,o._1)(t,"b","sub");[n,i]=(0,a.makeTypesMatch)(n,i);const u={a:n,b:i};return r.BV.runKernel(s.Tr,u)}})},5475:function(e,t,n){"use strict";n.d(t,{S:function(){return i}});var r=n(196),s=n(9121),a=n(3740),o=n(2271);const i=(0,n(2668).op)({sum_:function(e,t=null,n=!1){let i=(0,a._1)(e,"x","sum");"bool"===i.dtype&&(i=(0,o.p)(i,"int32"));const u={x:i},l={axis:t,keepDims:n};return r.BV.runKernel(s.GB,u,l)}})},1869:function(e,t,n){"use strict";n.d(t,{A:function(){return o}});var r=n(196),s=n(9121),a=n(3740);const o=(0,n(2668).op)({tanh_:function(e){const t={x:(0,a._1)(e,"x","tanh","float32")};return r.BV.runKernel(s.MI,t)}})},701:function(e,t,n){"use strict";n.d(t,{X:function(){return a}});var r=n(3740),s=n(7852);function a(e,t,n){const a=(0,r.C)(e,n);return(0,s.H)(e,t,a,n)}},6092:function(e,t,n){"use strict";n.d(t,{R:function(){return o}});var r=n(3740),s=n(569),a=n(7852);function o(e,t){(0,s.Cq)(e);const n=(0,r.C)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return(0,a.H)(e,null,n,t)}},7852:function(e,t,n){"use strict";n.d(t,{H:function(){return o}});var r=n(196),s=n(569),a=n(3418);function o(e,t,n,o){if(null==o&&(o=(0,s.D2)(e)),"complex64"===o)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!(0,s.fU)(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){(0,s.Mu)(t);const e=(0,s.NA)(t),r=(0,s.NA)(n);(0,s.hu)(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let a=0;a<n.length;++a){const e=n[a],r=a!==n.length-1||e!==(0,s.NA)(t.slice(a));(0,s.hu)(n[a]===t[a]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return(0,s.fU)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==o?(0,a.toTypedArray)(e,o):(0,s.xH)(e,[],!0),r.BV.makeTensor(e,t,o)}},7501:function(e,t,n){"use strict";n.d(t,{G:function(){return i}});var r=n(196),s=n(9121),a=n(3740),o=n(569);const i=(0,n(2668).op)({tile_:function(e,t){const n=(0,a._1)(e,"x","tile","string_or_numeric");o.hu(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const i={x:n},u={reps:t};return r.BV.runKernel(s.n9,i,u)}})},9065:function(e,t,n){"use strict";n.d(t,{p:function(){return d}});var r=n(196),s=n(4368),a=n(9121),o=n(3740),i=n(569),u=n(1661),l=n(4386),c=n(7370),p=n(2668),h=n(766);const d=(0,p.op)({transpose_:function(e,t,n){const p=(0,o._1)(e,"x","transpose");if(null==t&&(t=p.shape.map(((e,t)=>t)).reverse()),i.hu(p.rank===t.length,(()=>`Error in transpose: rank of input ${p.rank} must match length of perm ${t}.`)),t.forEach((e=>{i.hu(e>=0&&e<p.rank,(()=>"All entries in 'perm' must be between 0 and "+(p.rank-1)+` but got ${t}`))})),p.rank<=1)return p.clone();const d={x:p},f={perm:t};return"complex64"===p.dtype?(0,s.lu)((()=>{let e=(0,h.k)(p),t=(0,l.a)(p);return e=r.BV.runKernel(a.G3,{x:e},f),t=r.BV.runKernel(a.G3,{x:t},f),n&&(t=(0,c.W)(t)),(0,u.P)(e,t)})):r.BV.runKernel(a.G3,d,f)}})},3596:function(e,t,n){"use strict";n.d(t,{X:function(){return o}});var r=n(2657),s=n(2668),a=n(6845);const o=(0,s.op)({truncatedNormal_:function(e,t=0,n=1,s,o){if(null!=s&&"bool"===s)throw new Error("Unsupported data type $ { dtype }");const i=new a.Yi(t,n,s,!0,o),u=(0,r.f)(e,s);for(let r=0;r<u.values.length;r++)u.values[r]=i.nextValue();return u.toTensor()}})},4136:function(e,t,n){"use strict";n.d(t,{H:function(){return i}});var r=n(196),s=n(9121),a=n(3740),o=n(569);const i=(0,n(2668).op)({unstack_:function(e,t=0){const n=(0,a._1)(e,"x","unstack","string_or_numeric");o.hu(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const i={value:n},u={axis:t};return r.BV.runKernel(s.To,i,u)}})},5912:function(e,t,n){"use strict";n.d(t,{a:function(){return u}});var r=n(196),s=n(9121),a=n(3740),o=n(8247),i=n(2200);const u=(0,n(2668).op)({where_:function(e,t,n){const u=(0,a._1)(t,"a","where"),l=(0,a._1)(n,"b","where"),c=(0,a._1)(e,"condition","where","bool"),p=(0,i.assertAndGetBroadcastShape)((0,i.assertAndGetBroadcastShape)(c.shape,u.shape),l.shape),h={condition:(0,o.U)(c,p),t:(0,o.U)(u,p),e:(0,o.U)(l,p)};return r.BV.runKernel(s.Ph,h)}})},9640:function(e,t,n){"use strict";n.d(t,{l:function(){return o}});var r=n(196),s=n(569),a=n(1661);function o(e,t="float32"){if("complex64"===t){const t=o(e,"float32"),n=o(e,"float32");return(0,a.P)(t,n)}const n=(0,s.wT)((0,s.NA)(e),t);return r.BV.makeTensor(n,e,t)}},6577:function(e,t,n){"use strict";n.d(t,{P:function(){return o}});var r=n(196),s=n(9121),a=n(3740);const o=(0,n(2668).op)({zerosLike_:function(e){const t={x:(0,a._1)(e,"x","zerosLike")};return r.BV.runKernel(s.Ru,t)}})},974:function(e,t,n){"use strict";n.d(t,{es:function(){return b},YD:function(){return p},_w:function(){return w},t3:function(){return x},FZ:function(){return y},Vp:function(){return g},Vi:function(){return m}});var r=n(5938),s=n(569);function a(e,t,n,r){const a=(0,s.e3)(t),i=function(e,t,n,r){const a=(0,s.NA)(t),i=r[r.length-1],u=new Array(i).fill(0),c=t.length,p="complex64"===n?l(e):e;if(c>1)for(let s=0;s<a/i;s++){const e=s*i;for(let t=0;t<i;t++)u[t]=Math.max(u[t],o(p[e+t],0,n).length)}return u}(e,t,n,a),c=t.length,p=u(e,t,n,a,i),h=["Tensor"];return r&&(h.push(`  dtype: ${n}`),h.push(`  rank: ${c}`),h.push(`  shape: [${t}]`),h.push("  values:")),h.push(p.map((e=>"    "+e)).join("\n")),h.join("\n")}function o(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:(0,s.HD)(e)?`'${e}'`:"bool"===n?i(e):parseFloat(e.toFixed(7)).toString(),(0,s.oj)(r,t)}function i(e){return 0===e?"false":"true"}function u(e,t,n,r,s,a=!0){const c="complex64"===n?2:1,p=t[0],h=t.length;if(0===h){if("complex64"===n){return[o(l(e)[0],0,n)]}return"bool"===n?[i(e[0])]:[e[0].toString()]}if(1===h){if(p>20){const t=3*c;let r=Array.from(e.slice(0,t)),a=Array.from(e.slice((p-3)*c,p*c));return"complex64"===n&&(r=l(r),a=l(a)),["["+r.map(((e,t)=>o(e,s[t],n))).join(", ")+", ..., "+a.map(((e,t)=>o(e,s[p-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?l(e):Array.from(e)).map(((e,t)=>o(e,s[t],n))).join(", ")+"]"]}const d=t.slice(1),f=r.slice(1),m=r[0]*c,g=[];if(p>20){for(let t=0;t<3;t++){const r=t*m,a=r+m;g.push(...u(e.slice(r,a),d,n,f,s,!1))}g.push("...");for(let t=p-3;t<p;t++){const r=t*m,a=r+m;g.push(...u(e.slice(r,a),d,n,f,s,t===p-1))}}else for(let o=0;o<p;o++){const t=o*m,r=t+m;g.push(...u(e.slice(t,r),d,n,f,s,o===p-1))}const y=2===h?",":"";g[0]="["+g[0]+y;for(let o=1;o<g.length-1;o++)g[o]=" "+g[o]+y;let b=",\n";for(let o=2;o<h;o++)b+="\n";return g[g.length-1]=" "+g[g.length-1]+"]"+(a?"":b),g}function l(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var c=n(3418);class p{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=s.NA(e),null!=n){const e=n.length;s.hu(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||s.rQ(t,this.size),this.strides=(0,s.e3)(e)}set(e,...t){0===t.length&&(t=[0]),s.hu(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const r of e){if(r<0||r>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let r=0;r<e.length-1;++r)n+=this.strides[r]*e[r];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return h().makeTensor(this.values,this.shape,this.dtype)}}let h=null,d=null,f=null;function m(e){h=e}function g(e){d=e}function y(e){f=e}class b{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=s.NA(e),this.strides=(0,s.e3)(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return d.buffer(this.shape,this.dtype,e)}bufferSync(){return d.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return(0,s.GX)(this.shape,e,"complex64"===this.dtype)}arraySync(){return(0,s.GX)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=h().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map((e=>c.decodeString(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),h().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=h().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>c.decodeString(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await h().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(h().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return d.print(this,e)}clone(){return this.throwIfDisposed(),d.clone(this)}toString(e=!1){return a(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),d.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),h().makeVariable(this,e,t,n)}}function x(){return(0,r.R)("Tensor",(()=>b))}Object.defineProperty(b,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),x();class w extends b{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!s.cO(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);h().disposeTensor(this),this.dataId=e.dataId,h().incRef(this,null)}dispose(){h().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(w,Symbol.hasInstance,{value:e=>e instanceof b&&null!=e.assign&&e.assign instanceof Function})},747:function(e,t,n){"use strict";n.r(t),n.d(t,{assertTypesMatch:function(){return i},getTensorsInContainer:function(){return l},isTensorInList:function(){return u},makeTypesMatch:function(){return o}});var r=n(974),s=n(1221),a=n(569);function o(e,t){if(e.dtype===t.dtype)return[e,t];const n=(0,s.x8)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function i(e,t){(0,a.hu)(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function u(e,t){return t.some((t=>t.id===e.id))}function l(e){const t=[];return c(e,t,new Set),t}function c(e,t,n){if(null==e)return;if(e instanceof r.es)return void t.push(e);if(s=e,!Array.isArray(s)&&"object"!==typeof s)return;var s;const a=e;for(const r in a){const e=a[r];n.has(e)||(n.add(e),c(e,t,n))}}},3740:function(e,t,n){"use strict";n.d(t,{C:function(){return u},_1:function(){return p},sI:function(){return h}});var r=n(196),s=n(2885),a=n(974),o=n(569),i=n(3418);function u(e,t){let n=e;if((0,o.fU)(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||(0,o.fU)(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&(0,s.OB)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&l(e,r,[]),r}function l(e,t,n){if(n=n||[],!Array.isArray(e)&&!(0,o.fU)(e))return void(0,o.hu)(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));(0,o.hu)(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),(0,o.hu)(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let s=0;s<e.length;++s)l(e[s],r,n.concat(s))}function c(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function p(e,t,n,s="numeric"){if(e instanceof a.es)return c(s,e.dtype,t,n),e;let l=(0,o.D2)(e);if("string"!==l&&["bool","int32","float32"].indexOf(s)>=0&&(l=s),c(s,l,t,n),null==e||!(0,o.fU)(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const p=u(e,l);(0,o.fU)(e)||Array.isArray(e)||(e=[e]);const h="string"!==l?(0,i.toTypedArray)(e,l):(0,o.xH)(e,[],!0);return r.BV.makeTensor(h,p,l)}function h(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,s)=>p(e,`${t}[${s}]`,n,r)))}},1221:function(e,t,n){"use strict";var r,s,a,o,i;n.d(t,{x8:function(){return l},z4:function(){return c}}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(s||(s={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(a||(a={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(o||(o={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(i||(i={}));const u={float32:o,int32:s,bool:a,complex64:i};function l(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return u[e][t]}function c(e){return l(e,"int32")}},3418:function(e,t,n){"use strict";n.r(t),n.d(t,{arraysEqual:function(){return s.cO},assert:function(){return s.hu},assertNonNegativeIntegerDimensions:function(){return s.Mu},assertNonNull:function(){return s.Cq},assertShapesMatch:function(){return s.k5},bytesFromStringArray:function(){return s.Ub},bytesPerElement:function(){return s.bT},checkConversionForErrors:function(){return s.D5},clamp:function(){return s.uZ},computeStrides:function(){return s.e3},createScalarValue:function(){return x},createShuffledIndices:function(){return s.U$},decodeString:function(){return N},distSquared:function(){return s.E7},encodeString:function(){return I},fetch:function(){return k},fingerPrint64:function(){return b},flatten:function(){return s.xH},getArrayFromDType:function(){return s.rQ},getTypedArrayFromDType:function(){return s.WP},hasEncodingLoss:function(){return s.QB},hexToLong:function(){return i},indexToLoc:function(){return s.NE},inferDtype:function(){return s.D2},inferFromImplicitShape:function(){return s.JZ},isBoolean:function(){return s.jn},isFunction:function(){return s.mf},isInt:function(){return s.GN},isNumber:function(){return s.hj},isPromise:function(){return s.tI},isScalarShape:function(){return s.N9},isString:function(){return s.HD},isTypedArray:function(){return s.fU},isValidDtype:function(){return s.LP},locToIndex:function(){return s.qy},makeOnesTypedArray:function(){return s.p8},makeZerosNestedTypedArray:function(){return s.l6},makeZerosTypedArray:function(){return s.wT},nearestDivisor:function(){return s.jP},nearestLargerEven:function(){return s.nY},now:function(){return v},parseAxisParam:function(){return s.EC},randUniform:function(){return s.bj},repeatedTry:function(){return s.WD},rightPad:function(){return s.oj},shuffle:function(){return s.TV},shuffleCombo:function(){return s.d7},sizeFromShape:function(){return s.NA},sizeToSquarishShape:function(){return s.YP},squeezeShape:function(){return s.bp},sum:function(){return s.Sm},swap:function(){return s.LF},tanh:function(){return s.AE},toNestedArray:function(){return s.GX},toTypedArray:function(){return w}});var r=n(2885),s=n(569),a=n(3720);const o=n.n(a)()||a;function i(e){return o.fromString(e,!0,16)}const u=i("c3a5c85c97cb3127"),l=i("b492b66fbe98f273"),c=i("9ae16a3b2f90404f");function p(e){return e.xor(e.shru(47))}function h(e,t,n){const r=e.slice(t,t+n);return o.fromBytes(Array.from(r),!0,!0)}function d(e,t){return h(e,t,8)}function f(e,t){return h(e,t,4)}function m(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function g(e,t,n=i("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let s=t.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function y(e,t,n,r){return function(e,t,n,r,s,a){s=s.add(e),a=m(a.add(s).add(r),21);const o=s;return s=(s=s.add(t)).add(n),a=a.add(m(s,44)),[s.add(r),a.add(o)]}(d(e,t),d(e,t+8),d(e,t+16),d(e,t+24),n,r)}function b(e,t=e.length){const n=o.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=c.add(2*t),r=d(e,0).add(c),s=d(e,t-8);return g(m(s,37).mul(n).add(r),m(r,25).add(s).mul(n),n)}if(t>=4){const n=c.add(2*t);return g(f(e,0).shl(3).add(t),f(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return p(c.mul(n).xor(u.mul(r))).mul(c)}return c}(e,t):function(e,t=e.length){const n=c.add(2*t),r=d(e,0).mul(l),s=d(e,8),a=d(e,t-8).mul(n),o=d(e,t-16).mul(c);return g(m(r.add(s),43).add(m(a,30)).add(o),r.add(m(s.add(c),18)).add(a),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=c.add(2*t),r=d(e,0).mul(c),s=d(e,8),a=d(e,t-8).mul(n),o=d(e,t-16).mul(c),i=m(r.add(s),43).add(m(a,30)).add(o),u=g(i,r.add(m(s.add(c),18)).add(a),n),l=d(e,16).mul(n),p=d(e,24),h=i.add(d(e,t-32)).mul(n),f=u.add(d(e,t-24)).mul(n);return g(m(l.add(p),43).add(m(h,30)).add(f),l.add(m(p.add(r),18)).add(h),n)}(e,t);let r=n,s=n.mul(l).add(113),a=p(s.mul(c).add(113)).mul(c),i=[o.UZERO,o.UZERO],h=[o.UZERO,o.UZERO];r=r.mul(c).add(d(e,0));let b=0;const x=64*(t-1>>6),w=x+(t-1&63)-63;do{r=m(r.add(s).add(i[0]).add(d(e,b+8)),37).mul(l),s=m(s.add(i[1]).add(d(e,b+48)),42).mul(l),r=r.xor(h[1]),s=s.add(i[0]).add(d(e,b+40)),a=m(a.add(h[0]),33).mul(l),i=y(e,b,i[1].mul(l),r.add(h[0])),h=y(e,b+32,a.add(h[1]),s.add(d(e,b+16))),[a,r]=[r,a],b+=64}while(b!==x);const v=l.add(a.and(255).shl(1));return b=w,h[0]=h[0].add(t-1&63),i[0]=i[0].add(h[0]),h[0]=h[0].add(i[0]),r=m(r.add(s).add(i[0]).add(d(e,b+8)),37).mul(v),s=m(s.add(i[1]).add(d(e,b+48)),42).mul(v),r=r.xor(h[1].mul(9)),s=s.add(i[0].mul(9).add(d(e,b+40))),a=m(a.add(h[0]),33).mul(v),i=y(e,b,i[1].mul(v),r.add(h[0])),h=y(e,b+32,a.add(h[1]),s.add(d(e,b+16))),[a,r]=[r,a],g(g(i[0],h[0],v).add(p(s).mul(u)).add(a),g(i[1],h[1],v).add(r),v)}function x(e,t){return"string"===t?I(e):w([e],t)}function w(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=s.xH(e)),(0,r.OB)().getBool("DEBUG")&&s.D5(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function v(){return(0,r.OB)().platform.now()}function k(e,t){return(0,r.OB)().platform.fetch(e,t)}function I(e,t="utf-8"){return t=t||"utf-8",(0,r.OB)().platform.encode(e,t)}function N(e,t="utf-8"){return t=t||"utf-8",(0,r.OB)().platform.decode(e,t)}},569:function(e,t,n){"use strict";function r(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,i(e,t,n)}function s(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,i(e,n,r),i(t,n,r)}function a(e,t,n){return Math.max(e,Math.min(t,n))}function o(e){return e%2===0?e:e+1}function i(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function u(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function l(e,t){const n=Math.random();return t*n+(1-n)*e}function c(e,t){let n=0;for(let r=0;r<e.length;r++){const s=Number(e[r])-Number(t[r]);n+=s*s}return n}function p(e,t){if(!e)throw new Error("string"===typeof t?t:t())}function h(e,t,n=""){p(y(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function d(e){p(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function f(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||_(e)&&!n)for(let r=0;r<e.length;++r)f(e[r],t,n);else t.push(e);return t}function m(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function g(e){return 0===e.length}function y(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function b(e){return e%1===0}function x(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function w(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function v(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return r(t),t}function k(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function I(e,t=(e=>0),n){return new Promise(((r,s)=>{let a=0;const o=()=>{if(e())return void r();a++;const i=t(a);null!=n&&a>=n?s():setTimeout(o,i)};o()}))}function N(e,t){let n=1,r=-1;for(let a=0;a<e.length;++a)if(e[a]>=0)n*=e[a];else if(-1===e[a]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${a}`);r=a}else if(e[a]<0)throw Error(`Shapes can not be < 0. Found ${e[a]} at dim ${a}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function S(e,t){const n=t.length;return p((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),p(e.every((e=>b(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function T(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||s?null:S(t,e).sort();let o=0;for(let i=0;i<e.length;++i){if(null!=a){if(a[o]===i&&1!==e[i])throw new Error(`Can't squeeze axis ${i} since its dim '${e[i]}' is not 1`);(null==a[o]||a[o]>i)&&1===e[i]&&(n.push(e[i]),r.push(i)),a[o]<=i&&o++}1!==e[i]&&(n.push(e[i]),r.push(i))}return{newShape:n,keptDims:r}}function C(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function E(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function A(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function $(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function D(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function _(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function F(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function R(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function O(e){return"string"===typeof e||e instanceof String}function M(e){return"boolean"===typeof e}function B(e){return"number"===typeof e}function L(e){return Array.isArray(e)?L(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":B(e)?"float32":O(e)?"string":M(e)?"bool":"float32"}function W(e){return!!(e&&e.constructor&&e.call&&e.apply)}function z(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function P(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function U(e,t,n,r=!1){const s=new Array;if(1===t.length){const a=t[0]*(r?2:1);for(let t=0;t<a;t++)s[t]=n[e+t]}else{const a=t[0],o=t.slice(1),i=o.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<a;t++)s[t]=U(e+t*i,o,n,r)}return s}function V(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return U(0,e,t,n)}function G(e,t){const n=H(e,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function H(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function j(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return V(e,new Float32Array(n));if("int32"===t)return V(e,new Int32Array(n));if("bool"===t)return V(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function X(e){e.forEach((t=>{p(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function q(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let s=0;s<e.length-1;++s)r+=n[s]*e[s];return r}function K(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let s=0;s<r.length-1;++s)r[s]=Math.floor(e/n[s]),e-=r[s]*n[s];return r[r.length-1]=e,r}function Q(e){return e&&e.then&&"function"===typeof e.then}n.d(t,{AE:function(){return x},Cq:function(){return d},D2:function(){return L},D5:function(){return A},E7:function(){return c},EC:function(){return S},GN:function(){return b},GX:function(){return V},HD:function(){return O},JZ:function(){return N},LF:function(){return i},LP:function(){return $},Mu:function(){return X},N9:function(){return g},NA:function(){return m},NE:function(){return K},QB:function(){return D},Sm:function(){return u},TV:function(){return r},U$:function(){return v},Ub:function(){return R},WD:function(){return I},WP:function(){return C},YP:function(){return w},bT:function(){return F},bj:function(){return l},bp:function(){return T},cO:function(){return y},d7:function(){return s},e3:function(){return P},fU:function(){return _},hj:function(){return B},hu:function(){return p},jP:function(){return z},jn:function(){return M},k5:function(){return h},l6:function(){return j},mf:function(){return W},nY:function(){return o},oj:function(){return k},p8:function(){return G},qy:function(){return q},rQ:function(){return E},tI:function(){return Q},uZ:function(){return a},wT:function(){return H},xH:function(){return f}})},3129:function(e,t,n){var r=n(626),s=n(477),a=n(2868),o=n(8197),i=n(1954),u=n(9695),l=n(1662);l.alea=r,l.xor128=s,l.xorwow=a,l.xorshift7=o,l.xor4096=i,l.tychei=u,e.exports=l},626:function(e,t,n){var r;!function(e,s,a){function o(e){var t=this,n=function(){var e=4022871197;return function(t){t=t.toString();for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)}}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new o(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.alea=u}(0,e=n.nmd(e),n.amdD)},9695:function(e,t,n){var r;!function(e,s,a){function o(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new o(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.tychei=u}(0,e=n.nmd(e),n.amdD)},477:function(e,t,n){var r;!function(e,s,a){function o(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new o(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xor128=u}(0,e=n.nmd(e),n.amdD)},1954:function(e,t,n){var r;!function(e,s,a){function o(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[a]=n^e,t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,s,a,o,i=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),s=0,a=-32;a<u;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(o=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(o=o+1640531527|0,s=0==(n=i[127&a]^=r+o)?s+1:0);for(s>=128&&(i[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=i[s+34&127],n=i[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,i[s]=r^n;e.w=o,e.X=i,e.i=s}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new o(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},8197:function(e,t,n){var r;!function(e,s,a){function o(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new o(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},2868:function(e,t,n){var r;!function(e,s,a){function o(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new o(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},1662:function(e,t,n){var r;!function(s,a){var o,i=this,u=256,l=a.pow(u,6),c=a.pow(2,52),p=2*c,h=255;function d(e,t,n){var r=[],h=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(s)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(u):(e=new Uint8Array(u),(i.crypto||i.msCrypto).getRandomValues(e)),b(e)}catch(r){var t=i.navigator,n=t&&t.plugins;return[+new Date,i,n,i.screen,b(s)]}}():e,3),r),d=new f(r),x=function(){for(var e=d.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=d.g(1);for(;e>=p;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|d.g(4)},x.quick=function(){return d.g(4)/4294967296},x.double=x,y(b(d.S),s),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,d),e.state=function(){return m(d,{})}),n?(a.random=e,t):e})(x,h,"global"in t?t.global:this==a,t.state)}function f(e){var t,n=e.length,r=this,s=0,a=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);s<u;)o[s]=s++;for(s=0;s<u;s++)o[s]=o[a=h&a+e[s%n]+(t=o[s])],o[a]=t;(r.g=function(e){for(var t,n=0,s=r.i,a=r.j,o=r.S;e--;)t=o[s=h&s+1],n=n*u+o[h&(o[s]=o[a=h&a+t])+(o[a]=t)];return r.i=s,r.j=a,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(g(e[n],t-1))}catch(a){}return r.length?r:"string"==s?e:e+"\0"}function y(e,t){for(var n,r=e+"",s=0;s<r.length;)t[h&s]=h&(n^=19*t[h&s])+r.charCodeAt(s++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(a.seedrandom=d,y(a.random(),s),e.exports){e.exports=d;try{o=n(5778)}catch(x){}}else void 0===(r=function(){return d}.call(t,n,t,e))||(e.exports=r)}([],Math)},8819:function(e,t,n){"use strict";n.d(t,{GD:function(){return v},Gc:function(){return y},aI:function(){return I}});var r=n(9319),s=n(9840),a=n(2931);class o extends r.m7h.Serializable{getConfig(){return{}}}class i extends o{apply(e,t=1){return s.py(e,t)}}i.className="elu",r.m7h.registerClass(i);class u extends o{apply(e){return r.U8D(e)}}u.className="selu",r.m7h.registerClass(u);class l extends o{apply(e){return r.UYe(e)}}l.className="relu",r.m7h.registerClass(l);class c extends o{apply(e){return(0,r.lub)((()=>r.LTh(6,r.UYe(e))))}}c.className="relu6",r.m7h.registerClass(c);class p extends o{apply(e){return e}}p.className="linear",r.m7h.registerClass(p);class h extends o{apply(e){return r.XD2(e)}}h.className="sigmoid",r.m7h.registerClass(h);class d extends o{apply(e){return s.HX(e)}}d.className="hardSigmoid",r.m7h.registerClass(d);class f extends o{apply(e){return r.Wvh(e)}}f.className="softplus",r.m7h.registerClass(f);class m extends o{apply(e){return s.O(e)}}m.className="softsign",r.m7h.registerClass(m);class g extends o{apply(e){return r.AEp(e)}}g.className="tanh",r.m7h.registerClass(g);class y extends o{apply(e,t=-1){return r.XAC(e,t)}}y.className="softmax",r.m7h.registerClass(y);class b extends o{apply(e,t=-1){return r.CmS(e,t)}}b.className="logSoftmax",r.m7h.registerClass(b);class x extends o{apply(e,t=1){return(0,r.lub)((()=>r.dC7(r.XD2(r.dC7(e,t)),e)))}}x.className="swish",r.m7h.registerClass(x);class w extends o{apply(e){return(0,r.lub)((()=>r.dC7(e,r.AEp(r.Wvh(e)))))}}function v(e){return e.getClassName()}function k(e,t={}){return(0,a.tU)(e,r.m7h.SerializationMap.getMap().classNameMap,t,"activation")}function I(e){if(null==e){const e={className:"linear",config:{}};return k(e)}if("string"===typeof e){const t={};return t.className=e,t.config={},k(t)}return e instanceof o?e:k(e)}w.className="mish",r.m7h.registerClass(w)},2012:function(e,t,n){"use strict";n.d(t,{Ho:function(){return a},rf:function(){return o}});var r=n(9319);let s;function a(){return null==s&&(s=(0,r.y3$)().epsilon()),s}function o(){return"channelsLast"}},9608:function(e,t,n){"use strict";n.d(t,{L:function(){return s},s:function(){return o}});let r=0;function s(){return r++}const a={};function o(e=""){return e in a||(a[e]=0),a[e]+=1,e+a[e].toString()}},9840:function(e,t,n){"use strict";n.d(t,{AK:function(){return w},GZ:function(){return y},Gg:function(){return b},HX:function(){return E},Iq:function(){return v},KC:function(){return A},O:function(){return T},Uz:function(){return h},a2:function(){return N},c9:function(){return d},dt:function(){return l},h6:function(){return k},mV:function(){return g},nG:function(){return x},pj:function(){return u},py:function(){return S},rv:function(){return C},rx:function(){return c},uI:function(){return m},xH:function(){return p}});var r=n(9319),s=n(8090),a=n(588),o=n(6040),i=n(2012);function u(e,t){return r.pju(e,t)}function l(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),r.XLQ(e,n)}function c(e,t){return(0,r.lub)((()=>{if(2!==e.shape.length)throw new a.nu(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return b(l(e,1),[1,t,1])}))}function p(e){const t=[o.NS(e.shape)];return r.XLQ(e,t)}function h(e){if(e.rank<=1)throw new a.nu(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],o.NS(e.shape,1)];return r.XLQ(e,t)}function d(e,t,n){return(0,r.lub)((()=>{switch(e.rank){case 1:return r.jZU(e,t,n);case 2:return r.SmN(e,[t,0],[n,e.shape[1]]);case 3:return r.CnO(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return r.p0P(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return r.tPi(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return r.tPi(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new a.nu(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function f(e,t,n){return(0,r.lub)((()=>{switch(e.rank){case 1:return r.jZU(e,t,n);case 2:return r.SmN(e,[0,t],[e.shape[0],n]);case 3:return r.CnO(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return r.p0P(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new a.nu(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function m(e,t,n,s){return(0,r.lub)((()=>{switch(e.rank){case 1:return r.jZU(e,t,n);case 2:switch(s){case 1:return d(e,t,n);case 2:return f(e,t,n);default:throw new a.nu(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return d(e,t,n);case 2:return r.CnO(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return f(e,t,n);default:throw new a.nu(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return d(e,t,n);case 2:return r.p0P(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return r.p0P(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return f(e,t,n);default:throw new a.nu(`The axis is not within the rank of the tensor ${s}`)}default:throw new a.nu(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function g(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),r.zoF(e,t)}function y(e,t){switch(e.rank){case 1:return r.gME([e,t]);case 2:return r.Izb([e,t],0);case 3:return r.MNy([e,t],0);case 4:return r.ZaL([e,t],0);default:throw new a.nu(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function b(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new a.nu(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return r.Gg6(e,t)}function x(e,t=0,n=1,s,a){return r.nGf(e,t,n,s,a)}function w(e,t,n,s){if(e.rank<2||t.rank<2)throw new a.nj(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new a.nj(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(2===e.rank&&2===t.rank){const a=!1,o=!1;return r.imm.matMul({a:e,b:t,transposeA:a,transposeB:o,bias:s?I(e.rank,s,(0,i.rf)()):null,activation:n})}{const a=e.shape.slice(),o=a.pop();e=r.XLQ(e,[-1,o]);const u=t.shape.slice(),l=u.pop(),c=u.pop(),p=[...u,l],h=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=r.XLQ(r.p4s(t,h),[c,-1]);const d=[...a,...p],f=!1,m=!1;return r.XLQ(r.imm.matMul({a:e,b:t,transposeA:f,transposeB:m,bias:s?I(e.rank,s,(0,i.rf)()):null,activation:n}),d)}}function v(e,t,n){return(0,r.lub)((()=>(t=Array.isArray(t)?(0,r.RRF)(t,"int32"):r.pju(t,"int32"),r.Iqj(e,t,n))))}function k(e){return r.dC7(e,e)}function I(e,t,n){const s=t.shape;if(1!==t.rank&&t.rank!==e)throw new a.nu(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===s.length?r.XLQ(t,[1,s[0],1,1,1]):r.XLQ(t,[1,s[3],s[0],s[1],s[2]]);if("channelsLast"===n)return 1===s.length?r.XLQ(t,[1,1,1,1,s[0]]):r.XLQ(t,[1].concat(s))}else if(4===e){if("channelsFirst"===n)return 1===s.length?r.XLQ(t,[1,s[0],1,1]):r.XLQ(t,[1,s[2],s[0],s[1]]);if("channelsLast"===n)return 1===s.length?r.XLQ(t,[1,1,1,s[0]]):r.XLQ(t,[1].concat(s))}else if(3===e){if("channelsFirst"===n)return 1===s.length?r.XLQ(t,[1,s[0],1]):r.XLQ(t,[1,s[1],s[0]]);if("channelsLast"===n)return 1===s.length?r.XLQ(t,[1,1,s[0]]):r.XLQ(t,[1].concat(s))}else if(e<3)return t;throw new a.nu(`Unsupported input rank by biasAdd: ${t.rank}`)}function N(e,t,n){return(0,r.lub)((()=>(null==n&&(n=(0,i.rf)()),(0,s.cj)(n),r.IHx(e,I(e.rank,t,n)))))}function S(e,t=1){if(1!==t)throw new a.nj(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return r.pyx(e)}function T(e){return(0,r.lub)((()=>r.hiC(e,r.IHx(r.WnP(e),1))))}function C(e,t,n,s){return(0,r.lub)((()=>r.rvX(e,t,n,s)))}function E(e){return(0,r.lub)((()=>{const t=r.IHx(.5,r.dC7(.2,e));return r.iUl(t,0,1)}))}function A(e,t,n=!1){return n?e():t()}},8891:function(e,t,n){"use strict";n.d(t,{CZ:function(){return d},ex:function(){return u},m$:function(){return m}});var r,s=n(9319),a=n(588),o=n(3146),i=n(2931);!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(r||(r={}));class u{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class l{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class c extends u{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const r in t){const e=t[r];if("number"===typeof e)this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+e*n;else{let t;r in this.totals?t=this.totals[r]:this.totals[r]=0;const a=(0,s.lub)((()=>(0,s.IHx)(this.totals[r],(0,s.dC7)(e,n))));this.totals[r]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const n of this.params.metrics)null!=this.totals[n]&&("number"===typeof this.totals[n]?t[n]=this.totals[n]/this.seen:(0,s.lub)((()=>{const e=(0,s.dC7)((0,s.hiC)(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),(0,s.CnY)(t[n])})))}}class p extends u{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){const e=[],t=[],n=[];for(const s in this.history){const r=this.history[s];for(let a=0;a<r.length;++a)if("number"!==typeof r[a]){const o=r[a];e.push(o.data()),t.push(s),n.push(a)}}const r=await Promise.all(e);for(let s=0;s<r.length;++s){this.history[t[s]][n[s]].dispose(),this.history[t[s]][n[s]]=r[s][0]}}}class h extends u{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||s.glt,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");s.D5U.isNumber(this.yieldEvery)&&(this.maybeWait=i.Ds(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await(0,o.Z)(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await(0,o.Z)(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await(0,o.Z)(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await(0,o.Z)(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await(0,o.Z)(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):s.D5U.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await(0,o.Z)(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await(0,o.Z)(e),await this.trainEnd(e))}}function d(e,t){if(null==e&&(e={}),e instanceof u)return[e];if(Array.isArray(e)&&e[0]instanceof u)return e;return i.zZ(e).map((e=>new h(e,t)))}class f{constructor(){}static registerCallbackConstructor(e,t){s.D5U.assert(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),f.checkForDuplicate(t),null==f.constructors[e]&&(f.constructors[e]=[]),f.constructors[e].push(t)}static checkForDuplicate(e){for(const t in f.constructors){f.constructors[+t].forEach((t=>{if(t===e)throw new a.nu("Duplicate callback constructor.")}))}}static clear(){f.constructors={}}static createCallbacks(e){const t=[];for(const n in f.constructors){const r=+n;e>=r&&t.push(...f.constructors[r])}return t.map((e=>new e))}}function m(e,t,n,r,s,a,o,i,u){const h=new p,d=[new c,...f.createCallbacks(t)];null!=e&&d.push(...e),d.push(h);const m=new l(d);return m.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:o,verbose:t,doValidation:i,metrics:u}),{callbackList:m,history:h}}f.constructors={}},8090:function(e,t,n){"use strict";n.d(t,{Lp:function(){return l},MU:function(){return h},cj:function(){return o},f4:function(){return p},w8:function(){return d},wU:function(){return i},zb:function(){return u}});var r=n(4685),s=n(2931);const a=new Map;function o(e){(0,s.xn)(r.PS,"DataFormat",e)}function i(e){(0,s.xn)(r.Mz,"InterpolationFormat",e)}function u(e){(0,s.xn)(r.zx,"PaddingMode",e)}function l(e){(0,s.xn)(r.MK,"PoolMode",e)}const c=[];function p(e,t){c.push(e);try{const e=t();return c.pop(),e}catch(n){throw c.pop(),n}}function h(e){if(!m(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===c.length?"":c.join("/")+"/")+e}function d(e){if(!m(e))throw new Error("Not a valid tensor name: '"+e+"'");a.has(e)||a.set(e,0);const t=a.get(e);if(a.set(e,a.get(e)+1),t>0){const n=`${e}_${t}`;return a.set(n,1),n}return e}const f=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function m(e){return!!e.match(f)}},4079:function(e,t,n){"use strict";n.d(t,{Ad:function(){return m},xF:function(){return d}});var r=n(9319),s=n(2012),a=n(2931);function o(e,t){return(0,r.lub)((()=>r._b3(r.Smz(r.dC7(e,e),t,!0))))}class i extends r.m7h.Serializable{getConfig(){return{}}}class u extends i{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,r.lub)((()=>{const t=o(e,this.axis),n=r.iUl(t,0,this.maxValue);return r.dC7(e,r.hiC(n,r.IHx((0,s.Ho)(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}u.className="MaxNorm",r.m7h.registerClass(u);class l extends i{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,r.lub)((()=>r.hiC(e,r.IHx((0,s.Ho)(),o(e,this.axis)))))}getConfig(){return{axis:this.axis}}}l.className="UnitNorm",r.m7h.registerClass(l);class c extends i{apply(e){return r.UYe(e)}}c.className="NonNeg",r.m7h.registerClass(c);class p extends i{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,r.lub)((()=>{const t=o(e,this.axis),n=r.IHx(r.dC7(this.rate,r.iUl(t,this.minValue,this.maxValue)),r.dC7(1-this.rate,t));return r.dC7(e,r.hiC(n,r.IHx((0,s.Ho)(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}p.className="MinMaxNorm",r.m7h.registerClass(p);const h={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function d(e){return(0,a.Kj)(e)}function f(e,t={}){return(0,a.tU)(e,r.m7h.SerializationMap.getMap().classNameMap,t,"constraint")}function m(e){if(null==e)return null;if("string"===typeof e){return f({className:e in h?h[e]:e,config:{}})}return e instanceof i?e:f(e)}},1111:function(e,t,n){"use strict";n.d(t,{l2:function(){return l},ht:function(){return d},kS:function(){return h}});var r=n(9319),s=n(588);class a{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}var o=n(2931),i=n(4396),u=n(163);class l{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof l)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new s.nu(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return(0,r.pju)(t,e.dtype)}catch(n){throw new s.nu(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof u.Iy){if(null==this.id2Value[e.id])throw new s.nu(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new s.nu(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof u.Iy){if(null==this.id2Value[e.id])throw new s.nu(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new s.nu(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&(0,r.B90)(this.id2Mask)}}const c=new a,p=new a;function h(e){null!=c&&c.setMaxEntries(e),null!=p&&p.setMaxEntries(e)}function d(e,t,n,s){const a=null!=n&&n.training,u=Array.isArray(e),h=u?e:[e],d=h.map((e=>e.name)),y=[],b=t.names();for(const r of d)-1!==b.indexOf(r)?y.push(t.getValue(r)):y.push(null);null!=s&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const x=d.join(",")+"|"+t.names().sort().join(",");let w,v=c.get(x);if(null==v){const e=function(e,t){r.D5U.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],s={};if(1===e.length){const r=m(e[0],t);n=r.sorted,s=r.recipientMap}else{const r=new Set;for(const a of e){const{sorted:e,recipientMap:o}=m(a,t);for(const t of e)r.has(t.name)||(n.push(t),r.add(t.name));for(const t in o)null==s[t]&&(s[t]=new Set),o[t].forEach((e=>s[t].add(e)))}}return{sorted:n,recipientCounts:f(s)}}(h,t);v=e.sorted,w=e.recipientCounts,c.put(x,v),p.put(x,w)}w={},a||Object.assign(w,p.get(x));const k=new l(t);for(let l=0;l<v.length;++l){if(null!=s){const e=(0,r.sq6)().numTensors;e>s.maxNumTensors&&(s.maxNumTensors=e),e<s.minNumTensors&&(s.minNumTensors=e)}const e=v[l],u=e.sourceLayer;if(u instanceof i.l)continue;const c=[],p=[],h=[];let f=!1;for(const n of e.inputs){const e=k.getValue(n),r=k.getMask(n);c.push(e),p.push(r),null!=r&&(f=!0),a||(w[n.name]--,0!==w[n.name]||t.hasKey(n)||-1!==d.indexOf(n.name)||e.isDisposed||!0===n.sourceLayer.stateful||h.push(e))}f&&((n=n||{}).mask=p[0]);const m=(0,o.zZ)(u.apply(c,n));let b=null;u.supportsMasking&&(b=u.computeMask(c,p));const x=g(e),I=Array.isArray(x)?x:[x];for(let t=0;t<I.length;++t){k.hasKey(I[t])||k.add(I[t],m[t],Array.isArray(b)?b[0]:b);const e=d.indexOf(I[t].name);-1!==e&&(y[e]=m[t])}a||(0,r.B90)(h)}return k.disposeMasks(),u?y:y[0]}function f(e){const t={};for(const n in e)t[n]=e[n].size;return t}function m(e,t){const n=new Set,r=[],s={};for(const i of t.names())n.add(i);const a=[],o=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=o[o.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),r.push(e),n.add(e.name),t&&o.pop();else{o.push(a.length-1);for(const t of e.inputs)null==s[t.name]&&(s[t.name]=new Set),s[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:r,recipientMap:s}}function g(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}},4396:function(e,t,n){"use strict";n.d(t,{I:function(){return u},l:function(){return i}});var r=n(9319),s=n(9608),a=n(588),o=n(163);class i extends o.mh{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:(0,s.s)("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new a.nu("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new a.nu("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new a.nu("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new o.Iy(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new o.NB({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new a.nu(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function u(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new a.nu("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;null==n&&(n="float32");return new i({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}i.className="InputLayer",r.m7h.registerClass(i)},163:function(e,t,n){"use strict";n.d(t,{Iy:function(){return d},NB:function(){return m},Zg:function(){return h},hA:function(){return b},mh:function(){return y}});var r=n(9319),s=n(9608),a=n(8090),o=n(588),i=n(2599),u=n(2931),l=n(7538),c=n(3013),p=n(1653);class h{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class d{constructor(e,t,n,r,o,i,u){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=o,this.outputTensorIndex=u,this.id=(0,s.L)(),null!=i&&(this.originalName=(0,a.MU)(i),this.name=(0,a.w8)(this.originalName)),this.rank=t.length}}let f=0;class m{constructor(e,t){this.callArgs=t,this.id=f++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let g=0;class y extends r.m7h.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=g++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=u.D1(e)+"_"+(0,s.s)(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new o.LH(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new o.nu(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return u.Bq(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return u.Bq(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new o.j1(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new o.j1(`Layer ${this.name} is not connected, no input to return.`);return u.Bq(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new o.j1(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new o.j1(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return u.Bq(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=u.zZ(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=u.zZ(this.inputSpec);if(e.length!==t.length)throw new o.nu(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],s=t[n];if(null==s)continue;const a=r.rank;if(null!=s.ndim&&a!==s.ndim)throw new o.nu(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(null!=s.maxNDim&&a>s.maxNDim)throw new o.nu(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(null!=s.minNDim&&a<s.minNDim)throw new o.nu(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new o.nu(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const e=r.shape;for(const t in s.axes){const r=Number(t),a=s.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=a&&-1===[a,null].indexOf(i))throw new o.nu(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${a} but got shape ${e}.`)}}if(null!=s.shape)for(let e=0;e<s.shape.length;++e){const t=s.shape[e],a=r.shape[e];if(null!=t&&null!=a&&t!==a)throw new o.nu(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=u.zZ(e);let r=!0;for(const a of n)if(!(a instanceof d)){r=!1;break}let s=!0;for(const a of n)if(a instanceof d){s=!1;break}if(r===s)throw new o.nu("Arguments to apply() must be all SymbolicTensors or all Tensors");return(0,a.f4)(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of u.zZ(e))t.push(n.shape);this.build(u.Bq(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let r=this.call(e,t);const s=u.zZ(r),a=[];for(let e of s)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(r=u.Bq(a),null!=this.activityRegularizer)throw new o.nj("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=u.zZ(e);const t=[];for(const n of e)t.push(n.shape);return u.Bq(t)}(e),r=this.computeOutputShape(n);let s;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new d(a,n,this,u.zZ(e),t,this.name,r))):new d(a,r,this,u.zZ(e),t,this.name),this.addInboundNode(e,s,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new o.nj("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new o.j1(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new o.j1(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new o.LH(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return c.t(this.weights)}build(e){this.built=!0}getWeights(e=!1){return(0,p.FQ)(e?this.trainableWeights:this.weights)}setWeights(e){(0,r.lub)((()=>{const t=this.weights;if(t.length!==e.length)throw new o.nu(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],s=(0,p.FQ)(t);for(let a=0;a<s.length;++a){const i=s[a],u=t[a],l=e[a];if(!r.D5U.arraysEqual(i.shape,l.shape))throw new o.nu(`Layer weight shape ${i.shape} not compatible with provided weight shape ${l.shape}`);n.push([u,l])}(0,p.zb)(n)}))}addWeight(e,t,n,r,s,a,u,l){if(-1!==this._addedWeightNames.indexOf(e))throw new o.nu(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=l?l():(0,i.L5)("zeros"));const c=r.apply(t,n),h=new p.fU(c,n,e,a,u);return c.dispose(),null!=s&&this.addLoss((()=>s.apply(h.read()))),null==a&&(a=!0),a?this._trainableWeights.push(h):this._nonTrainableWeights.push(h),h}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=u.zZ(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,s,a,o=null){const i=u.zZ(e);t=u.zZ(t),n=u.zZ(n),r=u.zZ(r),s=l.x6(s),a=l.x6(a);const c=[],p=[],h=[];for(const u of i)c.push(u.sourceLayer),p.push(u.nodeIndex),h.push(u.tensorIndex);new m({outboundLayer:this,inboundLayers:c,nodeIndices:p,tensorIndices:h,inputTensors:i,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},o);for(let u=0;u<t.length;u++)t[u].sourceLayer=this,t[u].nodeIndex=this.inboundNodes.length-1,t[u].tensorIndex=u}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0===--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function b(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=b(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}},8913:function(e,t,n){"use strict";n.d(t,{D:function(){return d},y:function(){return p}});var r=n(9319),s=n(8891),a=n(588),o=n(3146),i=n(2931),u=n(6529);function l(e,t){let n,s;const a=t;n=a.xs,s=a.ys,r.D5U.assert(null!=n&&null!=s,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const o=c("input",e.inputNames,n),i=c("output",e.outputNames,s),u=o[0].shape[0];r.D5U.assert(o.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${o.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),r.D5U.assert(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let l=0;l<o.length;l++)r.D5U.assert(o[l].shape[0]===u,(()=>`Batch size mismatch: input ${e.inputNames[l]} has ${o[l].shape[0]}; expected  ${u} based on input ${e.inputNames[0]}.`));for(let l=0;l<i.length;l++)r.D5U.assert(i[l].shape[0]===u,(()=>`Batch size mismatch: output ${e.outputNames[l]} has ${i[l].shape[0]}; expected  ${u} based on input ${e.inputNames[0]}.`));return{xs:o,ys:i}}function c(e,t,n){if(n instanceof r.esB)return[n];if(Array.isArray(n))return r.D5U.assert(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const s of t){if(null==n[s])throw new a.nu(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);r.push(n[s])}return r}}async function p(e,t,n){const c=null!=n.batchesPerEpoch;if(r.D5U.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),r.D5U.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),r.D5U.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),r.D5U.assert(!c||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),r.D5U.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const p=null!=n.validationData;let d,f;if(p)if(h(n.validationData))r.D5U.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new a.nj("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);d=e.xs,f=e.ys}const m=e.makeTrainFunction(),g=e.getDedupedMetricsNames();let y;y=p?g.slice().concat(g.map((e=>"val_"+e))):g.slice();const b=(0,s.CZ)(n.callbacks,n.yieldEvery),x=null==n.verbose?1:n.verbose,{callbackList:w,history:v}=(0,s.m$)(b,x,n.epochs,null,null,function(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(t,n),null,p,y);w.setModel(e),e.history=v,await w.onTrainBegin(),e.stopTraining_=!1;let k=null==n.initialEpoch?0:n.initialEpoch,I=await t.iterator();for(;k<n.epochs;){const s={};await w.onEpochBegin(k);let a=0,y=0;for(c||(I=await t.iterator());!c||a<n.batchesPerEpoch;){const t=await I.next();if(c&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${a} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:s,ys:i}=l(e,t.value),c={};c.batch=y,c.size=s[0].shape[0],await w.onBatchBegin(y,c);const p=[];if(null!=n.classWeight){const t=(0,u.Vf)(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)p.push(await(0,u.tl)(i[e],null,t[e]))}const h=s.concat(i).concat(p),d=m(h);r.B90(h);for(let e=0;e<g.length;++e){const t=g[e],n=d[e];c[t]=n,r.CnY(n)}await w.onBatchEnd(y,c),(0,o.i)(c),y++,a++}if(c?a>=n.batchesPerEpoch:t.done){if(p){let t;t=h(n.validationData)?(0,i.zZ)(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):(0,i.zZ)(e.evaluate(d,f,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)s[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await w.onEpochEnd(k,s),k++,e.stopTraining_)break}return await w.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function h(e){return"function"===typeof e.iterator}async function d(e,t,n){const s=null!=(n=n||{}).batches,o=e.testFunction;let u=[];if(n.verbose>0)throw new a.nj("Verbose mode is not implemented yet.");r.D5U.assert(!s||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const c="function"===typeof t.next?t:await t.iterator();let p=0,h=0;for(;!s||h<n.batches;){const t=await c.next();if(u=r.lub((()=>{if(t.value){const{xs:n,ys:s}=l(e,t.value),a=n.concat(s),i=r.lub((()=>o(a)));if(r.B90(a),0===h)for(let e=0;e<i.length;++e)u.push((0,r.iD$)(0));const c=a[0].shape[0];for(let e=0;e<i.length;++e){const t=i[e],n=u[e];u[e]=r.lub((()=>r.IHx(u[e],r.dC7(c,t)))),h>0&&r.B90(n)}r.B90(i),p+=c,++h}return u})),t.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let a=0;a<u.length;++a){const e=u[a];u[a]=r.hiC(u[a],p),r.B90(e)}return(0,i.Bq)(u)}},6347:function(e,t,n){"use strict";n.d(t,{R_:function(){return h},YV:function(){return f},YX:function(){return p},fQ:function(){return l},kS:function(){return m},sf:function(){return c},uU:function(){return d}});var r=n(9319),s=n(9840),a=n(8891),o=n(588),i=n(3146),u=n(6040);function l(e){r.D5U.assert(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function c(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>(0,s.c9)(e,t,n-t))):(0,s.c9)(e,t,n-t)}function p(e,t){return r.lub((()=>null==e?null:Array.isArray(e)?e.map((e=>p(e,t))):(0,s.Iq)(e,"int32"===t.dtype?t:r.pju(t,"int32"))))}function h(e,t){const n=[];let r=0,s=null;for(;r<e;)s=r+t,s>=e&&(s=e),n.push([r,s]),r=s;return n}async function d(e,t,n,d={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let f,g,y,b,x,w,v,k,I;e.isTraining=!0;try{const N=null==d.batchSize?32:d.batchSize;l(N);const S=!1,T=await e.standardizeUserData(t,n,d.sampleWeight,d.classWeight,S,N);f=T[0],g=T[1],I=T[2];let C,E=!1;if(null!=d.validationData&&d.validationData.length>0){if(E=!0,2!==d.validationData.length)throw 3===d.validationData.length?new o.nj("validationData including sample weights is not supported yet."):new o.nu(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${d.validationData} is invalid.`);x=d.validationData[0],w=d.validationData[1];const t=!0,n=await e.standardizeUserData(x,w,null,null,t,N);v=n[0],k=n[1],C=v.concat(k)}else if(null!=d.validationSplit&&d.validationSplit>0&&d.validationSplit<1){E=!0;const e=Math.floor(f[0].shape[0]*(1-d.validationSplit)),t=f[0].shape[0];v=c(f,e,t),y=f,f=c(f,0,e),k=c(g,e,t),b=g,g=c(g,0,e),C=v.concat(k)}else null!=d.validationSteps&&(E=!0);const A=f.concat(g).concat(I);e.checkTrainableWeightsConsistency();const $=e.makeTrainFunction(),D=e.getDedupedMetricsNames();let _,F;E?(e.makeTestFunction(),_=e.testFunction,F=D.slice().concat(D.map((e=>"val_"+e)))):(_=null,C=[],F=D.slice());const R=(0,a.CZ)(d.callbacks,d.yieldEvery),O=await async function(e,t,n,l,c,d,f,m,g,y,b,x,w,v,k){null==c&&(c=32),null==d&&(d=1),null==b&&(b=!0),null==w&&(w=0);let I=!1;if(null!=g&&null!=y&&(I=!0),null!=k&&(I=!0,null==v))throw new o.nu("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const N=e.checkNumSamples(n,c,v,"steps_per_epoch");let S;null!=N&&(S=(0,u.w6)(0,N)),null==f&&(f=1);const{callbackList:T,history:C}=(0,a.m$)(m,f,d,w,N,v,c,I,x);T.setModel(e),e.history=C,await T.onTrainBegin(),e.stopTraining_=!1;for(let a=w;a<d;++a){await T.onEpochBegin(a);const u={};if(null!=v)throw new o.nj("stepsPerEpoch mode is not implemented yet.");{if("batch"===b)throw new o.nj("batch shuffling is not implemneted yet");b&&r.D5U.shuffle(S);const a=(0,r.RRF)(S),d=h(N,c);for(let o=0;o<d.length;++o){const h={};if(await T.onBatchBegin(o,h),r.lub((()=>{const i=d[o][0],f=d[o][1],m=(0,s.c9)(a,i,f-i);h.batch=o,h.size=f-i;const b=p(n,m),x=t(b);for(let e=0;e<l.length;++e){const t=l[e],n=x[e];h[t]=n,r.CnY(n)}if(o===d.length-1&&I){const t=e.testLoop(g,y,c);for(let e=0;e<l.length;++e){const n=l[e],s=t[e];r.CnY(s),u["val_"+n]=s}}})),await T.onBatchEnd(o,h),(0,i.i)(h),e.stopTraining_)break}a.dispose()}if(await T.onEpochEnd(a,u),e.stopTraining_)break}return await T.onTrainEnd(),await e.history.syncData(),e.history}(e,$,A,D,N,d.epochs,d.verbose,R,_,C,d.shuffle,F,d.initialEpoch,null,null);return O}finally{e.isTraining=!1,m(f,t),m(g,n),m(y,t),m(b,n),m(v,x),m(k,w),null!=I&&r.B90(I)}}function f(e){const t=[];e instanceof r.esB&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push((0,s.dt)(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function m(e,t){if(null==e)return;const n=[];if(t instanceof r.esB)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const r in t){const e=t[r];n.push(e.id)}const s=[];if(e instanceof r.esB)-1===n.indexOf(e.id)&&s.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&s.push(e)}));else if(null!=e)for(const r in e){const t=e[r];-1===n.indexOf(t.id)&&s.push(t)}s.forEach((e=>{e.isDisposed||e.dispose()}))}},6529:function(e,t,n){"use strict";n.d(t,{Vf:function(){return a},mo:function(){return i},tl:function(){return o}});var r=n(9319);function s(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"===typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"===typeof e&&Object.keys(e).length>0&&"object"===typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function a(e,t){return s(e,t,"classWeight")}async function o(e,t,n,s){if(null!=t||null!=s)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=(0,r.lub)((()=>{if(1===e.shape.length)return(0,r.d9v)(e);if(2===e.shape.length){if(e.shape[1]>1){const t=1;return(0,r.NqF)(e,t)}if(1===e.shape[1])return(0,r.XLQ)(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),s=Array.from(await t.data());(0,r.B90)(t);const a=[];return s.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])})),(0,r.RRF)(a,"float32")}return null}function i(e,t){return(0,r.dC7)(e,t)}},588:function(e,t,n){"use strict";n.d(t,{LH:function(){return s},j1:function(){return r},nj:function(){return o},nu:function(){return a},ps:function(){return i}});class r extends Error{constructor(e){super(e),Object.setPrototypeOf(this,r.prototype)}}class s extends Error{constructor(e){super(e),Object.setPrototypeOf(this,s.prototype)}}class a extends Error{constructor(e){super(e),Object.setPrototypeOf(this,a.prototype)}}class o extends Error{constructor(e){super(e),Object.setPrototypeOf(this,o.prototype)}}class i extends Error{constructor(e){super(e),Object.setPrototypeOf(this,i.prototype)}}Error},2599:function(e,t,n){"use strict";n.d(t,{m7:function(){return p},M6:function(){return d},L5:function(){return $},Cx:function(){return A}});var r=n(9319),s=n(9840),a=n(8090),o=n(588);const i=["fanIn","fanOut","fanAvg"],u=["normal","uniform","truncatedNormal"];var l=n(2931),c=n(6040);class p extends r.m7h.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class h extends p{apply(e,t){return(0,r.lls)(e,t)}}h.className="Zeros",r.m7h.registerClass(h);class d extends p{apply(e,t){return(0,r.iUs)(e,t)}}d.className="Ones",r.m7h.registerClass(d);class f extends p{constructor(e){if(super(),"object"!==typeof e)throw new o.nu(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new o.nu(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return(0,r.lub)((()=>(0,r.dC7)((0,r.iD$)(this.value),(0,r.iUs)(e,t))))}getConfig(){return{value:this.value}}}f.className="Constant",r.m7h.registerClass(f);class m extends p{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return(0,r.LGj)(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}m.className="RandomUniform",r.m7h.registerClass(m);class g extends p{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new o.nj(`randomNormal does not support dType ${t}.`);return s.nG(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}g.className="RandomNormal",r.m7h.registerClass(g);class y extends p{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new o.nj(`truncatedNormal does not support dType ${t}.`);return(0,r.Xu6)(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}y.className="TruncatedNormal",r.m7h.registerClass(y);class b extends p{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return(0,r.lub)((()=>{if(2!==e.length||e[0]!==e[1])throw new o.nu("Identity matrix initializer can only be used for 2D square matrices.");return(0,r.dC7)(this.gain,(0,r.iyy)(e[0]))}))}getConfig(){return{gain:this.gain}}}b.className="Identity",r.m7h.registerClass(b);class x extends p{constructor(e){if(super(),e.scale<0)throw new o.nu(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,(0,l.xn)(i,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){(0,l.xn)(u,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if((0,a.cj)(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=(0,c.NS)(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=(0,c.NS)(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=(0,c.NS)(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),s=n[0],i=n[1];let u=this.scale;if("fanIn"===this.mode?u/=Math.max(1,s):"fanOut"===this.mode?u/=Math.max(1,i):u/=Math.max(1,(s+i)/2),"normal"===this.distribution){const n=Math.sqrt(u);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new o.nj(`${this.getClassName()} does not support dType ${t}.`);return(0,r.Xu6)(e,0,n,t,this.seed)}{const n=Math.sqrt(3*u);return(0,r.LGj)(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}x.className="VarianceScaling",r.m7h.registerClass(x);class w extends x{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return x.className}}w.className="GlorotUniform",r.m7h.registerClass(w);class v extends x{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return x.className}}v.className="GlorotNormal",r.m7h.registerClass(v);class k extends x{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return x.className}}k.className="HeNormal",r.m7h.registerClass(k);class I extends x{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return x.className}}I.className="HeUniform",r.m7h.registerClass(I);class N extends x{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return x.className}}N.className="LeCunNormal",r.m7h.registerClass(N);class S extends x{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return x.className}}S.className="LeCunNormal",r.m7h.registerClass(S);class T extends p{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new o.nj("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return(0,r.lub)((()=>{if(e.length<2)throw new o.nj("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=e[0]>e[1]?[e[1],e[0]]:e,n=s.nG(t,0,1,"float32");let a=r.$r2.gramSchmidt(n);return e[0]>e[1]&&(a=(0,r.p4s)(a)),(0,r.dC7)(this.gain,a)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}T.className="Orthogonal",r.m7h.registerClass(T);const C={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function E(e,t={}){return(0,l.tU)(e,r.m7h.SerializationMap.getMap().classNameMap,t,"initializer")}function A(e){return(0,l.Kj)(e)}function $(e){if("string"===typeof e){const t=e in C?C[e]:e;if("GlorotNormal"===t)return new v;if("GlorotUniform"===t)return new w;if("HeNormal"===t)return new k;if("HeUniform"===t)return new I;if("LeCunNormal"===t)return new N;if("LeCunUniform"===t)return new S;{const e={};return e.className=t,e.config={},E(e)}}return e instanceof p?e:E(e)}},4685:function(e,t,n){"use strict";n.d(t,{MK:function(){return o},Mz:function(){return s},PS:function(){return r},eY:function(){return i},zx:function(){return a}});const r=["channelsFirst","channelsLast"],s=["nearest","bilinear"],a=["valid","same","causal"],o=["max","avg"],i=["sum","mul","concat","ave"]},9897:function(e,t,n){"use strict";n.d(t,{v:function(){return a}});var r=n(9319),s=n(2931);function a(e,t={},n=!1){return(0,s.tU)(e,r.m7h.SerializationMap.getMap().classNameMap,t,"layer",n)}},3146:function(e,t,n){"use strict";n.d(t,{Z:function(){return s},i:function(){return a}});var r=n(9319);async function s(e){if(null==e)return;const t=[],n=[],s=[];for(const r in e){const a=e[r];if("number"!==typeof a){const e=a;t.push(e.data()),n.push(r),s.push(e)}}if(t.length>0){const a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];(0,r.B90)(s)}}function a(e){if(null!=e)for(const t in e){const n=e[t];"number"!==typeof n&&n.dispose()}}},6275:function(e,t,n){"use strict";n.d(t,{Eq:function(){return i},FD:function(){return u},KM:function(){return d},Ls:function(){return g},U2:function(){return b},dr:function(){return y},fO:function(){return f},ke:function(){return l},t3:function(){return c},uq:function(){return h}});var r=n(9319),s=n(2012),a=n(9840),o=n(588);function i(e,t){return(0,r.lub)((()=>{"float32"!==e.dtype&&(e=r.pju(e,"float32"));const n=r.Smz(a.h6(e),t,!0),o=r.hlL(n.shape,(0,s.Ho)()),i=r._b3(r.gWQ(n,o));return r.hiC(e,i)}))}function u(e,t){return(0,r.lub)((()=>r.J69(a.h6(r.luU(t,e)),-1)))}function l(e,t){return(0,r.lub)((()=>r.J69(r.WnP(r.luU(t,e)),-1)))}function c(e,t){return(0,r.lub)((()=>{const n=r.luU(e,t),a=r.iUl(r.WnP(e),(0,s.Ho)(),Number.MAX_VALUE),o=r.WnP(r.hiC(n,a));return r.dC7(100,r.J69(o,-1))}))}function p(e,t){return(0,r.lub)((()=>{const n=r.iUl(t,(0,s.Ho)(),Number.MAX_VALUE),o=r.cM7(r.IHx(1,n)),i=r.iUl(e,(0,s.Ho)(),Number.MAX_VALUE),u=r.cM7(r.IHx(1,i));return r.J69(a.h6(r.luU(o,u)),-1)}))}function h(e,t,n=!1){return(0,r.lub)((()=>{if(n)t=r.XAC(t);else{const e=r.Smz(t,t.shape.length-1,!0);t=r.hiC(t,e)}return t=r.iUl(t,(0,s.Ho)(),1-(0,s.Ho)()),r.W76(r.Smz(r.dC7(r.pju(e,"float32"),r.cM7(t)),t.shape.length-1))}))}function d(e,t,n=!1){return(0,r.lub)((()=>{const o=r.pju(r.GWj(a.xH(e)),"int32"),i=(t=r.iUl(t,(0,s.Ho)(),1-(0,s.Ho)())).shape;return h(r.XLQ(r.lfX(o,i[i.length-1]),i),t,n)}))}function f(e,t){return(0,r.lub)((()=>{let n;return n=r.iUl(t,(0,s.Ho)(),1-(0,s.Ho)()),n=r.cM7(r.hiC(n,r.luU(1,n))),r.J69(function(e,t){if(!r.D5U.arraysEqual(e.shape,t.shape))throw new o.nu(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return(0,r.lub)((()=>{const n=r.UYe(t),s=r.W76(r.WnP(t));return r.IHx(r.luU(n,r.dC7(t,e)),r.Krr(r.Qqt(s)))}))}(e,n),-1)}))}function m(e,t){return(0,r.lub)((()=>{const n=r.iUl(e,(0,s.Ho)(),1),a=r.iUl(t,(0,s.Ho)(),1);return r.Smz(r.dC7(e,r.cM7(r.hiC(n,a))),-1)}))}function g(e,t){return(0,r.lub)((()=>{const n=i(e,-1),s=i(t,-1),a=r.dC7(n,s);return r.W76(r.Smz(a,-1))}))}const y={meanSquaredError:u,meanAbsoluteError:l,meanAbsolutePercentageError:c,meanSquaredLogarithmicError:p,squaredHinge:function(e,t){return(0,r.lub)((()=>{const n=r.gWQ(0,r.luU(1,r.dC7(e,t)));return r.J69(a.h6(n),-1)}))},hinge:function(e,t){return(0,r.lub)((()=>{const n=r.gWQ(0,r.luU(1,r.dC7(e,t)));return r.J69(n,-1)}))},categoricalHinge:function(e,t){return(0,r.lub)((()=>{const n=r.Smz(r.dC7(e,t),-1),s=r.Fp7(r.dC7(r.luU(1,e),t),-1);return r.gWQ(0,r.IHx(1,r.luU(s,n)))}))},logcosh:function(e,t){return(0,r.lub)((()=>{const n=Math.log(2),s=r.luU(t,e),a=r.luU(r.IHx(s,r.Wvh(r.dC7(-2,s))),n);return r.J69(a,-1)}))},categoricalCrossentropy:h,sparseCategoricalCrossentropy:d,binaryCrossentropy:f,kullbackLeiblerDivergence:m,poisson:function(e,t){return(0,r.lub)((()=>{const n=r.cM7(r.IHx((0,s.Ho)(),t));return r.J69(r.luU(t,r.dC7(e,n)),-1)}))},cosineProximity:g};function b(e){if("string"===typeof e){if(e in y)return y[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new o.nu(t)}return e}},7629:function(e,t,n){"use strict";n.d(t,{G5:function(){return l},KM:function(){return v},TY:function(){return h},U2:function(){return I},_F:function(){return u},aI:function(){return N},fO:function(){return p},uq:function(){return x}});var r=n(9319),s=n(9840),a=n(588),o=n(6275),i=n(2931);function u(e,t){return(0,r.lub)((()=>{const n=r.dC7(.5,r.JpU(t)),a=s.pj(r.pjt(t,n),e.dtype);return r.J69(r.DgJ(e,a),-1)}))}function l(e,t){return(0,r.lub)((()=>s.pj(r.DgJ(r.NqF(e,-1),r.NqF(t,-1)),"float32")))}function c(e,t){return(0,r.lub)((()=>r.pju(r.Smz(r.HvI(r.DgJ(e,1),r.DgJ(t,1))),"float32")))}function p(e,t){return(0,o.fO)(e,t)}function h(e,t){return e.rank===t.rank&&(e=r.L9e(e,[e.rank-1])),(t=r.NqF(t,-1)).dtype!==e.dtype&&(t=r.pju(t,e.dtype)),r.pju(r.DgJ(e,t),"float32")}const d=o.FD,f=o.FD,m=o.ke,g=o.ke,y=o.t3,b=o.t3,x=o.uq,w=o.Ls,v=o.KM,k={binaryAccuracy:u,categoricalAccuracy:l,precision:function(e,t){return(0,r.lub)((()=>{const n=c(e,t),s=function(e,t){return(0,r.lub)((()=>r.pju(r.Smz(r.HvI(r.DgJ(e,0),r.DgJ(t,1))),"float32")))}(e,t),a=r.IHx(n,s);return r.pju(r.arb(r.pjt(a,0),r.hiC(n,a),0),"float32")}))},categoricalCrossentropy:x,sparseCategoricalCrossentropy:v,mse:d,MSE:f,mae:m,MAE:g,mape:y,MAPE:b,cosine:w};function I(e){if("string"===typeof e&&e in k)return k[e];if("string"!==typeof e&&null!=e)return e;throw new a.nu(`Unknown metric ${e}`)}function N(e){if(i.hu(null!==e,`Unknown LossOrMetricFn ${e}`),"string"===typeof e)return e;{let t;for(const n of Object.keys(o.dr))if(o.dr[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(k))if(k[n]===e){t=n;break}return void 0!==t?t:e.name}}},2328:function(e,t,n){"use strict";n.d(t,{j:function(){return o}});var r=n(9319),s=n(2012),a=n(588);function o(e){const t={Adagrad:()=>r.p_j.adagrad(.01),Adadelta:()=>r.p_j.adadelta(1,.95,(0,s.Ho)()),Adam:()=>r.p_j.adam(.001,.9,.999,(0,s.Ho)()),Adamax:()=>r.p_j.adamax(.002,.9,.999,(0,s.Ho)(),0),RMSProp:()=>r.p_j.rmsprop(.001,.9,0,(0,s.Ho)()),SGD:()=>r.p_j.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new a.nu(`Unknown Optimizer ${e}`)}},539:function(e,t,n){"use strict";n.d(t,{EC:function(){return h},SG:function(){return c}});var r=n(9319),s=n(9840),a=n(2931);function o(e){if(null!=e&&"object"!==typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}class i extends r.m7h.Serializable{}class u extends i{constructor(e){super(),o(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return(0,r.lub)((()=>{let t=(0,r.lls)([1]);return this.hasL1&&(t=(0,r.IHx)(t,(0,r.Smz)(r.dC7(this.l1,(0,r.WnP)(e))))),this.hasL2&&(t=(0,r.IHx)(t,(0,r.Smz)(r.dC7(this.l2,s.h6(e))))),r.XLQ(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}u.className="L1L2",r.m7h.registerClass(u);const l={l1l2:"L1L2"};function c(e){return(0,a.Kj)(e)}function p(e,t={}){return(0,a.tU)(e,r.m7h.SerializationMap.getMap().classNameMap,t,"regularizer")}function h(e){if(null==e)return null;if("string"===typeof e){return p({className:e in l?l[e]:e,config:{}})}return e instanceof i?e:p(e)}},8374:function(e,t,n){"use strict";n.d(t,{WE:function(){return s}});const r=1048576;function s(e,t,n=!1){if(null==e||"object"!==typeof e||Object.getPrototypeOf(e)!==Object.prototype||!a(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>r&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function a(e){if(null===e)return!0;if("object"===typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!==typeof n)return!1;if(!a(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!a(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}},6517:function(e,t,n){"use strict";n.d(t,{$U:function(){return u},AF:function(){return o},kt:function(){return i}});var r=n(588),s=n(2931),a=n(6040);function o(e,t,n){if("number"===typeof e)return(0,s.JE)(e,t);if(e.length!==t)throw new r.nu(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){const o=e[s];if(!(0,a.U)(o))throw new r.nu(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${o}`)}return e}function i(e,t,n,r,s=1){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*(s-1))+1,Math.floor((a+r-1)/r)}function u(e,t,n,s){if(null==e)return null;if("valid"===s)e=e*t+(0,a.Fp)([n-t,0]);else{if("same"!==s)throw new r.nu(`Unsupport padding mode: ${s}.`);e*=t}return e}},2931:function(e,t,n){"use strict";n.d(t,{Bq:function(){return u},D1:function(){return c},Ds:function(){return I},JE:function(){return a},Kj:function(){return d},L7:function(){return g},Mx:function(){return w},QX:function(){return i},Tw:function(){return y},WT:function(){return N},hu:function(){return o},iQ:function(){return v},nK:function(){return b},tU:function(){return m},xn:function(){return x},zW:function(){return p},zZ:function(){return l}});var r=n(9319),s=n(588);function a(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function o(e,t){if(!e)throw new s.ps(t)}function i(e,t){let n=0;for(const r of e)r===t&&n++;return n}function u(e){return 1===e.length?e[0]:e}function l(e){return Array.isArray(e)?e:[e]}function c(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function p(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let h={};function d(e){if(null===e||void 0===e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function f(e){if(null!=e&&"object"===typeof e)if(Array.isArray(e))e.forEach((e=>f(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"===typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!==typeof t.value?f(t):e[n]=t.value)}}}function m(e,t={},n={},r="object",a=!1){if("string"===typeof e){const a=e;let o;if(a in n)o=n[a];else if(a in h)o=h[a];else if(o=t[a],null==o)throw new s.nu(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return o}{const o=e;if(null==o.className||null==o.config)throw new s.nu(`${r}: Improper config format: ${JSON.stringify(o)}.\n'className' and 'config' must set.`);const i=o.className;let u,l;if(i in n?[u,l]=n[i]:i in h?[u,l]=h.className:i in t&&([u,l]=t[i]),null==u)throw new s.nu(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const n of Object.keys(h))e[n]=h[n];for(const s of Object.keys(n))e[s]=n[s];o.config.customObjects=e;const t=Object.assign({},h);for(const s of Object.keys(n))h[s]=n[s];f(o.config);const r=l(u,o.config,n,a);return h=Object.assign({},t),r}{const e=Object.assign({},h);for(const r of Object.keys(n))h[r]=n[r];const t=new u(o.config);return h=Object.assign({},e),t}}}function g(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function y(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function b(e){if(null==e)throw new s.nu(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function x(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new s.nu(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function w(e,t,n=0,r=1/0){return o(n>=0),o(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function v(e,t){Array.isArray(e)?(r.D5U.assert(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>v(e,`element ${n+1} of ${t}`)))):r.D5U.assert(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${k(e)}.`))}function k(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>k(e))).join(",")+"]":"string"===typeof e?`"${e}"`:`${e}`}function I(e,t,n){let s,a=null!=n?n():r.D5U.now();return(...o)=>{const i=null!=n?n():r.D5U.now();return i-a<t||(a=i,s=e(...o)),s}}function N(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}},618:function(e,t,n){"use strict";n.d(t,{I:function(){return s}});var r=n(3013);function s(e,t,n,s=console.log){const u=function(e){let t=!0;const n=[],r=[];for(const s in e.nodesByDepth)n.push(e.nodesByDepth[s]);for(const s of n){if(s.length>1||1===s.length&&s[0].inboundLayers.length>1){t=!1;break}r.push(...s)}if(t)for(const s of e.layers){let e=!1;for(const n of s.inboundNodes)if(-1!==r.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),l=["Layer (type)","Input Shape","Output shape","Param #"];let c;if(u?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!u){l.push("Receives inputs"),c=[];for(const t in e.nodesByDepth)c.push(...e.nodesByDepth[t])}s("_".repeat(t)),a(l,n,s),s("=".repeat(t));const p=e.layers;for(let r=0;r<p.length;++r)u?o(p[r],n,s):i(p[r],n,c,s),s((r===p.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const h=function(e){let t;t=null!=e.collectedTrainableWeights?(0,r.t)(e.collectedTrainableWeights):(0,r.t)(e.trainableWeights);return t}(e),d=(0,r.t)(e.nonTrainableWeights);s(`Total params: ${h+d}`),s(`Trainable params: ${h}`),s(`Non-trainable params: ${d}`),s("_".repeat(t))}function a(e,t,n=console.log){let r="";for(let s=0;s<e.length;++s)s>0&&(r=r.slice(0,r.length-1)+" "),r+=e[s],r=r.slice(0,t[s]),r+=" ".repeat(t[s]-r.length);n(r)}function o(e,t,n){let r,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(o){s="multiple"}try{r=JSON.stringify(e.outputShape)}catch(o){r="multiple"}a([`${e.name} (${e.getClassName()})`,s,r,e.countParams().toString()],t,n)}function i(e,t,n,r){let s,o;try{o=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(p){o="multiple"}try{s=JSON.stringify(e.outputShape)}catch(p){s="multiple"}const i=[];for(const a of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(a)))for(let e=0;e<a.inboundLayers.length;++e){const t=a.inboundLayers[e].name,n=a.nodeIndices[e],r=a.tensorIndices[e];i.push(`${t}[${n}][${r}]`)}const u=e.name,l=e.getClassName(),c=0===i.length?"":i[0];a([`${u} (${l})`,o,s,e.countParams().toString(),c],t,r);for(let h=1;h<i.length;++h)a(["","","","",i[h]],t,r)}},6040:function(e,t,n){"use strict";n.d(t,{Fp:function(){return i},NS:function(){return a},U:function(){return s},VV:function(){return o},w6:function(){return u}});var r=n(588);function s(e){return e===parseInt(e.toString(),10)}function a(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let s=t;s<n;++s)r*=e[s];return r}function o(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function i(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function u(e,t){if(t<e)throw new r.nu(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}},1977:function(e,t,n){"use strict";n.d(t,{a:function(){return a},q:function(){return o}});var r=n(2931);function s(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"===typeof n}function a(e,t){if(null===e)return null;if("string"===typeof e)return r.zW(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let o=0;o<r;++o){const r=e[o];s(t,o,r)?n.push(r):n.push(a(r,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n];if("name"===n&&"string"===typeof s)t[n]=s;else{const e=r.zW(n);t[e]=a(s,e)}}return t}}function o(e,t){if(null===e||void 0===e)return null;if("string"===typeof e)return r.D1(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];s(t,a,r)?n.push(r):n.push(o(r,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n],a=r.D1(n);t[a]="name"!==n&&"className"!==n||"string"!==typeof s?o(s,n):s}return t}}},7538:function(e,t,n){"use strict";n.d(t,{Wf:function(){return i},XO:function(){return s},nQ:function(){return o},x6:function(){return a}});var r=n(588);function s(e){return Array.isArray(e)&&Array.isArray(e[0])}function a(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function o(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new r.nu(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function i(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new r.nu(`Expected exactly 1 Shape; got ${e.length}`)}return e}},3013:function(e,t,n){"use strict";function r(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}n.d(t,{t:function(){return r}})},1653:function(e,t,n){"use strict";n.d(t,{FQ:function(){return u},fU:function(){return i},zb:function(){return l}});var r=n(9319),s=n(9608),a=n(8090);n(588);const o="Variable";class i{constructor(e,t="float32",n="Variable",i=!0,u=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=(0,s.L)(),n=null==n?o:n,this.originalName=(0,a.MU)(n),this.name=(0,a.w8)(this.originalName),this.trainable_=i,this.constraint=u,this.val=r.VD$(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function u(e){return e.map((e=>e.read()))}function l(e){e.forEach((e=>{e[0].write(e[1])}))}},7385:function(e,t,n){"use strict";n.d(t,{i:function(){return r}});const r="3.18.0"},2623:function(e,t,n){"use strict";n.d(t,{Xhn:function(){return I.Xhn},pju:function(){return I.pju},zoF:function(){return I.zoF},B90:function(){return I.B90},G48:function(){return I.G48},dt4:function(){return I.dt4},N_N:function(){return I.N_N},BHj:function(){return I.BHj},YLj:function(){return Bi},dC7:function(){return I.dC7},iwz:function(){return ja},snQ:function(){return I.snQ},CQI:function(){return I.CQI},lub:function(){return I.lub},P84:function(){return I.P84}});var r={};n.r(r),n.d(r,{json:function(){return to}});var s={};n.r(s),n.d(s,{json:function(){return no}});var a={};n.r(a),n.d(a,{json:function(){return ro}});var o={};n.r(o),n.d(o,{json:function(){return so}});var i={};n.r(i),n.d(i,{json:function(){return ao}});var u={};n.r(u),n.d(u,{json:function(){return oo}});var l={};n.r(l),n.d(l,{json:function(){return io}});var c={};n.r(c),n.d(c,{json:function(){return uo}});var p={};n.r(p),n.d(p,{json:function(){return lo}});var h={};n.r(h),n.d(h,{json:function(){return co}});var d={};n.r(d),n.d(d,{json:function(){return po}});var f={};n.r(f),n.d(f,{json:function(){return ho}});var m={};n.r(m),n.d(m,{json:function(){return fo}});var g={};n.r(g),n.d(g,{json:function(){return mo}});var y={};n.r(y),n.d(y,{json:function(){return go}});var b={};n.r(b),n.d(b,{json:function(){return yo}});var x={};n.r(x),n.d(x,{json:function(){return bo}});var w={};n.r(w),n.d(w,{json:function(){return xo}});var v={};n.r(v),n.d(v,{json:function(){return wo}});var k={};n.r(k),n.d(k,{addImpl:function(){return Ku},bincountImpl:function(){return Pl},bincountReduceImpl:function(){return Ul},ceilImpl:function(){return Hl},concatImpl:function(){return Zl},equalImpl:function(){return Rc},expImpl:function(){return Hc},expm1Impl:function(){return Qc},floorImpl:function(){return dp},gatherNdImpl:function(){return vp},gatherV2Impl:function(){return Ip},greaterEqualImpl:function(){return Ep},greaterImpl:function(){return Sp},lessEqualImpl:function(){return Pp},lessImpl:function(){return Lp},linSpaceImpl:function(){return Gp},logImpl:function(){return jp},maxImpl:function(){return ih},maximumImpl:function(){return ch},minimumImpl:function(){return wh},multiplyImpl:function(){return Tc},negImpl:function(){return Dh},notEqualImpl:function(){return Wh},prodImpl:function(){return Yh},rangeImpl:function(){return ed},rsqrtImpl:function(){return hd},scatterImpl:function(){return md},sigmoidImpl:function(){return Mu},simpleAbsImpl:function(){return sl},sliceImpl:function(){return Bl},sparseFillEmptyRowsImpl:function(){return Od},sparseReshapeImpl:function(){return Bd},sparseSegmentReductionImpl:function(){return Wd},sqrtImpl:function(){return Gd},squaredDifferenceImpl:function(){return qd},stridedSliceImpl:function(){return Jd},stringNGramsImpl:function(){return nf},stringSplitImpl:function(){return af},stringToHashBucketFastImpl:function(){return uf},subImpl:function(){return np},tileImpl:function(){return ff},topKImpl:function(){return bf},transposeImpl:function(){return pl},uniqueImpl:function(){return Sf}});var I=n(9319),N=n(9121),S=n(2271),T=n(4841),C=n(1901);const E={kernelName:N.SY,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,T.d)(e,(0,C.N)((0,S.p)(n,"float32"),-1))}}};var A=n(1274),$=n(7370),D=n(9494),_=n(3261),F=n(248),R=n(827);const O={kernelName:N.VG,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,F.h)((0,S.p)(n,"float32")),r=(0,_._)((0,R.l)((0,D.i)(1),t));return(0,$.W)((0,A.h)(e,r))}}}},M={kernelName:N.Sp,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,_._)((0,R.l)((0,F.h)((0,S.p)(n,"float32")),1));return(0,A.h)(e,t)}}}};var B=n(2200),L=n(4968),W=n(5475);const z={kernelName:N.mm,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=B.assertAndGetBroadcastShape(n.shape,r.shape);return{a:()=>{let t=e;const r=B.getReductionAxes(n.shape,s);return r.length>0&&(t=(0,W.S)(t,r)),(0,L.X)(t,n.shape)},b:()=>{let t=e;const n=B.getReductionAxes(r.shape,s);return n.length>0&&(t=(0,W.S)(t,n)),(0,L.X)(t,r.shape)}}}},P={kernelName:N.Xz,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}};var U=n(6577);const V={kernelName:N.sJ,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,U.P)(n)}}},G={kernelName:N.aJ,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,U.P)(n)}}},H={kernelName:N.M2,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,A.h)(e,(0,_._)((0,R.l)((0,D.i)(1),(0,F.h)((0,S.p)(n,"float32")))))}}};var j=n(6407);const X={kernelName:N.qw,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,_._)((0,j.I)((0,D.i)(1),(0,F.h)((0,S.p)(n,"float32"))));return(0,A.h)(e,t)}}}},q={kernelName:N.QC,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=(0,B.assertAndGetBroadcastShape)(n.shape,r.shape);return{a:()=>{const t=(0,j.I)((0,F.h)(n),(0,F.h)(r));let a=(0,T.d)(e,(0,A.h)(r,t));const o=(0,B.getReductionAxes)(n.shape,s);return o.length>0&&(a=(0,W.S)(a,o)),(0,L.X)(a,n.shape)},b:()=>{const t=(0,j.I)((0,F.h)(n),(0,F.h)(r));let a=(0,$.W)((0,T.d)(e,(0,A.h)(n,t)));const o=(0,B.getReductionAxes)(r.shape,s);return o.length>0&&(a=(0,W.S)(a,o)),(0,L.X)(a,r.shape)}}}},K={kernelName:N.jM,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,A.h)(e,(0,j.I)((0,F.h)((0,S.p)(n,"float32")),1))}}},Q={kernelName:N.Oy,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,A.h)(e,(0,R.l)((0,D.i)(1),(0,F.h)((0,S.p)(n,"float32"))))}}};var Z=n(196),Y=n(3740),J=n(569),ee=n(2582),te=n(2668);const ne=(0,te.op)({avgPool3dGrad_:function(e,t,n,r,s,a){const o=(0,Y._1)(e,"dy","avgPool3dGrad"),i=(0,Y._1)(t,"input","avgPool3dGrad");let u=o,l=i,c=!1;4===i.rank&&(c=!0,u=(0,L.X)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),l=(0,L.X)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),J.hu(5===u.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`)),J.hu(5===l.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`)),(0,ee.m)("avgPool3dGrad",s,a);const p={dy:u,input:l},h={filterSize:n,strides:r,pad:s,dimRoundingMode:a},d=Z.BV.runKernel(N.IM,p,h);return c?(0,L.X)(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),re={kernelName:N._k,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:o,dimRoundingMode:i}=n;return{x:()=>ne(e,r,s,a,o,i)}}};const se=(0,te.op)({avgPoolGrad_:function(e,t,n,r,s){const a=(0,Y._1)(e,"dy","avgPoolGrad"),o=(0,Y._1)(t,"input","avgPoolGrad");J.hu(o.rank===a.rank,(()=>`Rank of input (${o.rank}) does not match rank of dy (${a.rank})`));let i=o,u=a,l=!1;3===o.rank&&(l=!0,i=(0,L.X)(o,[1,o.shape[0],o.shape[1],o.shape[2]]),u=(0,L.X)(a,[1,a.shape[0],a.shape[1],a.shape[2]])),J.hu(4===u.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`)),J.hu(4===i.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`));const c={dy:u,input:i},p={filterSize:n,strides:r,pad:s},h=Z.BV.runKernel(N.RO,c,p);return l?(0,L.X)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),ae={kernelName:N.Jh,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:o}=n;return{x:()=>se(e,r,s,a,o)}}};var oe=n(8687);const ie={kernelName:N.XL,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,s]=t,{transposeA:a,transposeB:o}=n;return a||o?!a&&o?{a:()=>(0,oe.O)(e,s,!1,!1),b:()=>(0,oe.O)(e,r,!0,!1)}:a&&!o?{a:()=>(0,oe.O)(s,e,!1,!0),b:()=>(0,oe.O)(r,e,!1,!1)}:{a:()=>(0,oe.O)(s,e,!0,!0),b:()=>(0,oe.O)(e,r,!0,!0)}:{a:()=>(0,oe.O)(e,s,!1,!0),b:()=>(0,oe.O)(r,e,!0,!1)}}};const ue=(0,te.op)({spaceToBatchND_:function(e,t,n){const r=(0,Y._1)(e,"x","spaceToBatchND");J.hu(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),J.hu(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),J.hu(r.shape.reduce(((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]===0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const s={x:r},a={blockShape:t,paddings:n};return Z.BV.runKernel(N.TQ,s,a)}}),le={kernelName:N.zw,gradFunc:(e,t,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>ue(e,r,s)}}},ce={kernelName:N.Ly,gradFunc:(e,t,n)=>{const r=n,s=r.inputShape,a=r.shape,o=Array.from(a);for(let u=s.length-1;u>=0;u--)if(s[u]===a[u])o[u]=1;else if(1!==s[u])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);const i=[];for(let u=0;u<o.length;u++)o[u]>1&&i.push(u);return{x:()=>(0,W.S)(e,i,!0)}}},pe={kernelName:N.RF,gradFunc:e=>({x:()=>e.clone()})},he={kernelName:N.gJ,gradFunc:e=>({x:()=>(0,U.P)(e)})};var de=n(7630),fe=n(624),me=n(2856),ge=n(5912);const ye={kernelName:N.xn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:s,clipValueMax:a}=n;return{x:()=>(0,ge.a)((0,me.H)((0,de.b)(r,s),(0,fe.z)(r,a)),e,(0,U.P)(e))}}},be={kernelName:N.yj,inputsToSave:["x"],gradFunc:E.gradFunc};var xe=n(8644);const we={kernelName:N.Eh,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:s}=n,a=(0,J.EC)(s,t[0].shape)[0],o=r.map((e=>e[a]));return(0,xe.V)(e,o,a).map((e=>()=>e))}};var ve=n(6013),ke=n(9832);const Ie={kernelName:N.mh,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{dilations:a,strides:o,pad:i,dataFormat:u}=n;return J.hu(ee.I0(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>(0,ke._)(r.shape,e,s,o,i,u),filter:()=>(0,ve.p)(r,e,s.shape,o,i,u)}}};var Ne=n(4794);const Se={kernelName:N.wm,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{strides:a,pad:o,dataFormat:i,dimRoundingMode:u}=n;return{dy:()=>(0,Ne.T)(e,s,a,o,i,1,u),filter:()=>(0,ve.p)(e,r,s.shape,a,o,i,u)}}};const Te=(0,te.op)({conv3DBackpropFilter_:function(e,t,n,r,s){let a=e;4===e.rank&&(a=(0,L.X)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let o=t;4===o.rank&&(o=(0,L.X)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),J.hu(5===a.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`)),J.hu(5===o.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`)),J.hu(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),J.hu(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),J.hu(o.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${n[4]}).`));const i={x:a,dy:o},u={strides:r,pad:s,filterShape:n};return Z.BV.runKernel(N.o2,i,u)}});var Ce=n(7594);const Ee={kernelName:N.x1,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a}=n;J.hu((0,ee.I0)(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[o,i]=t;return{x:()=>(0,Ce._)(o.shape,e,i,s,a),filter:()=>Te(o,e,i.shape,s,a)}}};const Ae=(0,te.op)({sin_:function(e){const t={x:(0,Y._1)(e,"x","sin","float32")};return Z.BV.runKernel(N.RQ,t)}}),$e={kernelName:N.mc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,T.d)((0,$.W)(Ae((0,S.p)(n,"float32"))),e)}}};const De=(0,te.op)({sinh_:function(e){const t={x:(0,Y._1)(e,"x","sinh")};return Z.BV.runKernel(N.w3,t)}}),_e={kernelName:N.TR,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,T.d)(De((0,S.p)(n,"float32")),e)}}};var Fe=n(3591);const Re=(0,te.op)({cumsum_:function(e,t=0,n=!1,r=!1){const s={x:(0,Y._1)(e,"x","cumsum")},a={axis:t,exclusive:n,reverse:r};return Z.BV.runKernel(N.iH,s,a)}});var Oe=n(9065);const Me={kernelName:N.iH,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s,exclusive:a,reverse:o}=n;return{x:()=>{const t=(0,Fe.Q3)([s],r.rank);let n=Re(e,s,a,!o);return null!=t&&(n=(0,Oe.p)(n,t)),n}}}};var Be=n(8098),Le=n(4375);const We={kernelName:N.ci,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:o}=n,i=null==r?[1,1]:r;J.hu(ee.I0(i),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`));const[u,l]=t;return J.hu(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),J.hu(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`)),J.hu(u.shape[3]===l.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),J.hu(ee.jT(s,i),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${i}'.`)),ee.m("depthwiseConv2d",a,o),{x:()=>(0,Le.v)(u.shape,e,l,s,a,i,o),filter:()=>(0,Be.z)(u,e,l.shape,s,a,i,o)}}},ze={kernelName:N.p4,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,a={x:r,filter:s,dy:e},o={x:r,filter:s,dy:e};return{x:()=>Z.BV.runKernel(N.ek,a,n),filter:()=>Z.BV.runKernel(N.Vn,o,n)}}},Pe={kernelName:N.SX,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>Z.BV.runKernel(N.HE,r)}}};var Ue=n(4842);const Ve={kernelName:N.Om,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=(0,T.d)((0,Ue.Q)((0,$.W)((0,F.h)(n))),2/Math.sqrt(Math.PI));return{x:()=>(0,T.d)(e,r)}}},Ge={kernelName:N.NE,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,T.d)(e,n)}}},He={kernelName:N.YF,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>(0,L.X)(e,n.shape)}}},je={kernelName:N.Y0,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,T.d)(e,(0,Ue.Q)(n))}}},Xe={kernelName:N.OR,gradFunc:e=>({x:()=>(0,U.P)(e)})},qe={kernelName:N.je,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=(0,B.assertAndGetBroadcastShape)(n.shape,r.shape);return{a:()=>{const t=(0,A.h)(e,(0,S.p)(r,"float32")),a=(0,B.getReductionAxes)(n.shape,s);return a.length>0?(0,L.X)((0,W.S)(t,a),n.shape):t},b:()=>{let t=(0,T.d)(e,(0,S.p)(n,"float32"));const a=(0,B.getReductionAxes)(r.shape,s);a.length>0&&(t=(0,L.X)((0,W.S)(t,a),r.shape));const o=(0,F.h)(r);return(0,$.W)((0,A.h)(t,(0,S.p)(o,"float32")))}}}};const Ke=(0,te.op)({rsqrt_:function(e){const t={x:(0,Y._1)(e,"x","rsqrt","float32")};return Z.BV.runKernel(N.bV,t)}});var Qe=n(7501);const Ze={kernelName:N.sH,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[s,a,o,i]=t,u=null==i?(0,D.i)(1):i,l=(0,B.getReductionAxes)(a.shape,s.shape),c=[];if(1===a.rank){for(let e=0;e<s.shape.length-1;++e)c.push(s.shape[e]);c.push(1)}const p=(0,R.l)(s,a),h=(0,T.d)(e,u),d=Ke((0,j.I)(o,(0,D.i)(r))),f=(0,T.d)((0,T.d)((0,T.d)(d,d),d),(0,D.i)(-.5));return{x:()=>1===a.rank?(0,L.X)((0,T.d)((0,T.d)(e,(0,Qe.G)((0,L.X)(d,[1,1,1,a.shape[0]]),c)),u),s.shape):(0,L.X)((0,T.d)((0,T.d)(e,d),u),s.shape),mean:()=>{let e=(0,T.d)((0,T.d)(d,(0,D.i)(-1)),h);return 1===a.rank&&(e=(0,W.S)(e,l)),(0,L.X)(e,a.shape)},variance:()=>{let e=(0,T.d)((0,T.d)(f,p),h);return 1===a.rank&&(e=(0,W.S)(e,l)),(0,L.X)(e,a.shape)},scale:()=>{const t=(0,T.d)(p,d);let n=(0,T.d)(e,t);return 1===a.rank&&(n=(0,W.S)(n,l)),(0,L.X)(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=(0,W.S)(t,l)),(0,L.X)(t,a.shape)}}}};const Ye=(0,te.op)({unsortedSegmentSum_:function(e,t,n){const r=(0,Y._1)(e,"x","unsortedSegmentSum"),s=(0,Y._1)(t,"segmentIds","unsortedSegmentSum","int32");(0,J.hu)((0,J.GN)(n),(()=>"numSegments must be of dtype int"));const a={x:r,segmentIds:s},o={numSegments:n};return Z.BV.runKernel(N.Qv,a,o)}}),Je={kernelName:N.qi,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,s]=t,{axis:a}=n,o=(0,J.EC)(a,r.shape)[0];return{x:()=>{const t=r.shape,n=s.size,i=t.slice(0,o),u=i.length,l=t.slice(a,t.length).slice(1),c=l.length,p=et(0,u),h=et(u+1,u+1+c),d=tt([i,[n],l]),f=(0,L.X)(e,d),m=(0,L.X)(s,[n]),g=tt([[u],p,h]),y=(0,Oe.p)(f,g);let b=Ye(y,m,r.shape[o]);const x=(0,Fe.LJ)(g);return b=(0,Oe.p)(b,x),b},indices:()=>s}}};function et(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function tt(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const nt={kernelName:N.Ac,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>(0,U.P)(n),b:()=>(0,U.P)(r)}}},rt={kernelName:N.iJ,gradFunc:e=>({x:()=>(0,S.p)(e,"float32")})},st={kernelName:N.av,gradFunc:e=>({x:()=>(0,U.P)(e)})},at={kernelName:N.iW,gradFunc:e=>({x:()=>(0,U.P)(e)})},ot={kernelName:N.r7,gradFunc:e=>({x:()=>(0,U.P)(e)})};var it=n(636);const ut={kernelName:N.J$,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:s}=n,a=(0,it.p)(r,0);return{x:()=>(0,ge.a)(a,e,(0,T.d)(e,s))}}},lt={kernelName:N.kU,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,A.h)(e,(0,j.I)(n,1))}}},ct={kernelName:N.Zb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,A.h)(e,(0,S.p)(n,"float32"))}}},pt={kernelName:N.qC,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;return{logits:()=>{const t=(0,Ue.Q)(r);return(0,R.l)(e,(0,T.d)((0,W.S)(e,s,!0),t))}}}};const ht=(0,te.op)({localResponseNormalizationBackprop_:function(e,t,n,r=5,s=1,a=1,o=.5){const i={x:e,y:t,dy:n},u={depthRadius:r,bias:s,alpha:a,beta:o};return Z.BV.runKernel(N.Hh,i,u)}}),dt={kernelName:N.eZ,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{depthRadius:a,bias:o,alpha:i,beta:u}=n;return{x:()=>ht(r,s,e,a,o,i,u)}}};var ft=n(6477);function mt(e,t,n,r){return t.rank<n.rank&&(t=(0,L.X)(t,Fe.rv(t.shape,r))),e.rank<n.rank&&(e=(0,L.X)(e,Fe.rv(e.shape,r))),{x:()=>(0,T.d)(e,(0,S.p)((0,ft.D)(n,t),e.dtype))}}const gt={kernelName:N.Yo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:s}=r,a=t[0],o=mt(e,t[1],a,J.EC(s,a.shape));return{x:()=>o.x()}}};var yt=n(747);const bt=(0,te.op)({less_:function(e,t){let n=(0,Y._1)(e,"a","less","string_or_numeric"),r=(0,Y._1)(t,"b","less","string_or_numeric");[n,r]=(0,yt.makeTypesMatch)(n,r),(0,B.assertAndGetBroadcastShape)(n.shape,r.shape);const s={a:n,b:r};return Z.BV.runKernel(N.vt,s)}}),xt={kernelName:N.BM,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>(0,T.d)(e,(0,S.p)((0,de.b)(n,r),"float32")),b:()=>(0,T.d)(e,(0,S.p)(bt(n,r),"float32"))}}};const wt=(0,te.op)({maxPool3dGrad_:function(e,t,n,r,s,a,o){const i=(0,Y._1)(e,"dy","maxPool3dGrad"),u=(0,Y._1)(t,"input","maxPool3dGrad"),l=(0,Y._1)(n,"output","maxPool3dGrad");let c=i,p=u,h=l,d=!1;4===u.rank&&(d=!0,c=(0,L.X)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),p=(0,L.X)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),h=(0,L.X)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),J.hu(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),J.hu(5===p.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`)),J.hu(5===h.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${h.rank}.`)),(0,ee.m)("maxPool3dGrad",a,o);const f={dy:c,input:p,output:h},m={filterSize:r,strides:s,pad:a,dimRoundingMode:o},g=Z.BV.runKernel(N.OU,f,m);return d?(0,L.X)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),vt={kernelName:N.OA,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:u}=n;return{x:()=>wt(e,r,s,a,o,i,u)}}};const kt=(0,te.op)({maxPoolGrad_:function(e,t,n,r,s,a,o){const i=(0,Y._1)(e,"dy","maxPoolGrad"),u=(0,Y._1)(t,"input","maxPoolGrad"),l=(0,Y._1)(n,"output","maxPoolGrad");J.hu(u.rank===i.rank,(()=>`Rank of input (${u.rank}) does not match rank of dy (${i.rank})`)),J.hu(4===i.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`)),J.hu(4===u.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`)),ee.m("maxPoolGrad",a,o);const c={dy:i,input:u,output:l},p={filterSize:r,strides:s,pad:a,dimRoundingMode:o};return Z.BV.runKernel(N.OV,c,p)}}),It={kernelName:N.mT,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:o,pad:i}=n;return{x:()=>kt(e,r,s,a,o,i)}}};var Nt=n(4917);const St={kernelName:N.q2,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n,a=J.EC(s,r.shape),o=(0,Fe.kz)(r.shape,a)[1],i=J.NA(o);return{x:()=>{const t=r.shape.slice();a.forEach((e=>{t[e]=1}));const n=(0,L.X)(e,t);return(0,A.h)((0,T.d)(n,(0,Nt.i)(r.shape,"float32")),i)}}}},Tt={kernelName:N.c1,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:s}=r,[a,o]=t,i=mt(e,o,a,J.EC(s,a.shape));return{x:()=>i.x()}}},Ct={kernelName:N.q8,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>(0,T.d)(e,(0,S.p)((0,fe.z)(n,r),"float32")),b:()=>(0,T.d)(e,(0,S.p)((0,it.p)(n,r),"float32"))}}};var Et=n(2676);const At={kernelName:N.jQ,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>(0,Et.t)(e,a,r.shape)}}};var $t=n(6943);const Dt={kernelName:N.Vb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=(0,B.assertAndGetBroadcastShape)(n.shape,r.shape);return{a:()=>{const t=(0,B.getReductionAxes)(n.shape,s);return t.length>0?(0,L.X)((0,W.S)(e,t),n.shape):e},b:()=>{const t=(0,T.d)(e,(0,$.W)((0,$t.G)((0,A.h)(n,r)))),a=(0,B.getReductionAxes)(r.shape,s);return a.length>0?(0,L.X)((0,W.S)(t,a),r.shape):t}}}},_t={kernelName:N.wY,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=(0,B.assertAndGetBroadcastShape)(n.shape,r.shape);return{a:()=>{const t=(0,T.d)(e,(0,S.p)(r,"float32")),a=(0,B.getReductionAxes)(n.shape,s);return a.length>0?(0,L.X)((0,W.S)(t,a),n.shape):t},b:()=>{const t=(0,T.d)(e,(0,S.p)(n,"float32")),a=(0,B.getReductionAxes)(r.shape,s);return a.length>0?(0,L.X)((0,W.S)(t,a),r.shape):t}}}},Ft={kernelName:N.ku,gradFunc:e=>({x:()=>(0,$.W)(e)})};var Rt=n(9640);const Ot={kernelName:N.we,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>(0,Rt.l)(n.shape,"float32")}}},Mt={kernelName:N.qW,gradFunc:e=>({x:()=>(0,U.P)(e)})};var Bt=n(4136);const Lt={kernelName:N.Qi,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return(0,Bt.H)(e,r).map((e=>()=>e))}},Wt={kernelName:N.ly,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>(0,Et.t)(e,a,r.shape)}}};var zt=n(2597),Pt=n(3453);const Ut={kernelName:N.pe,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,s]=t,a=n,o=r,i=B.assertAndGetBroadcastShape(a.shape,o.shape);return{a:()=>{const t=(0,S.p)(o,"float32");let n=(0,T.d)(e,(0,T.d)(t,(0,Pt.s)(a,(0,R.l)(t,(0,D.i)(1)))));const r=B.getReductionAxes(a.shape,i);return r.length>0&&(n=(0,W.S)(n,r)),(0,L.X)(n,a.shape)},b:()=>{const t=(0,it.p)(a,0),n=(0,ge.a)(t,(0,zt.c)(a),(0,U.P)(a));let r=(0,T.d)(e,(0,T.d)(s,n));const u=B.getReductionAxes(o.shape,i);return u.length>0&&(r=(0,W.S)(r,u)),(0,L.X)(r,o.shape)}}}},Vt={kernelName:N.o0,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,s=(0,it.p)(n,0);return{x:()=>(0,ge.a)(s,e,(0,T.d)(e,r)),alpha:()=>{let t=(0,ge.a)(s,(0,U.P)(e),(0,T.d)(e,n));const a=(0,B.getReductionAxes)(r.shape,e.shape);return a.length>0&&(t=(0,W.S)(t,a)),(0,L.X)(t,r.shape)}}}};const Gt=(0,te.op)({cumprod_:function(e,t=0,n=!1,r=!1){const s={x:(0,Y._1)(e,"x","cumprod")},a={axis:t,exclusive:n,reverse:r};return Z.BV.runKernel(N.By,s,a)}});function Ht(e,t,n){const r=e.shape.length,s=r-n.length,a=Fe.Q3(n,r);let o=e;null!=a&&(o=(0,Oe.p)(e,a));const i=o.shape.slice(),u=i.splice(r-n.length,n.length).reduce(((e,t)=>e*t),1);i.push(u);let l=function(e,t,n){const r=e.shape.slice();r[n]=1;const s=(0,L.X)(t,r),a=Gt(e,n,!0,!1),o=Gt(e,n,!0,!0),i=(0,T.d)(a,o);return(0,T.d)(s,i)}(o.reshape(i),t,s);if(l=l.reshape(o.shape),null!=a){const e=Fe.LJ(a);l=(0,Oe.p)(l,e)}return l}const jt={kernelName:N.Dl,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;let a=[];return a=void 0===s||null===s?r.shape.map(((e,t)=>t)):"number"===typeof s?[s]:s,{x:()=>Ht(r,e,a)}}},Xt={kernelName:N.oH,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=B.assertAndGetBroadcastShape(n.shape,r.shape);return{a:()=>{const t=(0,A.h)(e,(0,S.p)(r,"float32")),a=B.getReductionAxes(n.shape,s);return a.length>0?(0,L.X)((0,W.S)(t,a),n.shape):t},b:()=>{let t=(0,T.d)(e,(0,S.p)(n,"float32"));const a=B.getReductionAxes(r.shape,s);a.length>0&&(t=(0,L.X)((0,W.S)(t,a),r.shape));const o=(0,F.h)(r);return(0,$.W)((0,A.h)(t,(0,S.p)(o,"float32")))}}}},qt={kernelName:N.$H,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,A.h)(e,(0,$.W)((0,F.h)(n)))}}},Kt={kernelName:N.Sb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=(0,T.d)((0,fe.z)(n,6),(0,C.N)(n));return{x:()=>(0,T.d)(e,(0,S.p)(r,"float32"))}}},Qt={kernelName:N.qk,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,T.d)(e,(0,S.p)((0,C.N)(n),"float32"))}}},Zt={kernelName:N.HZ,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,L.X)(e,n.shape)}}},Yt={kernelName:N._Y,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>Z.BV.runKernel(N.zb,s,n)}}},Jt={kernelName:N.dp,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>Z.BV.runKernel(N.Hm,s,n)}}};var en=n(7486);const tn={kernelName:N.mK,gradFunc:(e,t,n)=>{const{dims:r}=n,s=(0,J.EC)(r,e.shape);return{x:()=>(0,en.G)(e,s)}}},nn={kernelName:N.e0,gradFunc:e=>({x:()=>(0,U.P)(e)})},rn={kernelName:N.bV,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,$.W)((0,A.h)(e,(0,T.d)((0,Pt.s)(n,1.5),2)))}}};const sn=(0,te.op)({logicalNot_:function(e){const t={x:(0,Y._1)(e,"x","logicalNot","bool")};return Z.BV.runKernel(N.Vf,t)}}),an={kernelName:N.Ph,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>(0,S.p)((0,U.P)(n),"float32"),t:()=>(0,T.d)(e,(0,S.p)(n,e.dtype)),e:()=>(0,T.d)(e,(0,S.p)(sn(n),e.dtype))}}};var on=n(3179);const un={kernelName:N.oF,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,it.p)(n,(0,D.i)(0)),r=(0,D.i)(on.y),s=(0,D.i)(on.$),a=(0,T.d)(e,s),o=(0,T.d)((0,T.d)(e,r),(0,Ue.Q)((0,S.p)(n,"float32")));return(0,ge.a)(t,a,o)}}}},ln={kernelName:N.a5,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,T.d)(e,(0,T.d)(n,(0,R.l)((0,D.i)(1),n)))}}},cn={kernelName:N.i5,gradFunc:e=>({x:()=>(0,U.P)(e)})};const pn=(0,te.op)({cos_:function(e){const t={x:(0,Y._1)(e,"x","cos","float32")};return Z.BV.runKernel(N.mc,t)}}),hn={kernelName:N.RQ,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,T.d)(pn((0,S.p)(n,"float32")),e)}}};const dn=(0,te.op)({cosh_:function(e){const t={x:(0,Y._1)(e,"x","cosh","float32")};return Z.BV.runKernel(N.TR,t)}}),fn={kernelName:N.w3,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,T.d)(dn((0,S.p)(n,"float32")),e)}}};var mn=n(9682),gn=n(7650);const yn={kernelName:N.p2,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:s,size:a}=n,o=r.shape,[i,u]=(0,gn.parseSliceParams)(r,s,a),l=[];for(let c=0;c<e.rank;c++)l.push([i[c],o[c]-i[c]-u[c]]);return{x:()=>(0,mn.v)(e,l)}}},bn={kernelName:N.Gc,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:s}=n,a=(0,T.d)(e,r);return{logits:()=>(0,R.l)(a,(0,T.d)((0,W.S)(a,[s],true),r))}}};var xn=n(625);const wn={kernelName:N.MR,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,T.d)(e,(0,xn.X)(n))}}};const vn=(0,te.op)({batchToSpaceND_:function(e,t,n){const r=(0,Y._1)(e,"x","batchToSpaceND"),s=t.reduce(((e,t)=>e*t));J.hu(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),J.hu(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),J.hu(r.shape[0]%s===0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`));const a={x:r},o={blockShape:t,crops:n};return Z.BV.runKernel(N.zw,a,o)}}),kn={kernelName:N.TQ,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>vn(e,r,s)}}};var In=n(6884);const Nn={kernelName:N.L8,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>(0,In.z)(e,r)}}},Sn={kernelName:N.FK,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,A.h)(e,(0,T.d)((0,_._)((0,S.p)(n,"float32")),2))}}},Tn={kernelName:N.bK,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,T.d)(e,(0,T.d)((0,S.p)(n,"float32"),2))}}},Cn={kernelName:N._t,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=(0,D.i)(2);return{a:()=>(0,T.d)(e,(0,T.d)(s,(0,R.l)(n,r))),b:()=>(0,T.d)(e,(0,T.d)(s,(0,R.l)(r,n)))}}},En={kernelName:N.h8,gradFunc:e=>({x:()=>(0,U.P)(e)})},An={kernelName:N.Tr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=B.assertAndGetBroadcastShape(n.shape,r.shape);return{a:()=>{let t=e;const r=B.getReductionAxes(n.shape,s);return r.length>0&&(t=(0,W.S)(t,r)),(0,L.X)(t,n.shape)},b:()=>{let t=e;const n=B.getReductionAxes(r.shape,s);return n.length>0&&(t=(0,W.S)(t,n)),(0,L.X)((0,$.W)(t),r.shape)}}}},$n={kernelName:N.GB,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,s=r.shape.slice(),{axis:a}=n;(0,J.EC)(a,r.shape).forEach((e=>{s[e]=1}));const o=(0,L.X)(e,s),i=(0,T.d)(o,(0,Nt.i)(r.shape,"float32"));return{x:()=>i}}},Dn={kernelName:N.sE,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,A.h)(e,(0,F.h)(pn(n)))}}},_n={kernelName:N.MI,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,T.d)((0,R.l)((0,D.i)(1),(0,F.h)(n)),e)}}},Fn={kernelName:N.n9,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:s}=n;return{x:()=>{let t=(0,U.P)(r);if(1===r.rank)for(let n=0;n<s[0];++n)t=(0,j.I)(t,(0,Et.t)(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)t=(0,j.I)(t,(0,Et.t)(e,[n*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let o=0;o<s[2];++o)t=(0,j.I)(t,(0,Et.t)(e,[n*r.shape[0],a*r.shape[1],o*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let o=0;o<s[2];++o)for(let i=0;i<s[3];++i)t=(0,j.I)(t,(0,Et.t)(e,[n*r.shape[0],a*r.shape[1],o*r.shape[2],i*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},Rn={kernelName:N.G3,gradFunc:(e,t,n)=>{const r=n,{perm:s}=r,a=Fe.LJ(s);return{x:()=>(0,Oe.p)(e,a)}}};var On=n(2991);const Mn={kernelName:N.To,gradFunc:(e,t,n)=>{const r=n,{axis:s}=r;return{value:()=>(0,On.k)(e,s)}}};var Bn=n(1300),Ln=n(4926),Wn=n(632);const zn={kernelName:N.Qv,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=(0,Wn.g)(t,(0,U.P)(t)),r=(0,Ln.I)(e,n);let s=(0,de.b)(t,(0,D.i)(0,"int32"));const a=r.rank-s.rank;for(let i=0;i<a;++i)s=(0,Bn.d)(s,i+1);s=(0,me.H)(s,(0,Nt.i)(r.shape,"bool"));const o=(0,U.P)(r);return(0,ge.a)(s,r,o)}(e,n)}}};const Pn={kernelName:N.Ru,gradFunc:e=>({x:()=>(0,U.P)(e)})};var Un=n(6151);const Vn=[E,O,M,z,P,V,G,H,X,q,K,Q,re,ae,ie,le,ce,pe,he,ye,be,we,Se,Ie,Ee,$e,_e,Me,We,ze,Xt,Pe,Ve,Ge,He,je,qe,Xe,Ze,Je,nt,rt,st,at,ot,ut,lt,ct,pt,dt,gt,gt,xt,vt,It,St,Tt,Ct,At,Dt,_t,Ft,Ot,Mt,Lt,Wt,Wt,Ut,Vt,jt,qt,Kt,Qt,Zt,Yt,Jt,tn,nn,rn,an,un,ln,cn,hn,fn,yn,bn,wn,kn,kn,Nn,Nn,Sn,Cn,Tn,En,An,$n,Dn,_n,Fn,Rn,Mn,zn,Pn];for(const bI of Vn)(0,Un.Li)(bI);var Gn=n(6235),Hn=n(974);(0,Hn.t3)().prototype.abs=function(){return this.throwIfDisposed(),(0,Gn.W)(this)};const jn=(0,te.op)({acos_:function(e){const t={x:(0,Y._1)(e,"x","acos")};return Z.BV.runKernel(N.VG,t)}});(0,Hn.t3)().prototype.acos=function(){return this.throwIfDisposed(),jn(this)};const Xn=(0,te.op)({acosh_:function(e){const t={x:(0,Y._1)(e,"x","acosh")};return Z.BV.runKernel(N.Sp,t)}});(0,Hn.t3)().prototype.acosh=function(){return this.throwIfDisposed(),Xn(this)},(0,Hn.t3)().prototype.add=function(e){return this.throwIfDisposed(),(0,j.I)(this,e)};var qn=n(781);(0,Hn.t3)().prototype.all=function(e,t){return this.throwIfDisposed(),(0,qn.$)(this,e,t)};var Kn=n(2998);(0,Hn.t3)().prototype.any=function(e,t){return this.throwIfDisposed(),(0,Kn.Y)(this,e,t)};var Qn=n(47);(0,Hn.t3)().prototype.argMax=function(e){return this.throwIfDisposed(),(0,Qn.N)(this,e)};const Zn=(0,te.op)({argMin_:function(e,t=0){const n={x:(0,Y._1)(e,"x","argMin")},r={axis:t};return Z.BV.runKernel(N.aJ,n,r)}});(0,Hn.t3)().prototype.argMin=function(e){return this.throwIfDisposed(),Zn(this,e)},(0,Hn.t3)().prototype.asScalar=function(){return this.throwIfDisposed(),(0,J.hu)(1===this.size,(()=>"The array must have only 1 element.")),(0,L.X)(this,[])},(0,Hn.t3)().prototype.asType=function(e){return this.throwIfDisposed(),(0,S.p)(this,e)},(0,Hn.t3)().prototype.as1D=function(){return this.throwIfDisposed(),(0,L.X)(this,[this.size])},(0,Hn.t3)().prototype.as2D=function(e,t){return this.throwIfDisposed(),(0,L.X)(this,[e,t])},(0,Hn.t3)().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),(0,L.X)(this,[e,t,n])},(0,Hn.t3)().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),(0,L.X)(this,[e,t,n,r])},(0,Hn.t3)().prototype.as5D=function(e,t,n,r,s){return this.throwIfDisposed(),(0,L.X)(this,[e,t,n,r,s])};const Yn=(0,te.op)({asin_:function(e){const t={x:(0,Y._1)(e,"x","asin")};return Z.BV.runKernel(N.M2,t)}});(0,Hn.t3)().prototype.asin=function(){return this.throwIfDisposed(),Yn(this)};const Jn=(0,te.op)({asinh_:function(e){const t={x:(0,Y._1)(e,"x","asinh")};return Z.BV.runKernel(N.qw,t)}});(0,Hn.t3)().prototype.asinh=function(){return this.throwIfDisposed(),Jn(this)};const er=(0,te.op)({atan_:function(e){const t={x:(0,Y._1)(e,"x","atan")};return Z.BV.runKernel(N.jM,t)}});(0,Hn.t3)().prototype.atan=function(){return this.throwIfDisposed(),er(this)};const tr=(0,te.op)({atan2_:function(e,t){let n=(0,Y._1)(e,"a","atan2"),r=(0,Y._1)(t,"b","atan2");[n,r]=(0,yt.makeTypesMatch)(n,r);const s={a:n,b:r};return Z.BV.runKernel(N.QC,s)}});(0,Hn.t3)().prototype.atan2=function(e){return this.throwIfDisposed(),tr(this,e)};const nr=(0,te.op)({atanh_:function(e){const t={x:(0,Y._1)(e,"x","atanh")};return Z.BV.runKernel(N.Oy,t)}});(0,Hn.t3)().prototype.atanh=function(){return this.throwIfDisposed(),nr(this)};var rr=n(5176);(0,Hn.t3)().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),(0,rr.w)(this,e,t,n,r)},(0,Hn.t3)().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),vn(this,e,t)};var sr=n(94);(0,Hn.t3)().prototype.batchNorm=function(e,t,n,r,s){return this.throwIfDisposed(),(0,sr.t)(this,e,t,n,r,s)};var ar=n(8247);(0,Hn.t3)().prototype.broadcastTo=function(e){return this.throwIfDisposed(),(0,ar.U)(this,e)},(0,Hn.t3)().prototype.cast=function(e){return this.throwIfDisposed(),(0,S.p)(this,e)};const or=(0,te.op)({ceil_:function(e){const t={x:(0,Y._1)(e,"x","ceil","float32")};return Z.BV.runKernel(N.gJ,t)}});(0,Hn.t3)().prototype.ceil=function(){return this.throwIfDisposed(),or(this)};var ir=n(2279);(0,Hn.t3)().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),(0,ir.i)(this,e,t)},(0,Hn.t3)().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Hn.es&&(e=[e]),(0,In.z)([this,...e],t)};var ur=n(1355);(0,Hn.t3)().prototype.conv1d=function(e,t,n,r,s,a){return this.throwIfDisposed(),(0,ur.P)(this,e,t,n,r,s,a)};var lr=n(1405);(0,Hn.t3)().prototype.conv2dTranspose=function(e,t,n,r,s){return this.throwIfDisposed(),(0,lr.b)(this,e,t,n,r,s)},(0,Hn.t3)().prototype.conv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),(0,Ne.T)(this,e,t,n,r,s,a)},(0,Hn.t3)().prototype.cos=function(){return this.throwIfDisposed(),pn(this)},(0,Hn.t3)().prototype.cosh=function(){return this.throwIfDisposed(),dn(this)},(0,Hn.t3)().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),Gt(this,e,t,n)},(0,Hn.t3)().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Re(this,e,t,n)};const cr=(0,te.op)({depthToSpace_:function(e,t,n="NHWC"){const r=(0,Y._1)(e,"x","depthToSpace","float32"),s="NHWC"===n?r.shape[1]:r.shape[2],a="NHWC"===n?r.shape[2]:r.shape[3],o="NHWC"===n?r.shape[3]:r.shape[1];J.hu(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),J.hu(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),J.hu(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),J.hu(o%(t*t)===0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${o} for depthToSpace with input shape ${r.shape}`));const i={x:r},u={blockSize:t,dataFormat:n};return Z.BV.runKernel(N.T0,i,u)}});(0,Hn.t3)().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),cr(this,e,t)};var pr=n(4718);(0,Hn.t3)().prototype.depthwiseConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),(0,pr.B)(this,e,t,n,r,s,a)};const hr=(0,te.op)({dilation2d_:function(e,t,n,r,s=[1,1],a="NHWC"){const o=(0,Y._1)(e,"x","dilation2d"),i=(0,Y._1)(t,"filter","dilation2d");J.hu(3===o.rank||4===o.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`)),J.hu(3===i.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`)),J.hu("NHWC"===a,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`));let u=o,l=!1;3===o.rank&&(u=(0,L.X)(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=!0);const c={x:u,filter:i},p={strides:n,pad:r,dilations:s},h=Z.BV.runKernel(N.p4,c,p);return l?(0,L.X)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});(0,Hn.t3)().prototype.dilation2d=function(e,t,n,r,s){return this.throwIfDisposed(),hr(this,e,t,n,r,s)};const dr=(0,te.op)({divNoNan_:function(e,t){let n=(0,Y._1)(e,"a","div"),r=(0,Y._1)(t,"b","div");[n,r]=(0,yt.makeTypesMatch)(n,r);const s=(0,A.h)(n,r),a=(0,U.P)(s),o=(0,ft.D)(r,a);return(0,ge.a)(o,a,s)}});(0,Hn.t3)().prototype.divNoNan=function(e){return this.throwIfDisposed(),dr(this,e)},(0,Hn.t3)().prototype.div=function(e){return this.throwIfDisposed(),(0,A.h)(this,e)};const fr=(0,te.op)({dot_:function(e,t){const n=(0,Y._1)(e,"t1","dot"),r=(0,Y._1)(t,"t2","dot");J.hu((1===n.rank||2===n.rank)&&(1===r.rank||2===r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];if(J.hu(s===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`)),1===n.rank&&1===r.rank){const e=(0,L.X)(n,[1,-1]),t=(0,L.X)(r,[-1,1]),s=(0,oe.O)(e,t);return(0,L.X)(s,[])}if(1===n.rank&&2===r.rank){const e=(0,L.X)(n,[1,-1]),t=(0,L.X)(r,[r.shape[0],r.shape[1]]),s=(0,oe.O)(e,t);return(0,L.X)(s,[s.size])}if(2===n.rank&&1===r.rank){const e=(0,L.X)(r,[-1,1]),t=(0,oe.O)(n,e);return(0,L.X)(t,[t.size])}{const e=(0,L.X)(r,[r.shape[0],r.shape[1]]);return(0,oe.O)(n,e)}}});(0,Hn.t3)().prototype.dot=function(e){return this.throwIfDisposed(),fr(this,e)};var mr=n(3233);(0,Hn.t3)().prototype.elu=function(){return this.throwIfDisposed(),(0,mr.p)(this)},(0,Hn.t3)().prototype.equal=function(e){return this.throwIfDisposed(),(0,ft.D)(this,e)};const gr=(0,te.op)({erf_:function(e){let t=(0,Y._1)(e,"x","erf");J.hu("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=(0,S.p)(t,"float32"));const n={x:t};return Z.BV.runKernel(N.Om,n)}});(0,Hn.t3)().prototype.erf=function(){return this.throwIfDisposed(),gr(this)};var yr=n(3561);const br=(0,te.op)({euclideanNorm_:function(e,t=null,n=!1){return(0,yr.K)(e,"euclidean",t,n)}});(0,Hn.t3)().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),br(this,e,t)},(0,Hn.t3)().prototype.exp=function(){return this.throwIfDisposed(),(0,Ue.Q)(this)},(0,Hn.t3)().prototype.expandDims=function(e){return this.throwIfDisposed(),(0,Bn.d)(this,e)};const xr=(0,te.op)({expm1_:function(e){const t={x:(0,Y._1)(e,"x","expm1")};return Z.BV.runKernel(N.Y0,t)}});(0,Hn.t3)().prototype.expm1=function(){return this.throwIfDisposed(),xr(this)};var wr=n(7020);(0,Hn.t3)().prototype.fft=function(){return this.throwIfDisposed(),(0,wr.k)(this)},(0,Hn.t3)().prototype.flatten=function(){return this.throwIfDisposed(),(0,L.X)(this,[this.size])},(0,Hn.t3)().prototype.floor=function(){return this.throwIfDisposed(),(0,$t.G)(this)};var vr=n(9165);(0,Hn.t3)().prototype.floorDiv=function(e){return this.throwIfDisposed(),(0,vr.q)(this,e)},(0,Hn.t3)().prototype.gather=function(e,t){return this.throwIfDisposed(),(0,Ln.I)(this,e,t)},(0,Hn.t3)().prototype.greaterEqual=function(e){return this.throwIfDisposed(),(0,de.b)(this,e)},(0,Hn.t3)().prototype.greater=function(e){return this.throwIfDisposed(),(0,it.p)(this,e)};var kr=n(8447);(0,Hn.t3)().prototype.ifft=function(){return this.throwIfDisposed(),(0,kr.S)(this)};var Ir=n(4415);(0,Hn.t3)().prototype.irfft=function(){return this.throwIfDisposed(),(0,Ir.w)(this)};const Nr=(0,te.op)({isFinite_:function(e){const t={x:(0,Y._1)(e,"x","isFinite")};return Z.BV.runKernel(N.av,t)}});(0,Hn.t3)().prototype.isFinite=function(){return this.throwIfDisposed(),Nr(this)};const Sr=(0,te.op)({isInf_:function(e){const t={x:(0,Y._1)(e,"x","isInf")};return Z.BV.runKernel(N.iW,t)}});(0,Hn.t3)().prototype.isInf=function(){return this.throwIfDisposed(),Sr(this)};const Tr=(0,te.op)({isNaN_:function(e){const t={x:(0,Y._1)(e,"x","isNaN")};return Z.BV.runKernel(N.r7,t)}});(0,Hn.t3)().prototype.isNaN=function(){return this.throwIfDisposed(),Tr(this)};var Cr=n(9133);(0,Hn.t3)().prototype.leakyRelu=function(e){return this.throwIfDisposed(),(0,Cr.h)(this,e)},(0,Hn.t3)().prototype.lessEqual=function(e){return this.throwIfDisposed(),(0,fe.z)(this,e)},(0,Hn.t3)().prototype.less=function(e){return this.throwIfDisposed(),bt(this,e)};const Er=(0,te.op)({localResponseNormalization_:function(e,t=5,n=1,r=1,s=.5){const a=(0,Y._1)(e,"x","localResponseNormalization");J.hu(4===a.rank||3===a.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`)),J.hu(J.GN(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let o=a,i=!1;3===a.rank&&(i=!0,o=(0,L.X)(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const u={x:o},l={depthRadius:t,bias:n,alpha:r,beta:s},c=Z.BV.runKernel(N.eZ,u,l);return i?(0,L.X)(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});(0,Hn.t3)().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Er(this,e,t,n,r)};var Ar=n(633),$r=n(3694);const Dr=(0,te.op)({logSigmoid_:function(e){const t=(0,Y._1)(e,"x","logSigmoid"),n=(0,Ar.cb)((e=>({value:(0,$.W)((0,$r.W)((0,$.W)(e))),gradFunc:t=>(0,T.d)(t,(0,xn.X)((0,$.W)(e)))})));return n(t)}});(0,Hn.t3)().prototype.logSigmoid=function(){return this.throwIfDisposed(),Dr(this)};var _r=n(1510);(0,Hn.t3)().prototype.logSoftmax=function(e){return this.throwIfDisposed(),(0,_r.C)(this,e)};var Fr=n(1391);(0,Hn.t3)().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),(0,Fr.l)(this,e,t)},(0,Hn.t3)().prototype.log=function(){return this.throwIfDisposed(),(0,zt.c)(this)};var Rr=n(7474);(0,Hn.t3)().prototype.log1p=function(){return this.throwIfDisposed(),(0,Rr.K)(this)},(0,Hn.t3)().prototype.logicalAnd=function(e){return this.throwIfDisposed(),(0,me.H)(this,e)},(0,Hn.t3)().prototype.logicalNot=function(){return this.throwIfDisposed(),sn(this)};const Or=(0,te.op)({logicalOr_:function(e,t){const n=(0,Y._1)(e,"a","logicalOr","bool"),r=(0,Y._1)(t,"b","logicalOr","bool");(0,B.assertAndGetBroadcastShape)(n.shape,r.shape);const s={a:n,b:r};return Z.BV.runKernel(N.MZ,s)}});(0,Hn.t3)().prototype.logicalOr=function(e){return this.throwIfDisposed(),Or(this,e)};const Mr=(0,te.op)({logicalXor_:function(e,t){const n=(0,Y._1)(e,"a","logicalXor","bool"),r=(0,Y._1)(t,"b","logicalXor","bool");return(0,B.assertAndGetBroadcastShape)(n.shape,r.shape),(0,me.H)(Or(e,t),sn((0,me.H)(e,t)))}});(0,Hn.t3)().prototype.logicalXor=function(e){return this.throwIfDisposed(),Mr(this,e)},(0,Hn.t3)().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),(0,oe.O)(this,e,t,n)};var Br=n(1174);(0,Hn.t3)().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),(0,Br._)(this,e,t,n,r)};var Lr=n(3307);(0,Hn.t3)().prototype.max=function(e,t){return this.throwIfDisposed(),(0,Lr.F)(this,e,t)},(0,Hn.t3)().prototype.maximum=function(e){return this.throwIfDisposed(),(0,Wn.g)(this,e)};var Wr=n(5130);(0,Hn.t3)().prototype.mean=function(e,t){return this.throwIfDisposed(),(0,Wr.J)(this,e,t)};var zr=n(5735);(0,Hn.t3)().prototype.min=function(e,t){return this.throwIfDisposed(),(0,zr.V)(this,e,t)};var Pr=n(4513);(0,Hn.t3)().prototype.minimum=function(e){return this.throwIfDisposed(),(0,Pr.L)(this,e)};const Ur=(0,te.op)({mirrorPad_:function(e,t,n){J.hu("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=(0,Y._1)(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");J.hu(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const s="reflect"===n?1:0;for(let i=0;i<r.rank;i++)J.hu(2===t[i].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),J.hu(t[i][0]>=0&&t[i][0]<=r.shape[i]-s&&t[i][1]>=0&&t[i][1]<=r.shape[i]-s,(()=>`Padding in dimension ${i} cannot be greater than or equal to ${r.shape[i]-s} or less than 0 for input of shape ${r.shape}`));const a={paddings:t,mode:n},o={x:r};return Z.BV.runKernel(N.jQ,o,a)}});(0,Hn.t3)().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Ur(this,e,t)};const Vr=(0,te.op)({mod_:function(e,t){let n=(0,Y._1)(e,"a","mod"),r=(0,Y._1)(t,"b","mod");[n,r]=(0,yt.makeTypesMatch)(n,r);const s={a:n,b:r};return Z.BV.runKernel(N.Vb,s)}});(0,Hn.t3)().prototype.mod=function(e){return this.throwIfDisposed(),Vr(this,e)},(0,Hn.t3)().prototype.mul=function(e){return this.throwIfDisposed(),(0,T.d)(this,e)},(0,Hn.t3)().prototype.neg=function(){return this.throwIfDisposed(),(0,$.W)(this)},(0,Hn.t3)().prototype.norm=function(e,t,n){return this.throwIfDisposed(),(0,yr.K)(this,e,t,n)};var Gr=n(6500);(0,Hn.t3)().prototype.notEqual=function(e){return this.throwIfDisposed(),(0,Gr.Q)(this,e)};var Hr=n(6708);(0,Hn.t3)().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),(0,Hr.l)(this,e,t,n)};var jr=n(7846);(0,Hn.t3)().prototype.onesLike=function(){return this.throwIfDisposed(),(0,jr.J)(this)},(0,Hn.t3)().prototype.pad=function(e,t){return this.throwIfDisposed(),(0,mn.v)(this,e,t)};const Xr=(0,te.op)({pool_:function(e,t,n,r,s,a,o){null==s&&(s=[1,1]),null==a&&(a=1),0===r&&(r="valid");const i=(0,Y._1)(e,"x","maxPool");let u=i,l=!1;3===i.rank&&(l=!0,u=(0,L.X)(i,[1,i.shape[0],i.shape[1],i.shape[2]])),J.hu(ee.jT(a,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`));const c=ee.Xw(u.shape,t,a,s,r),p=[c.dilationHeight,c.dilationWidth];let h;h="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),s=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],s[t]]))}([c.filterHeight,c.filterWidth],p):[[0,0],[0,0]];const d=1===p[0]&&1===p[1],[f,m]=function(e,t,n){const r=n.map((e=>e[0])),s=n.map((e=>e[1])),a=e.concat(r,s),o=t.map(((e,t)=>(e-a[t]%e)%e)),i=s.map(((e,t)=>e+o[t])),u=t.map(((e,t)=>[r[t],i[t]])),l=t.map(((e,t)=>[0,o[t]]));return[u,l]}([c.inHeight,c.inWidth],p,h),g=d?r:"valid",y=d?u:ue(u,p,f),b=("avg"===n?()=>(0,rr.w)(y,t,a,g,o):()=>(0,Br._)(y,t,a,g,o))(),x=d?b:vn(b,p,m);return l?(0,L.X)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}});(0,Hn.t3)().prototype.pool=function(e,t,n,r,s,a){return this.throwIfDisposed(),Xr(this,e,t,n,r,s,a)},(0,Hn.t3)().prototype.pow=function(e){return this.throwIfDisposed(),(0,Pt.s)(this,e)};var qr=n(8151);(0,Hn.t3)().prototype.prelu=function(e){return this.throwIfDisposed(),(0,qr.A)(this,e)};const Kr=(0,te.op)({prod_:function(e,t=null,n=!1){let r=(0,Y._1)(e,"x","prod");"bool"===r.dtype&&(r=(0,S.p)(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return Z.BV.runKernel(N.Dl,s,a)}});(0,Hn.t3)().prototype.prod=function(e,t){return this.throwIfDisposed(),Kr(this,e,t)};const Qr=(0,te.op)({reciprocal_:function(e){const t={x:(0,Y._1)(e,"x","reciprocal")};return Z.BV.runKernel(N.$H,t)}});(0,Hn.t3)().prototype.reciprocal=function(){return this.throwIfDisposed(),Qr(this)};var Zr=n(7409);(0,Hn.t3)().prototype.relu=function(){return this.throwIfDisposed(),(0,Zr.U)(this)};var Yr=n(3582);(0,Hn.t3)().prototype.relu6=function(){return this.throwIfDisposed(),(0,Yr.b)(this)},(0,Hn.t3)().prototype.reshapeAs=function(e){return this.throwIfDisposed(),(0,L.X)(this,e.shape)},(0,Hn.t3)().prototype.reshape=function(e){return this.throwIfDisposed(),(0,L.X)(this,e)};var Jr=n(3305);(0,Hn.t3)().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),(0,Jr.I)(this,e,t,n)};var es=n(5098);(0,Hn.t3)().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),(0,es.j)(this,e,t,n)},(0,Hn.t3)().prototype.reverse=function(e){return this.throwIfDisposed(),(0,en.G)(this,e)};var ts=n(3710);(0,Hn.t3)().prototype.rfft=function(){return this.throwIfDisposed(),(0,ts.Q)(this)};var ns=n(7809);(0,Hn.t3)().prototype.round=function(){return this.throwIfDisposed(),(0,ns.N)(this)},(0,Hn.t3)().prototype.rsqrt=function(){return this.throwIfDisposed(),Ke(this)};var rs=n(5503);(0,Hn.t3)().prototype.selu=function(){return this.throwIfDisposed(),(0,rs.U)(this)};var ss=n(8678);(0,Hn.t3)().prototype.separableConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),(0,ss.U)(this,e,t,n,r,s,a)},(0,Hn.t3)().prototype.sigmoid=function(){return this.throwIfDisposed(),(0,xn.X)(this)};const as=(0,te.op)({sign_:function(e){const t={x:(0,Y._1)(e,"x","sign")};return Z.BV.runKernel(N.i5,t)}});(0,Hn.t3)().prototype.sign=function(){return this.throwIfDisposed(),as(this)},(0,Hn.t3)().prototype.sin=function(){return this.throwIfDisposed(),Ae(this)},(0,Hn.t3)().prototype.sinh=function(){return this.throwIfDisposed(),De(this)},(0,Hn.t3)().prototype.slice=function(e,t){return this.throwIfDisposed(),(0,Et.t)(this,e,t)};var os=n(682);(0,Hn.t3)().prototype.softmax=function(e){return this.throwIfDisposed(),(0,os.X)(this,e)},(0,Hn.t3)().prototype.softplus=function(){return this.throwIfDisposed(),(0,$r.W)(this)},(0,Hn.t3)().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),ue(this,e,t)},(0,Hn.t3)().prototype.split=function(e,t){return this.throwIfDisposed(),(0,xe.V)(this,e,t)},(0,Hn.t3)().prototype.sqrt=function(){return this.throwIfDisposed(),(0,_._)(this)},(0,Hn.t3)().prototype.square=function(){return this.throwIfDisposed(),(0,F.h)(this)};var is=n(5265);(0,Hn.t3)().prototype.squaredDifference=function(e){return this.throwIfDisposed(),(0,is.$)(this,e)};var us=n(9590);(0,Hn.t3)().prototype.squeeze=function(e){return this.throwIfDisposed(),(0,us.L)(this,e)},(0,Hn.t3)().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Hn.es?[this,e]:[this,...e];return(0,On.k)(n,t)},(0,Hn.t3)().prototype.step=function(e){return this.throwIfDisposed(),(0,C.N)(this,e)};const ls=(0,te.op)({stridedSlice_:function(e,t,n,r,s=0,a=0,o=0,i=0,u=0){const l={x:(0,Y._1)(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:r,beginMask:s,endMask:a,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:u};return Z.BV.runKernel(N.m2,l,c)}});(0,Hn.t3)().prototype.stridedSlice=function(e,t,n,r,s,a,o,i){return this.throwIfDisposed(),ls(this,e,t,n,r,s,a,o,i)},(0,Hn.t3)().prototype.sub=function(e){return this.throwIfDisposed(),(0,R.l)(this,e)},(0,Hn.t3)().prototype.sum=function(e,t){return this.throwIfDisposed(),(0,W.S)(this,e,t)};const cs=(0,te.op)({tan_:function(e){const t={x:(0,Y._1)(e,"x","tan","float32")};return Z.BV.runKernel(N.sE,t)}});(0,Hn.t3)().prototype.tan=function(){return this.throwIfDisposed(),cs(this)};var ps=n(1869);(0,Hn.t3)().prototype.tanh=function(){return this.throwIfDisposed(),(0,ps.A)(this)},(0,Hn.t3)().prototype.tile=function(e){return this.throwIfDisposed(),(0,Qe.G)(this,e)},(0,Hn.t3)().prototype.toBool=function(){return this.throwIfDisposed(),(0,S.p)(this,"bool")},(0,Hn.t3)().prototype.toFloat=function(){return this.throwIfDisposed(),(0,S.p)(this,"float32")},(0,Hn.t3)().prototype.toInt=function(){return this.throwIfDisposed(),(0,S.p)(this,"int32")};const hs=(0,te.op)({topk_:function(e,t=1,n=!0){const r=(0,Y._1)(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${t}`);const a={x:r},o={k:t,sorted:n},[i,u]=Z.BV.runKernel(N.cW,a,o);return{values:i,indices:u}}});(0,Hn.t3)().prototype.topk=function(e,t){return this.throwIfDisposed(),hs(this,e,t)},(0,Hn.t3)().prototype.transpose=function(e){return this.throwIfDisposed(),(0,Oe.p)(this,e)};const ds=(0,te.op)({unique_:function(e,t=0){const n=(0,Y._1)(e,"x","unique","string_or_numeric");(0,J.hu)(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},s={axis:t},[a,o]=Z.BV.runKernel(N.kp,r,s);return{values:a,indices:o}}});(0,Hn.t3)().prototype.unique=function(e){return this.throwIfDisposed(),ds(this,e)},(0,Hn.t3)().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Ye(this,e,t)},(0,Hn.t3)().prototype.unstack=function(e){return this.throwIfDisposed(),(0,Bt.H)(this,e)},(0,Hn.t3)().prototype.where=function(e,t){return this.throwIfDisposed(),(0,ge.a)(e,this,t)},(0,Hn.t3)().prototype.zerosLike=function(){return this.throwIfDisposed(),(0,U.P)(this)};var fs=n(1111);(0,I.OBj)().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),fs.kS);var ms=n(4079);var gs=n(2599);var ys=n(4396),bs=n(163),xs=n(8891),ws=n(5337),vs=n(9608),ks=n(588),Is=n(9897),Ns=n(2931),Ss=(n(1977),n(7538));class Ts extends ws.QV{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:(0,vs.s)("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new ks.nu(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Ts||e instanceof ws.QV;let n;if(t){if(n=e,1!==n.outputs.length)throw new ks.nu("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new ks.nu("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new ks.nu("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=(0,ys.I)({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new ks.nu(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new ks.nu("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=(0,bs.hA)(this.outputs[0])}this.inboundNodes=[],new bs.NB({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Ns.JE(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if((0,Ss.Wf)(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new ws.QV({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new ks.LH("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new ks.LH("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new ks.LH("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new ks.LH("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let s,a={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new ks.nu("Legacy serialization format not supported yet.");s=t}else I.D5U.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=t.layers,delete t.layers,a=t;const o=new e(a);if(!(o instanceof Ts))throw new ks.nj(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(const i of s){const e=void 0,t=(0,Is.v)(i,e,r);r&&t.setFastWeightInitDuringBuild(!0),o.add(t)}return o}set stopTraining(e){if(null==this.model)throw new ks.nu("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new ks.nu("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}Ts.className="Sequential",I.m7h.registerClass(Ts);var Cs=n(8819),Es=n(539);class As extends bs.mh{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=(0,Ss.nQ)(e);let n=(0,I.UYe)(e);return null!=this.maxValue&&(n=(0,I.iUl)(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}As.className="ReLU",I.m7h.registerClass(As);class $s extends bs.mh{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=(0,Ss.nQ)(e);return(0,I.hi7)(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}$s.className="LeakyReLU",I.m7h.registerClass($s);class Ds extends bs.mh{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=(0,gs.L5)(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=(0,Es.EC)(e.alphaRegularizer),this.alphaConstraint=(0,ms.Ad)(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!==typeof e.sharedAxes)throw new ks.nu(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=(0,Ss.Wf)(e)).slice(1);if(null!=this.sharedAxes)for(const r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let r=1;r<e.length;++r)n[r]=e[r];this.inputSpec=[new bs.Zg({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=(0,Ss.nQ)(e),(0,I.AL3)(e,this.alpha.read())}getConfig(){const e={alphaInitializer:(0,gs.Cx)(this.alphaInitializer),alphaRegularizer:(0,Es.SG)(this.alphaRegularizer),alphaConstraint:(0,ms.xF)(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Ds.className="PReLU",I.m7h.registerClass(Ds);class _s extends bs.mh{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new ks.nj(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=(0,Ss.nQ)(e);return(0,I.pyx)(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}_s.className="ELU",I.m7h.registerClass(_s);class Fs extends bs.mh{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=(0,Ss.nQ)(e);return(0,I.dC7)(n,(0,I.pju)((0,I.pjt)(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Fs.className="ThresholdedReLU",I.m7h.registerClass(Fs);class Rs extends bs.mh{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Cs.Gc).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=(0,Ss.nQ)(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}Rs.className="Softmax",I.m7h.registerClass(Rs);var Os=n(5650),Ms=n(2012),Bs=n(9840),Ls=n(8090),Ws=n(6517);class zs extends Os.nx{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=(0,gs.L5)(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=(0,ms.Ad)(e.depthwiseConstraint),this.depthwiseRegularizer=(0,Es.EC)(e.depthwiseRegularizer)}build(e){if((e=(0,Ss.Wf)(e)).length<4)throw new ks.nu(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new ks.nu(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,I.lub)((()=>{let t=function(e,t,n=[1,1],r="valid",s,a){return(0,I.lub)((()=>{null==s&&(s=(0,Ms.rf)()),(0,Ls.cj)(s);let o=(0,Os.aP)(e,s);if(4!==e.rank)throw new ks.nu(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new ks.nu(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return o=I.B10(o,t,n,"same"===r?"same":"valid","NHWC",a),"channelsFirst"===s&&(o=I.p4s(o,[0,3,1,2])),o}))}(e=(0,Ss.nQ)(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=Bs.a2(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=(0,Ss.Wf)(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=(0,Ws.kt)(t,this.kernelSize[0],this.padding,this.strides[0]),a=(0,Ws.kt)(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,s,a]:[e[0],s,a,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=(0,gs.Cx)(this.depthwiseInitializer),e.depthwiseRegularizer=(0,Es.SG)(this.depthwiseRegularizer),e.depthwiseConstraint=(0,ms.xF)(this.depthwiseRegularizer),e}}zs.className="DepthwiseConv2D",I.m7h.registerClass(zs);var Ps=n(6014),Us=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"===typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]])}return n};class Vs extends Ps.$p{constructor(e){if(e.unroll)throw new ks.nj("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new ks.nj("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new bs.Zg({ndim:5})]}call(e,t){return I.lub((()=>{if(null!=this.cell.dropoutMask&&(I.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(I.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new ks.nu("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return I.lub((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)],a=I.lls(s);return Array.isArray(t)?Array(t.length).fill(a):[a]}))}resetStates(e,t=!1){I.lub((()=>{if(!this.stateful)throw new ks.j1("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new ks.nu("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>I.lls(s))):this.states_=[I.lls(s)];else if(null==e)I.B90(this.states_),null!=this.keptStates&&(I.B90(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>I.lls(s))):this.states_[0]=I.lls(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new ks.nu(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):I.B90(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=s;if(!I.D5U.arraysEqual(n.shape,r))throw new ks.nu(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>I.CnY(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:s,strides:a,dilationRate:o}=this.cell,i="channelsFirst"===t,u=e[i?3:2],l=e[i?4:3],c=(0,Ws.kt)(u,r[0],s,a[0],o[0]),p=(0,Ws.kt)(l,r[1],s,a[1],o[1]);return[...e.slice(0,2),...i?[n,c,p]:[c,p,n]]}}Vs.className="ConvRNN2D";class Gs extends Ps.U7{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:s,dataFormat:a,dilationRate:o}=e;super(Object.assign({},e,{units:t})),this.filters=t,(0,Ns.iQ)(this.filters,"filters"),this.kernelSize=(0,Ws.AF)(n,2,"kernelSize"),this.kernelSize.forEach((e=>(0,Ns.iQ)(e,"kernelSize"))),this.strides=(0,Ws.AF)(r||1,2,"strides"),this.strides.forEach((e=>(0,Ns.iQ)(e,"strides"))),this.padding=s||"valid",(0,Ls.zb)(this.padding),this.dataFormat=a||"channelsLast",(0,Ls.cj)(this.dataFormat),this.dilationRate=(0,Ws.AF)(o||1,2,"dilationRate"),this.dilationRate.forEach((e=>(0,Ns.iQ)(e,"dilationRate")))}build(e){var t;e=(0,Ss.Wf)(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new ks.nu(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends gs.m7{apply(e,t){const s=n.apply([r]),a=I.iUs([r]),o=n.apply([2*r]);return Bs.mV([s,a,o])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return I.lub((()=>{if(3!==e.length)throw new ks.nu(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],s=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=(0,Ps._0)({ones:()=>I.JpU(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,i=(e,t,n)=>t&&t[n]?I.dC7(t[n],e):e;let u=i(r,o,0),l=i(r,o,1),c=i(r,o,2),p=i(r,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=(0,Ps._0)({ones:()=>I.JpU(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const h=this.recurrentDropoutMask;let d=i(s,h,0),f=i(s,h,1),m=i(s,h,2),g=i(s,h,3);const[y,b,x,w]=I.Vl2(this.kernel.read(),4,3),[v,k,N,S]=this.useBias?I.Vl2(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,y,v,this.padding),l=this.inputConv(l,b,k,this.padding),c=this.inputConv(c,x,N,this.padding),p=this.inputConv(p,w,S,this.padding);const[T,C,E,A]=I.Vl2(this.recurrentKernel.read(),4,3);d=this.recurrentConv(d,T),f=this.recurrentConv(f,C),m=this.recurrentConv(m,E),g=this.recurrentConv(g,A);const $=this.recurrentActivation.apply(I.IHx(u,d)),D=this.recurrentActivation.apply(I.IHx(l,f)),_=I.IHx(I.dC7(D,a),I.dC7($,this.activation.apply(I.IHx(c,m)))),F=I.dC7(this.recurrentActivation.apply(I.IHx(p,g)),this.activation.apply(_));return[F,F,_]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=Us(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){const s=I.Tek(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Bs.a2(s,n,this.dataFormat):s}recurrentConv(e,t){return I.Tek(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Gs.className="ConvLSTM2DCell",I.m7h.registerClass(Gs);class Hs extends Vs{constructor(e){const t=new Gs(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}Hs.className="ConvLSTM2D",I.m7h.registerClass(Hs);var js=n(6040);class Xs extends bs.mh{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(null==this.noiseShape[r]?t[r]:this.noiseShape[r]);return n}call(e,t){return(0,I.lub)((()=>{this.invokeCallHook(e,t);const n=(0,Ss.nQ)(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return Bs.KC((()=>Bs.rv(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Xs.className="Dropout",I.m7h.registerClass(Xs);class qs extends Xs{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}qs.className="SpatialDropout1D",I.m7h.registerClass(qs);class Ks extends bs.mh{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,(0,Ns.iQ)(this.units,"units"),this.activation=(0,Cs.aI)(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=(0,gs.L5)(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=(0,gs.L5)(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=(0,ms.Ad)(e.kernelConstraint),this.biasConstraint=(0,ms.Ad)(e.biasConstraint),this.kernelRegularizer=(0,Es.EC)(e.kernelRegularizer),this.biasRegularizer=(0,Es.EC)(e.biasRegularizer),this.activityRegularizer=(0,Es.EC)(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=(0,Ss.Wf)(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=(0,Ss.Wf)(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return(0,I.lub)((()=>{this.invokeCallHook(e,t);const n=(0,Ss.nQ)(e),r=(0,Ns.WT)(this.activation.getClassName());let s;return null!=r?s=Bs.AK(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=Bs.AK(n,this.kernel.read()),null!=this.bias&&(s=Bs.a2(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const e={units:this.units,activation:(0,Cs.GD)(this.activation),useBias:this.useBias,kernelInitializer:(0,gs.Cx)(this.kernelInitializer),biasInitializer:(0,gs.Cx)(this.biasInitializer),kernelRegularizer:(0,Es.SG)(this.kernelRegularizer),biasRegularizer:(0,Es.SG)(this.biasRegularizer),activityRegularizer:(0,Es.SG)(this.activityRegularizer),kernelConstraint:(0,ms.xF)(this.kernelConstraint),biasConstraint:(0,ms.xF)(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Ks.className="Dense",I.m7h.registerClass(Ks);class Qs extends bs.mh{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=(0,Ss.Wf)(e);for(const t of e.slice(1))if(null==t)throw new ks.nu(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],(0,js.NS)(e,1)]}call(e,t){return(0,I.lub)((()=>{this.invokeCallHook(e,t);let n=(0,Ss.nQ)(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=(0,I.p4s)(n,e)}return Bs.Uz(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}Qs.className="Flatten",I.m7h.registerClass(Qs);class Zs extends bs.mh{constructor(e){super(e),this.supportsMasking=!0,this.activation=(0,Cs.aI)(e.activation)}call(e,t){return(0,I.lub)((()=>{this.invokeCallHook(e,t);const n=(0,Ss.nQ)(e);return this.activation.apply(n)}))}getConfig(){const e={activation:(0,Cs.GD)(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}Zs.className="Activation",I.m7h.registerClass(Zs);class Ys extends bs.mh{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return(0,I.lub)((()=>(e=(0,Ss.nQ)(e),Bs.rx(e,this.n))))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}Ys.className="RepeatVector",I.m7h.registerClass(Ys);class Js extends bs.mh{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let s=1,a=null;for(let i=0;i<r.length;++i){const e=r[i];if(this.isUnknown(e)){if(null!==a)throw new ks.nu("Can only specifiy one unknown dimension.");a=i}else s*=e}const o=(0,js.NS)(e);if(null!==a){if(0===s||o%s!==0)throw new ks.nu(n);r[a]=o/s}else if(o!==s)throw new ks.nu(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return(0,I.lub)((()=>{this.invokeCallHook(e,t);const n=(0,Ss.nQ)(e),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return(0,I.XLQ)(n,s)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}Js.className="Reshape",I.m7h.registerClass(Js);class ea extends bs.mh{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=(0,js.w6)(1,e.dims.length+1);if(!I.D5U.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new bs.Zg({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=(0,Ss.Wf)(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return(0,I.p4s)((0,Ss.nQ)(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}ea.className="Permute",I.m7h.registerClass(ea);class ta extends bs.mh{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=(0,Ss.nQ)(e);return(0,I.YjB)((0,I.Quu)(n,this.maskValue),-1)}call(e,t){return(0,I.lub)((()=>{this.invokeCallHook(e,t);const n=(0,Ss.nQ)(e),r=(0,I.YjB)((0,I.Quu)(n,this.maskValue),-1,!0);return(0,I.dC7)(n,(0,I.pju)(r,n.dtype))}))}}ta.className="Masking",I.m7h.registerClass(ta);class na extends bs.mh{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Ns.zZ(e.inputLength))}this.inputDim=e.inputDim,Ns.iQ(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Ns.iQ(this.outputDim,"outputDim"),this.embeddingsInitializer=(0,gs.L5)(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=(0,Es.EC)(e.embeddingsRegularizer),this.activityRegularizer=(0,Es.EC)(e.activityRegularizer),this.embeddingsConstraint=(0,ms.Ad)(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return(0,I.lub)((()=>this.maskZero?(e=(0,Ss.nQ)(e),(0,I.Quu)(e,(0,I.P84)(e))):null))}computeOutputShape(e){if(e=(0,Ss.Wf)(e),null==this.inputLength)return[...e,this.outputDim];const t=Ns.zZ(this.inputLength);if(t.length!==e.length-1)throw new ks.nu(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const s=t[r],a=e[r+1];if(null!=s&&null!=a&&s!==a)throw new ks.nu(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==s&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return(0,I.lub)((()=>{this.invokeCallHook(e,t);let n=(0,Ss.nQ)(e);"int32"!==n.dtype&&(n=Bs.pj(n,"int32"));const r=Bs.Iq(this.embeddings.read(),(0,I.XLQ)(n,[n.size]));return(0,I.XLQ)(r,(0,Ss.Wf)(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:(0,gs.Cx)(this.embeddingsInitializer),embeddingsRegularizer:(0,Es.SG)(this.embeddingsRegularizer),activityRegularizer:(0,Es.SG)(this.activityRegularizer),embeddingsConstraint:(0,ms.xF)(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}na.className="Embedding",I.m7h.registerClass(na);var ra=n(6275);class sa extends bs.mh{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new ks.nj}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const s=e[e.length-t.length+r],a=t[r];if(null==s||null==a||s<0||a<0)n.push(null);else if(1===s)n.push(a);else if(1===a)n.push(s);else{if(s!==a)throw new ks.nu("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[(0,Ss.Wf)(e)]),(e=e).length<2)throw new ks.nu(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const s of e)null!=s&&null!==s[0]&&t.push(s[0]);if(t=Ns.Tw(t),t.length>1)throw new ks.nu(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let s=1;s<e.length;++s){const t=null==e[s]?null:e[s].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===Ns.Tw(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return(0,I.lub)((()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=js.Fp(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=Bs.dt(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const a of e){const e=a.rank;if(null==e){const e=a.shape,r=e[0],s=e.slice(1).concat([r]);let o=I.XLQ(a,[r].concat(js.NS(e.slice(1))));o=I.p4s(o,[1,0]),o=I.XLQ(o,s),t.push(o),n=!0}else if(e>1){const r=js.w6(1,e).concat([0]);t.push(I.p4s(a,r)),n=!0}else t.push(a)}let r=this.mergeFunction(t);const s=r.rank;if(n)if(null==s){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=I.XLQ(I.p4s(I.XLQ(r,[-1,t]),[1,0]),n)}else if(s>1){const e=[s-1].concat(js.w6(0,s-1));r=I.p4s(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){const n=null==e[r]?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const r of e)null!=r&&null!==r[0]&&n.push(r[0]);return n=Ns.Tw(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return I.lub((()=>{if(null==t)return null;if(!Array.isArray(t))throw new ks.nu("`mask` should be an Array");if(!Array.isArray(e))throw new ks.nu("`inputs` should be an Array");if(t.length!==e.length)throw new ks.nu(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:I.dt4(e,0))))[0];for(let e=1;e<t.length-1;++e)n=I.HvI(n,t[e]);return n}))}}class aa extends sa{constructor(e){super(e)}mergeFunction(e){return(0,I.lub)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=I.IHx(t,e[n]);return t}))}}aa.className="Add",I.m7h.registerClass(aa);class oa extends sa{constructor(e){super(e)}mergeFunction(e){return(0,I.lub)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=I.dC7(t,e[n]);return t}))}}oa.className="Multiply",I.m7h.registerClass(oa);class ia extends sa{constructor(e){super(e)}mergeFunction(e){return(0,I.lub)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=I.IHx(t,e[n]);return I.dC7(1/e.length,t)}))}}ia.className="Average",I.m7h.registerClass(ia);class ua extends sa{constructor(e){super(e)}mergeFunction(e){return(0,I.lub)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=I.gWQ(t,e[n]);return t}))}}ua.className="Maximum",I.m7h.registerClass(ua);class la extends sa{constructor(e){super(e)}mergeFunction(e){return(0,I.lub)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=I.LTh(t,e[n]);return t}))}}la.className="Minimum",I.m7h.registerClass(la);class ca extends sa{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new ks.nu("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const r of e)if(null!=r){t=!1;break}if(t)return;const n=[];for(let r=0;r<e.length;++r){const t=e[r].slice();t.splice(this.axis,1);let s=!1;for(const e of n)if(I.D5U.arraysEqual(e,t)){s=!0;break}s||n.push(t)}if(n.length>1)throw new ks.nu("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return(0,I.lub)((()=>Bs.mV(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new ks.nu("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const s of t.slice(1)){if(null==n[r]||null==s[r]){n[r]=null;break}n[r]+=s[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new ks.nu("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new ks.nu("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new ks.nu(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return I.lub((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let a=0;a<e.length;++a)null==t[a]?r.push(I.pju(I.JpU(e[a]),"bool")):t[a].rank<e[a].rank?r.push(I.dt4(t[a],-1)):r.push(t[a]);const s=I.zoF(r,this.axis);return I.$6P(s,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function pa(e,t){for(;e<0;)e+=t;return e}ca.className="Concatenate",I.m7h.registerClass(ca);class ha extends sa{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){I.D5U.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new ks.nj("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new ks.nu(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new ks.nu(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>pa(t,e[n].shape.length))):[pa(this.axes,n.shape.length),pa(this.axes,r.shape.length)],this.normalize&&(n=(0,ra.Eq)(n,t[0]),r=(0,ra.Eq)(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new ks.nj("batchDot is not implemented for tensors of 4D or higher rank yet");if(I.D5U.assert(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),I.D5U.assert(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"===typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new ks.nj("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,s=t.shape.length;null==n&&(n=[r-1,s-2]);const a=n;return I.lub((()=>{let n,o;if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=I.XLQ(t,t.shape.concat(e))}else if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=I.XLQ(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)o=a[0]===a[1]?I.Smz(I.dC7(e,t),a[0]):I.Smz(I.dC7(I.p4s(e,[1,0]),t),a[1]);else{const n=a[0]!==e.shape.length-1,r=a[1]===t.shape.length-1;o=I.OI3(e,t,n,r)}if(n>0){let e;e=r>s?r+s-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);o=I.L9e(o,t)}return 1===o.shape.length&&(o=I.dt4(o,1)),o}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[pa(this.axes,e.length),pa(this.axes,t.length)],n}computeOutputShape(e){I.D5U.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new ks.nj("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=t.concat(n);return 1===s.length&&s.push(1),s}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}ha.className="Dot",I.m7h.registerClass(ha);class da extends bs.mh{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return(0,I.lub)((()=>{this.invokeCallHook(e,t);const n=(0,Ss.nQ)(e);return Bs.KC((()=>(0,I.IHx)(Bs.nG(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}da.className="GaussianNoise",I.m7h.registerClass(da);class fa extends bs.mh{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,I.lub)((()=>{this.invokeCallHook(e,t);const n=(0,Ss.nQ)(e);if(this.rate>0&&this.rate<1){const e=()=>{const e=Math.sqrt(this.rate/(1-this.rate));return(0,I.dC7)(n,Bs.nG(n.shape,1,e))};return Bs.KC(e,(()=>n),t.training||!1)}return n}))}}fa.className="GaussianDropout",I.m7h.registerClass(fa);class ma extends bs.mh{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||(0,Ss.nQ)(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,I.lub)((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),r=()=>{const t=(0,Ss.nQ)(e),r=-1.7580993408473766;let s=(0,I.brS)((0,I.LGj)(n),this.rate);s=Bs.pj(s,"float32");const a=((1-this.rate)*(1+this.rate*r**2))**-.5,o=-a*r*this.rate,i=(0,I.IHx)((0,I.dC7)(t,s),(0,I.dC7)((0,I.IHx)(s,-1),r));return(0,I.IHx)((0,I.dC7)(i,a),o)};return Bs.KC(r,(()=>(0,Ss.nQ)(e)),t.training||!1)}return e}))}}function ga(e,t,n,r,s,a=.001){let o;if(2===e.rank)o=I.Dxk(e,t,n,r,s,a);else if(3===e.rank)o=I.JY5(e,t,n,r,s,a);else{if(4!==e.rank)throw new ks.nj(`batchNormalization is not implemented for array of rank ${e.rank} yet`);o=I.p3b(e,t,n,r,s,a)}return o}function ya(e,t,n,r,s=.001){return I.D5U.arraysEqual(r.slice().sort(),js.w6(0,e.rank-1))?function(e,t,n,r,s=.001){return(0,I.lub)((()=>{const a=I.Gi7(e,r),o=a.mean,i=a.variance;return[ga(e,o,i,n,t,s),o,i]}))}(e,t,n,r,s):function(e,t,n,r,s=.001){return(0,I.lub)((()=>{const a=I.Gi7(e,r),o=a.mean,i=a.variance,u=[];for(const t of js.w6(0,e.rank))-1!==r.indexOf(t)?u.push(1):u.push(e.shape[t]);const l=(0,I.XLQ)(o,u),c=(0,I.XLQ)(i,u),p=null==t?null:(0,I.XLQ)(t,u),h=null==n?null:(0,I.XLQ)(n,u);return[ga(e,l,c,h,p,s),o,i]}))}(e,t,n,r,s)}ma.className="AlphaDropout",I.m7h.registerClass(ma);class ba extends bs.mh{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=(0,gs.L5)(e.betaInitializer||"zeros"),this.gammaInitializer=(0,gs.L5)(e.gammaInitializer||"ones"),this.movingMeanInitializer=(0,gs.L5)(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=(0,gs.L5)(e.movingVarianceInitializer||"ones"),this.betaConstraint=(0,ms.Ad)(e.betaConstraint),this.gammaConstraint=(0,ms.Ad)(e.gammaConstraint),this.betaRegularizer=(0,Es.EC)(e.betaRegularizer),this.gammaRegularizer=(0,Es.EC)(e.gammaRegularizer)}build(e){e=(0,Ss.Wf)(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new ks.nu(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new bs.Zg({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return(0,I.lub)((()=>{const n=null!=t.training&&t.training,r=(0,Ss.nQ)(e),s=r.shape,a=s.length,o=js.w6(0,a),i=this.axis>=0?this.axis:this.axis+a;o.splice(i,1);const u=Ns.JE(1,a);u[i]=s[i];const l=o.slice();l.sort();const c=!I.D5U.arraysEqual(l,js.w6(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const e=(0,I.XLQ)(this.movingMean.read(),u),t=(0,I.XLQ)(this.movingVariance.read(),u),n=this.center?(0,I.XLQ)(this.beta.read(),u):null,s=this.scale?(0,I.XLQ)(this.gamma.read(),u):null;return ga(r,e,t,n,s,this.epsilon)}return ga(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[p,h,d]=ya(r,this.gamma.read(),this.beta.read(),o,this.epsilon),f=(e,t,n)=>{I.lub((()=>{const r=1-n,s=e.read(),a=I.dC7(I.luU(s,t),r);e.write(I.luU(s,a))}))};return(()=>{f(this.movingMean,h,this.momentum),f(this.movingVariance,d,this.momentum)})(),p}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:(0,gs.Cx)(this.betaInitializer),gammaInitializer:(0,gs.Cx)(this.gammaInitializer),movingMeanInitializer:(0,gs.Cx)(this.movingMeanInitializer),movingVarianceInitializer:(0,gs.Cx)(this.movingVarianceInitializer),betaRegularizer:(0,Es.SG)(this.betaRegularizer),gammaRegularizer:(0,Es.SG)(this.gammaRegularizer),betaConstraint:(0,ms.xF)(this.betaConstraint),gammaConstraint:(0,ms.xF)(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}ba.className="BatchNormalization",I.m7h.registerClass(ba);class xa extends bs.mh{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"===typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=(0,gs.L5)(e.betaInitializer||"zeros"),this.gammaInitializer=(0,gs.L5)(e.gammaInitializer||"ones"),this.betaRegularizer=(0,Es.EC)(e.betaRegularizer),this.gammaRegularizer=(0,Es.EC)(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=(0,Ss.Wf)(e)).length;"number"===typeof this.axis&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(const r of this.axis)if(r<0||r>=t)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==Ns.Tw(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,true):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,true):this.beta=null,this.built=!0}call(e,t){const n=(0,Ss.nQ)(e),r=n.shape,s=r.length;return(0,I.lub)((()=>{let{mean:e,variance:t}=(0,I.Gi7)(n,this.axis,!0);const a=Ns.JE(1,s);for(const n of this.axis)a[n]=r[n];const o=e=>null!=e&&e.shape.length!==s?I.XLQ(e,a):e;let i=this.scale?o(this.gamma.read()):null,u=this.center?o(this.beta.read()):null;const l=[],c=[];for(let n=0;n<s;++n)-1!==this.axis.indexOf(n)?(l.push(r[n]),c.push(1)):(l.push(1),c.push(r[n]));return e=I.Gg6(e,l),t=I.Gg6(t,l),null!=i&&(i=I.Gg6(i,c)),null!=u&&(u=I.Gg6(u,c)),ga(n,e,t,u,i,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:(0,gs.Cx)(this.betaInitializer),gammaInitializer:(0,gs.Cx)(this.gammaInitializer),betaRegularizer:(0,Es.SG)(this.betaRegularizer),gammaRegularizer:(0,Es.SG)(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}xa.className="LayerNormalization",I.m7h.registerClass(xa);class wa extends bs.mh{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?(0,Ms.rf)():e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"===typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new ks.nu(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"===typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new ks.nu(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new ks.nu(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new bs.Zg({ndim:4})]}computeOutputShape(e){let t,n;return e=(0,Ss.Wf)(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return(0,I.lub)((()=>{return t=(0,Ss.nQ)(e),n=this.padding,r=this.dataFormat,(0,I.lub)((()=>{if(4!==t.rank)throw new ks.nu(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new ks.nu("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r=(0,Ms.rf)()),"channelsLast"!==r&&"channelsFirst"!==r)throw new ks.nu(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],I.vku(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function va(e,t,n,r,s,a){return(0,I.lub)((()=>{let o;(0,Ls.cj)(s),(0,Ls.Lp)(a),(0,Ls.zb)(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s=(0,Ms.rf)()),null==a&&(a="max"),e=(0,Os.aP)(e,s);const i="same"===r?"same":"valid";return o="max"===a?I._sB(e,t,n,i):I.wS1(e,t,n,i),"channelsFirst"===s&&(o=I.p4s(o,[0,3,1,2])),o}))}function ka(e,t,n,r,s,a){return(0,I.lub)((()=>{let o;(0,Ls.cj)(s),(0,Ls.Lp)(a),(0,Ls.zb)(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s=(0,Ms.rf)()),null==a&&(a="max"),e=(0,Os.fN)(e,s);const i="same"===r?"same":"valid";return o="max"===a?I.YQQ(e,t,n,i):I.uR5(e,t,n,i),"channelsFirst"===s&&(o=I.p4s(o,[0,4,1,2,3])),o}))}wa.className="ZeroPadding2D",I.m7h.registerClass(wa);class Ia extends bs.mh{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"===typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!==typeof e.poolSize[0])throw new ks.nu(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if((0,Ns.iQ)(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"===typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!==typeof e.strides[0])throw new ks.nu(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}(0,Ns.iQ)(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,(0,Ls.zb)(this.padding),this.inputSpec=[new bs.Zg({ndim:3})]}computeOutputShape(e){e=(0,Ss.Wf)(e);const t=(0,Ws.kt)(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return(0,I.lub)((()=>{this.invokeCallHook(e,t),e=Bs.dt((0,Ss.nQ)(e),2);const n=this.poolingFunction((0,Ss.nQ)(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return I.L9e(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Na extends Ia{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return(0,Ls.cj)(s),(0,Ls.zb)(r),va(e,t,n,r,s,"max")}}Na.className="MaxPooling1D",I.m7h.registerClass(Na);class Sa extends Ia{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return(0,Ls.cj)(s),(0,Ls.zb)(r),va(e,t,n,r,s,"avg")}}Sa.className="AveragePooling1D",I.m7h.registerClass(Sa);class Ta extends bs.mh{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new ks.nu(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];(0,Ns.iQ)(this.poolSize,"poolSize"),(0,Ns.iQ)(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,(0,Ls.cj)(this.dataFormat),(0,Ls.zb)(this.padding),this.inputSpec=[new bs.Zg({ndim:4})]}computeOutputShape(e){e=(0,Ss.Wf)(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=(0,Ws.kt)(t,this.poolSize[0],this.padding,this.strides[0]),n=(0,Ws.kt)(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return(0,I.lub)((()=>(this.invokeCallHook(e,t),this.poolingFunction((0,Ss.nQ)(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Ca extends Ta{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return(0,Ls.cj)(s),(0,Ls.zb)(r),va(e,t,n,r,s,"max")}}Ca.className="MaxPooling2D",I.m7h.registerClass(Ca);class Ea extends Ta{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return(0,Ls.cj)(s),(0,Ls.zb)(r),va(e,t,n,r,s,"avg")}}Ea.className="AveragePooling2D",I.m7h.registerClass(Ea);class Aa extends bs.mh{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new ks.nu(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];(0,Ns.iQ)(this.poolSize,"poolSize"),(0,Ns.iQ)(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,(0,Ls.cj)(this.dataFormat),(0,Ls.zb)(this.padding),this.inputSpec=[new bs.Zg({ndim:5})]}computeOutputShape(e){e=(0,Ss.Wf)(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=(0,Ws.kt)(t,this.poolSize[0],this.padding,this.strides[0]),n=(0,Ws.kt)(n,this.poolSize[1],this.padding,this.strides[1]),r=(0,Ws.kt)(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return(0,I.lub)((()=>(this.invokeCallHook(e,t),this.poolingFunction((0,Ss.nQ)(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class $a extends Aa{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return(0,Ls.cj)(s),(0,Ls.zb)(r),ka(e,t,n,r,s,"max")}}$a.className="MaxPooling3D",I.m7h.registerClass($a);class Da extends Aa{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return(0,Ls.cj)(s),(0,Ls.zb)(r),ka(e,t,n,r,s,"avg")}}Da.className="AveragePooling3D",I.m7h.registerClass(Da);class _a extends bs.mh{constructor(e){super(e),this.inputSpec=[new bs.Zg({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new ks.nj}}class Fa extends _a{constructor(e){super(e||{})}call(e,t){return(0,I.lub)((()=>{const t=(0,Ss.nQ)(e);return I.J69(t,1)}))}}Fa.className="GlobalAveragePooling1D",I.m7h.registerClass(Fa);class Ra extends _a{constructor(e){super(e||{})}call(e,t){return(0,I.lub)((()=>{const t=(0,Ss.nQ)(e);return I.Fp7(t,1)}))}}Ra.className="GlobalMaxPooling1D",I.m7h.registerClass(Ra);class Oa extends bs.mh{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,(0,Ls.cj)(this.dataFormat),this.inputSpec=[new bs.Zg({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new ks.nj}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Ma extends Oa{call(e,t){return(0,I.lub)((()=>{const t=(0,Ss.nQ)(e);return"channelsLast"===this.dataFormat?I.J69(t,[1,2]):I.J69(t,[2,3])}))}}Ma.className="GlobalAveragePooling2D",I.m7h.registerClass(Ma);class Ba extends Oa{call(e,t){return(0,I.lub)((()=>{const t=(0,Ss.nQ)(e);return"channelsLast"===this.dataFormat?I.Fp7(t,[1,2]):I.Fp7(t,[2,3])}))}}Ba.className="GlobalMaxPooling2D",I.m7h.registerClass(Ba);var La=n(4685);class Wa extends bs.mh{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=t.layer,s=(0,Is.v)(r,n);delete t.layer;const a={layer:s};return Object.assign(a,t),new e(a)}}class za extends Wa{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=(0,Ss.Wf)(e)).length<3)throw new ks.nu(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=(0,Ss.Wf)(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return(0,I.lub)((()=>{e=(0,Ss.nQ)(e);return(0,Ps.nd)(((e,n)=>[(0,Ss.nQ)(this.layer.call(e,t)),[]]),e,[],!1,null,null,!1,!0)[1]}))}}za.className="TimeDistributed",I.m7h.registerClass(za);class Pa extends Wa{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=(0,Is.v)(n),t.goBackwards=!0!==t.goBackwards;const r={};var s;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=(0,Is.v)(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,s=this.mergeMode,Ns.xn(La.eY,"BidirectionalMergeMode",s),e.weights)throw new ks.nj("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),s=s,this.returnState?(r=s.slice(1),t=s[0]):t=s[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):Ns.Bq(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=(0,Ps.lx)(e,n,r,this.numConstants);if(e=s.inputs,n=s.initialState,r=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const a=[],o=[];if(null!=n){const e=n.length;if(e%2>0)throw new ks.nu("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const r=n.map((e=>new bs.Zg({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),o.push(...r)}if(null!=r)throw new ks.nj("Support for constants in Bidirectional layers is not implemented yet.");const i=a[0]instanceof bs.Iy;for(const u of a)if(u instanceof bs.Iy!==i)throw new ks.nu("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){const n=[e].concat(a),r=this.inputSpec.concat(o),s=this.inputSpec;this.inputSpec=r;const i=super.apply(n,t);return this.inputSpec=s,i}return super.apply(e,t)}call(e,t){return(0,I.lub)((()=>{const n=t.initialState;let r,s,a,o;if(null==n)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),o=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:o}))}return this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=I.GYS(s,1)),"concat"===this.mergeMode?o=Bs.mV([r,s]):"sum"===this.mergeMode?o=I.IHx(r,s):"ave"===this.mergeMode?o=I.dC7(.5,I.IHx(r,s)):"mul"===this.mergeMode?o=I.dC7(r,s):null==this.mergeMode&&(o=[r,s]),this.returnState?null==this.mergeMode?o.concat(a):[o].concat(a):o}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){(0,Ls.f4)(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),(0,Ls.f4)(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=(0,Is.v)(t.layer);if(delete t.layer,null!=t.numConstants)throw new ks.nj("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}Pa.className="Bidirectional",I.m7h.registerClass(Pa);n(7629);n(3146);xs.ex;n(1653);var Ua=n(7385);var Va,Ga;(0,I.OBj)().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(Va||(Va={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(Ga||(Ga={}));const Ha={};function ja(e,t){const n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};Ha[e]=n}function Xa(e){return Ha[e]}function qa(e,t,n,r,s){const a=t.inputParams[e];if(a&&void 0!==a.inputIndexStart){const e=a.inputIndexStart,o=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?e+1:a.inputIndexEnd;if("tensor"===a.type)return Ka(t.inputNames[a.inputIndexStart],n,r,s);if("tensors"===a.type){return t.inputNames.slice(e,o).map((e=>Ka(e,n,r,s)))}const i=Ka(t.inputNames.slice(e)[0],n,r,s),u=i.dataSync();return"number"===a.type?u[0]:I.D5U.toNestedArray(i.shape,u)}const o=t.attrParams[e];return o&&o.value}function Ka(e,t,n,r){const[s,a]=Ya(e);if(null!=r){const e=r.getHashTableHandleByName(s);if(null!=e)return e}const o=n.currentContextIds.find((e=>!!t[Za(s,e)]));return void 0!==o?t[Za(s,o)][a]:void 0}function Qa(e,t){const[n,r,s]=Ya(e);return[Za(n,t&&t.currentContextId),r,s]}function Za(e,t){return t?`${e}-${t}`:e}function Ya(e){const t=e.split(":");if(1===t.length)return[e,0,void 0];const n=t[0],r=3===t.length?t[1]:void 0;return[n,Number(t[t.length-1]),r]}function Ja(e,t,n){let r=qa("pad",e,t,n);if("explicit"===r){r=qa("explicitPaddings",e,t,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)s[e][0]=r[2*e],s[e][1]=r[2*e+1];return s}return r}function eo(e){return e.kept?e:(0,I.d9v)(e)}const to=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],no=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],ro=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],so=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],ao=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],oo=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],io=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],uo=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],lo=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],co=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],po=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],ho=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],fo=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],mo=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],go=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],yo=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],bo=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],xo=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],wo=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];var vo=n(1876).Buffer;class ko{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[r,s,a,o,i,u,l,c,p,h,d,f,m,g,y,b,x,w,v].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,r=[],s=[],a=[],o=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?s.push(e[t.name]):null!=t.input&&0!==t.input.length||a.push(e[t.name]),e)),{});let i=[];const u=[];let l={},c={};null!=t&&(l=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const p=Object.keys(o);p.forEach((e=>{const t=o[e];t.inputNames.forEach(((e,n)=>{const[r,,s]=Qa(e),a=o[r];if(null!=a.outputs){const e=a.outputs.indexOf(s);if(-1!==e){const s=`${r}:${e}`;t.inputNames[n]=s}}t.inputs.push(a),a.children.push(t)}))})),0===Object.keys(c).length?p.forEach((e=>{const t=o[e];0===t.children.length&&u.push(t)})):Object.keys(c).forEach((e=>{const[t]=Qa(e),n=o[t];null!=n&&(n.signatureKey=c[e],u.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((e=>{const[t]=Qa(e),n=o[t];n&&(n.signatureKey=l[e],i.push(n))})):i=r;let h={};null!=e.library&&null!=e.library.function&&(h=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const d={nodes:o,inputs:i,outputs:u,weights:s,placeholders:r,signature:t,functions:h};return a.length>0&&(d.initNodes=a),d}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=Xa(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let s;switch(n.type){case"string":s=No(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=No(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":s=Ro(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Ro(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":s=To(e.attr,n.tfName,n.defaultValue||0),void 0===s&&n.tfDeprecatedName&&(s=To(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":s=Fo(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Fo(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":s=So(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=So(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":s=Mo(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Mo(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":s=_o(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=_o(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":s=Oo(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Oo(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":s=Ao(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Ao(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":s=$o(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=$o(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":s=Eo(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Eo(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:s,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const s=[],a=[];e.signature.inputArg.forEach((e=>{const[t]=Qa(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Co(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,s.push(n),r[t]=n}));Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach(((e,n)=>{const[s,,a]=Qa(e),o=r[s];if(null!=o.outputs){const e=o.outputs.indexOf(a);if(-1!==e){const r=`${s}:${e}`;t.inputNames[n]=r}}t.inputs.push(o),o.children.push(t)}))}));const o=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=Qa(o[e.name]),s=r[t];null!=s&&(s.defaultOutput=n,a.push(s))}));const i=this.mapArgsToSignature(e);return{nodes:r,inputs:s,outputs:a,weights:n,placeholders:[],signature:i}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function Io(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=(0,I.OBj)().global;if("undefined"!==typeof t.atob)return t.atob(e);if("undefined"!==typeof vo)return new vo(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function No(e,t,n,r=!1){const s=e[t];return null!=s?Io(s.s,r):n}function So(e,t,n){const r=e[t];return r?r.b:n}function To(e,t,n){const r=e[t]||{},s=null!=r.i?r.i:null!=r.f?r.f:n;return"number"===typeof s?s:parseInt(s,10)}function Co(e){switch("string"===typeof e&&(e=Va[e]),e){case Va.DT_FLOAT:case Va.DT_HALF:return"float32";case Va.DT_INT32:case Va.DT_INT64:case Va.DT_INT8:case Va.DT_UINT8:return"int32";case Va.DT_BOOL:return"bool";case Va.DT_DOUBLE:return"float32";case Va.DT_STRING:return"string";default:return null}}function Eo(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function Ao(e,t,n){const r=e[t];return r&&r.type?Co(r.type):n}function $o(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>Co(e))):n}function Do(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"===typeof e.size?e.size:parseInt(e.size,10))):[]}function _o(e,t,n){const r=e[t];return r&&r.shape?Do(r.shape):n}function Fo(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"===typeof e?e:parseInt(e,10))):n}function Ro(e,t,n,r=!1){const s=e[t];return s&&s.list&&s.list.s?s.list.s.map((e=>Io(e,r))):n}function Oo(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>Do(e))):n}function Mo(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class Bo{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return Ka(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return Ka(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return To(this.node.rawAttrs,e,t);if(null!=n.s)return No(this.node.rawAttrs,e,t);if(null!=n.b)return So(this.node.rawAttrs,e,t);if(null!=n.shape)return _o(this.node.rawAttrs,e,t);if(null!=n.type)return Ao(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Fo(this.node.rawAttrs,e,t);if(null!=n.list.s)return Ro(this.node.rawAttrs,e,t);if(null!=n.list.shape)return Oo(this.node.rawAttrs,e,t);if(null!=n.list.b)return Mo(this.node.rawAttrs,e,t);if(null!=n.list.type)return $o(this.node.rawAttrs,e,t)}return t}}const Lo=(0,te.op)({addN_:function(e){J.hu(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),J.hu(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>(0,Y._1)(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!J.cO(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return Z.BV.runKernel(N.Xz,r)}});var Wo=n(1661),zo=n(4386),Po=n(766);function Uo(e,t,n=""){if("number"!==typeof e&&"number"!==typeof t){I.D5U.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const s=e[r],a=t[r];I.D5U.assert(s<0||a<0||s===a,(()=>n+` Shapes ${e} and ${t} must match`))}}}function Vo(e){return"number"!==typeof e&&!e.some((e=>e<0))}function Go(e,t,n){let r=Ho(e,n);const s=!Vo(r);if(s&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&t.forEach((e=>{r=Ho(e.shape,r)})),!Vo(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function Ho(e,t){if("number"===typeof e)return t;if("number"===typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const s=e[r],a=t[r];if(s>=0&&a>=0&&s!==a)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=s>=0?s:a}return n}class jo{constructor(e,t,n,r,s,a,o){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=s,this.dynamicSize=a,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=(0,I.iD$)(0),(0,I.CnY)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),Uo(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,(0,I.CnY)(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return(0,I.XeE)([],[0].concat(this.elementShape));const n=this.readMany(e);return Uo(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),(0,I.knu)(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return(0,I.XeE)([],[0].concat(this.elementShape));const t=[];for(let r=0;r<this.size();r++)t.push(r);const n=this.readMany(t);return Uo(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),(0,I.zoF)(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,(0,I.HHK)(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const s=0===n?0:t.size/n,a=[];(0,I.lub)((()=>{t=(0,I.XLQ)(t,[1,n,s]);for(let n=0;n<e.length;++n){const o=[0,0===n?0:r[n-1],0],i=[1,e[n],s];a[n]=(0,I.XLQ)((0,I.tPi)(t,o,i),this.elementShape)}return a}));const o=[];for(let i=0;i<e.length;i++)o[i]=i;this.writeMany(o,a)}}class Xo{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);Uo(t,e.shape,"TensorList shape mismatch: "),(0,I.CnY)(e)})),this.idTensor=(0,I.iD$)(0),this.maxNumElements=r,(0,I.CnY)(this.idTensor)}get id(){return this.idTensor.id}copy(){return new Xo([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);Uo(e,this.elementShape,"TensorList shape mismatch: ");const r=Go(this.elementShape,this.tensors,e);return(0,I.lub)((()=>{const e=this.tensors.map((e=>(0,I.XLQ)(e,r)));return(0,I.knu)(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=Go(this.elementShape,this.tensors,e),r=this.tensors.pop();return Uo(r.shape,e,"TensorList shape mismatch: "),(0,I.XLQ)(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Uo(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");(0,I.CnY)(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new Xo([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);Uo(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=Go(this.elementShape,this.tensors,t);return(0,I.XLQ)(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Uo(this.elementShape,t.shape,"TensorList shape mismatch: "),(0,I.CnY)(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Uo(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=Go(this.elementShape,this.tensors,n);return 0===e.length?(0,I.XeE)([],[0].concat(r)):(0,I.lub)((()=>{const t=e.map((e=>(0,I.XLQ)(this.tensors[e],r)));return(0,I.knu)(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Uo(this.elementShape,t,"TensorList shape mismatch: ");const n=Go(this.elementShape,this.tensors,t);return 0===this.size()?(0,I.XeE)([],[0].concat(n)):(0,I.lub)((()=>{const e=this.tensors.map((e=>(0,I.XLQ)(e,n)));return(0,I.zoF)(e,0)}))}}const qo=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=qa("thenBranch",e,t,n),s=qa("elseBranch",e,t,n),a=qa("cond",e,t,n),o=qa("args",e,t,n);return(await a.data())[0]?n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[s].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=qa("body",e,t,n),s=qa("cond",e,t,n),a=qa("args",e,t,n),o=await n.functionMap[s].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),i=a.map((e=>e.id));let u=await o[0].data();o.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||e.dispose()}));let l=a;for(;u[0];){const e=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map((e=>e.id));e.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const a=await n.functionMap[s].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await a[0].data(),a.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return l}case"LoopCond":return[eo(qa("pred",e,t,n))];case"Switch":{const r=qa("pred",e,t,n);let s=qa("data",e,t,n);return s.kept||(s=eo(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==Ka(e,t,n)));if(r){return[eo(Ka(r,t,n))]}return}case"Enter":{const r=qa("frameName",e,t,n),s=qa("tensor",e,t,n);return n.enterFrame(r),[eo(s)]}case"Exit":{const r=qa("tensor",e,t,n);return n.exitFrame(),[eo(r)]}case"NextIteration":{const r=qa("tensor",e,t,n);return n.nextIteration(),[eo(r)]}case"TensorArrayV3":{const r=qa("size",e,t,n),s=qa("dtype",e,t,n),a=qa("elementShape",e,t,n),o=qa("dynamicSize",e,t,n),i=qa("clearAfterRead",e,t,n),u=qa("identicalElementShapes",e,t,n),l=qa("name",e,t,n),c=new jo(l,s,r,a,u,o,i);return n.addTensorArray(c),[c.idTensor,(0,I.iD$)(1)]}case"TensorArrayWriteV3":{const r=qa("tensorArrayId",e,t,n),s=qa("index",e,t,n),a=qa("tensor",e,t,n),o=n.getTensorArray(r.id);return o.write(s,a),[o.idTensor]}case"TensorArrayReadV3":{const r=qa("tensorArrayId",e,t,n),s=qa("index",e,t,n);return[n.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=qa("tensorArrayId",e,t,n),s=qa("indices",e,t,n),a=qa("dtype",e,t,n);return[n.getTensorArray(r.id).gather(s,a)]}case"TensorArrayScatterV3":{const r=qa("tensorArrayId",e,t,n),s=qa("indices",e,t,n),a=qa("tensor",e,t,n),o=n.getTensorArray(r.id);return o.scatter(s,a),[o.idTensor]}case"TensorArrayConcatV3":{const r=qa("tensorArrayId",e,t,n),s=n.getTensorArray(r.id),a=qa("dtype",e,t,n);return[s.concat(a)]}case"TensorArraySplitV3":{const r=qa("tensorArrayId",e,t,n),s=qa("tensor",e,t,n),a=qa("lengths",e,t,n),o=n.getTensorArray(r.id);return o.split(a,s),[o.idTensor]}case"TensorArraySizeV3":{const r=qa("tensorArrayId",e,t,n),s=n.getTensorArray(r.id);return[(0,I.iD$)(s.size(),"int32")]}case"TensorArrayCloseV3":{const r=qa("tensorArrayId",e,t,n),s=n.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=qa("tensorListId",e,t,n),s=qa("index",e,t,n),a=qa("tensor",e,t,n),o=n.getTensorList(r.id);return o.setItem(s,a),[o.idTensor]}case"TensorListGetItem":{const r=qa("tensorListId",e,t,n),s=qa("index",e,t,n),a=qa("elementShape",e,t,n),o=qa("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(s,a,o)]}case"TensorListScatterV2":case"TensorListScatter":{const r=qa("indices",e,t,n),s=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const s=Math.max(...t);if(null!=r&&-1!==r&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const a=new Xo([],n,e.dtype,r),o=(0,I.HHK)(e,0);return t.forEach(((e,t)=>{a.setItem(e,o[t])})),a}(qa("tensor",e,t,n),r,qa("elementShape",e,t,n),qa("numElements",e,t,n));return n.addTensorList(s),[s.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=qa("elementShape",e,t,n),s=qa("elementDType",e,t,n);let a;a="TensorListReserve"===e.op?"numElements":"maxNumElements";const o=function(e,t,n){return new Xo([],e,t,n)}(r,s,qa(a,e,t,n));return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{const r=qa("tensorListId",e,t,n),s=qa("indices",e,t,n),a=qa("elementShape",e,t,n),o=qa("elementDType",e,t,n);return[n.getTensorList(r.id).gather(s,o,a)]}case"TensorListStack":{const r=qa("tensorListId",e,t,n),s=qa("elementShape",e,t,n),a=qa("elementDType",e,t,n),o=qa("numElements",e,t,n);return[n.getTensorList(r.id).stack(s,a,o)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);Uo(e.shape.slice(1),t,"TensorList shape mismatch: ");const s=(0,I.HHK)(e);return new Xo(s,t,r)}(qa("tensor",e,t,n),qa("elementShape",e,t,n),qa("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=qa("tensorListId",e,t,n),s=n.getTensorList(r.id),a=qa("dtype",e,t,n),o=qa("elementShape",e,t,n);return[s.concat(a,o)]}case"TensorListPushBack":{const r=qa("tensorListId",e,t,n),s=qa("tensor",e,t,n),a=n.getTensorList(r.id);return a.pushBack(s),[a.idTensor]}case"TensorListPopBack":{const r=qa("tensorListId",e,t,n),s=qa("elementShape",e,t,n),a=qa("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(s,a)]}case"TensorListSplit":{const r=qa("tensor",e,t,n),s=qa("elementShape",e,t,n),a=function(e,t,n){let r=0;const s=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const a=Ho(e.shape.slice(1),n),o=0===r?0:e.size/r,i=(0,I.lub)((()=>{const n=[];e=(0,I.XLQ)(e,[1,r,o]);for(let r=0;r<t.length;++r){const i=[0,0===r?0:s[r-1],0],u=[1,t[r],o];n[r]=(0,I.XLQ)((0,I.tPi)(e,i,u),a)}return e.dispose(),n})),u=new Xo([],n,e.dtype,t.length);for(let l=0;l<i.length;l++)u.setItem(l,i[l]);return u}(r,qa("lengths",e,t,n),s);return n.addTensorList(a),[a.idTensor]}case"TensorListLength":{const r=qa("tensorListId",e,t,n),s=n.getTensorList(r.id);return[(0,I.iD$)(s.size(),"int32")]}case"TensorListResize":{const r=qa("tensorListId",e,t,n),s=qa("size",e,t,n),a=n.getTensorList(r.id).resize(s);return n.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};var Ko=n(3854),Qo=n(473);const Zo=(0,te.op)({maxPoolWithArgmax_:function(e,t,n,r,s=!1){const a={x:(0,Y._1)(e,"x","maxPoolWithArgmax")},o={filterSize:t,strides:n,pad:r,includeBatchInIndex:s},i=Z.BV.runKernel(N.vF,a,o);return{result:i[0],indexes:i[1]}}});var Yo=n(1749),Jo=n(5020);function ei(e,t,n){const[r,s]=qa("fusedOps",e,t,n),a="biasadd"===r,o=!a,i="prelu"===s,u="fusedbatchnorm"===r,l=qa("numArgs",e,t,n);if(a){if(i&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&a&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=qa("strides",e,t,n),p=Ja(e,t,n),h=qa("dataFormat",e,t,n).toUpperCase(),d=qa("dilations",e,t,n);let[f,m]=qa("args",e,t,n);o&&(m=f,f=void 0);return{stride:c,pad:p,dataFormat:h,dilations:d,biasArg:f,preluArg:m,activationFunc:s,leakyreluAlpha:qa("leakyreluAlpha",e,t,n)}}var ti=n(4006);function ni(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return Z.BV.runKernel(N.e7,{},r)}const ri=(0,te.op)({multinomial_:function(e,t,n,r=!1){const s=(0,Y._1)(e,"logits","multinomial"),a=s.size,o=s.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(o>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${o}`);n=n||Math.random();const i={logits:1===o?(0,L.X)(s,[1,-1]):s},u={numSamples:t,seed:n,normalized:r},l=Z.BV.runKernel(N.NZ,i,u);return 1===o?(0,L.X)(l,[l.size]):l}});var si=n(5002),ai=n(7245),oi=n(3596);var ii=n(3974),ui=n(8333);const li=async function(e){const t=(0,Y._1)(e,"condition","whereAsync","bool"),n=await t.data(),r=(0,ui.Z)(t.shape,n);return e!==t&&t.dispose(),r};const ci=async function(e,t){const n=(0,Y._1)(e,"x","setdiff1d"),r=(0,Y._1)(t,"y","setdiff1d");J.hu(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),J.hu(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),J.hu(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const s=await n.data(),a=await r.data(),o=new Set(a);let i=0;for(let c=0;c<s.length;c++)o.has(s[c])||i++;const u=new Hn.YD([i],n.dtype),l=new Hn.YD([i],"int32");for(let c=0,p=0;c<s.length;c++)o.has(s[c])||(u.values[p]=s[c],l.values[p]=c,p++);return[u.toTensor(),l.toTensor()]};function pi(e,t,n){return{boxes:qa("boxes",e,t,n),scores:qa("scores",e,t,n),maxOutputSize:qa("maxOutputSize",e,t,n),iouThreshold:qa("iouThreshold",e,t,n),scoreThreshold:qa("scoreThreshold",e,t,n),softNmsSigma:qa("softNmsSigma",e,t,n)}}const hi=2147483648;const di=(0,te.op)({searchSorted_:function(e,t,n="left"){const r=(0,Y._1)(e,"sortedSequence","searchSorted"),s=(0,Y._1)(t,"values","searchSorted"),a=r.shape[r.shape.length-1],o=s.shape[s.shape.length-1],i=(0,L.X)(r,[-1,a]),u=(0,L.X)(s,[-1,o]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==u.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if((0,J.NA)(u.shape)>=hi)throw new Error("values tensor size must less than 2147483648");if(i.shape[1]>=hi)throw new Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${i.shape[1]}`);const l={sortedSequence:i,values:u},c={side:n};return Z.BV.runKernel(N.nr,l,c)}});function fi(e,t){return di(e,t,"left")}function mi(e,t){return di(e,t,"right")}var gi=n(6092);class yi{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=(0,I.iD$)(0),this.tensorMap=new Map,(0,I.CnY)(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return D.i(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),(0,I.lub)((()=>{const e=(0,I.HHK)(t),r=n.length,s=e.length;I.D5U.assert(r===s,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${s} elements.`));for(let t=0;t<r;t++){const r=n[t],s=e[t];(0,I.CnY)(s),this.tensorMap.set(r,s)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return(0,I.lub)((()=>{const e=[];for(let r=0;r<n.length;r++){const s=n[r],a=this.findWithDefault(s,t);e.push(a)}return(0,I.knu)(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}const bi=(0,te.op)({einsum_:function(e,...t){const n=t.map(((e,t)=>(0,Y._1)(e,`tensors${t}`,"einsum"))),r={equation:e};return Z.BV.runKernel(N.$g,n,r)}});const xi=(0,te.op)({sparseToDense_:function(e,t,n,r=0){const s=(0,Y._1)(e,"sparseIndices","sparseToDense","int32"),a=(0,Y._1)(t,"sparseValues","sparseToDense","string_or_numeric"),o=(0,Y._1)(r,"defaultValue","sparseToDense",a.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const s=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const o=t.size;if(0!==t.rank&&(1!==t.rank||o!==s))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${s}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,a,n,o);const i={sparseIndices:s,sparseValues:a,defaultValue:o},u={outputShape:n};return Z.BV.runKernel(N.D2,i,u)}});var wi=n(3865);const vi=(0,te.op)({denseBincount_:function(e,t,n,r=!1){const s=(0,Y._1)(e,"x","denseBincount"),a=(0,Y._1)(t,"weights","denseBincount");J.hu("int32"===s.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`)),J.hu(s.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`)),J.hu(n>=0,(()=>`size must be non-negative, but got ${n}.`)),J.hu(a.size===s.size||0===a.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${a.shape}.`));const o={x:s,weights:a},i={size:n,binaryOutput:r};return Z.BV.runKernel(N.QR,o,i)}});var ki=n(3100);const Ii=(0,te.op)({gatherND_:function(e,t){const n=(0,Y._1)(t,"indices","gatherND","int32"),r={params:(0,Y._1)(e,"x","gatherND","string_or_numeric"),indices:n};return Z.BV.runKernel(N.q1,r)}});const Ni=(0,te.op)({broadcastArgs_:function(e,t){const n=(0,Y._1)(e,"s0","broadcastArgs","int32"),r=(0,Y._1)(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const s={s0:n,s1:r};return Z.BV.runKernel(N.eE,s)}});function Si(e,t,n,r){const s=((e,t,n)=>{switch(e.category){case"arithmetic":return I.lub((()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[j.I(qa("a",e,t,n),qa("b",e,t,n))];case"AddN":return[Lo(qa("tensors",e,t,n))];case"FloorMod":case"Mod":return[Vr(qa("a",e,t,n),qa("b",e,t,n))];case"Mul":return[T.d(qa("a",e,t,n),qa("b",e,t,n))];case"RealDiv":case"Div":return[A.h(qa("a",e,t,n),qa("b",e,t,n))];case"DivNoNan":return[dr(qa("a",e,t,n),qa("b",e,t,n))];case"FloorDiv":return[vr.q(qa("a",e,t,n),qa("b",e,t,n))];case"Sub":return[R.l(qa("a",e,t,n),qa("b",e,t,n))];case"Minimum":return[Pr.L(qa("a",e,t,n),qa("b",e,t,n))];case"Maximum":return[Wn.g(qa("a",e,t,n),qa("b",e,t,n))];case"Pow":return[Pt.s(qa("a",e,t,n),qa("b",e,t,n))];case"SquaredDifference":return[is.$(qa("a",e,t,n),qa("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return I.lub((()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[Gn.W(qa("x",e,t,n))];case"Acos":return[jn(qa("x",e,t,n))];case"Acosh":return[Xn(qa("x",e,t,n))];case"Asin":return[Yn(qa("x",e,t,n))];case"Asinh":return[Jn(qa("x",e,t,n))];case"Atan":return[er(qa("x",e,t,n))];case"Atan2":return[tr(qa("x",e,t,n),qa("y",e,t,n))];case"Atanh":return[nr(qa("x",e,t,n))];case"Ceil":return[or(qa("x",e,t,n))];case"Complex":return[Wo.P(qa("real",e,t,n),qa("imag",e,t,n))];case"Cos":return[pn(qa("x",e,t,n))];case"Cosh":return[dn(qa("x",e,t,n))];case"Elu":return[mr.p(qa("x",e,t,n))];case"Erf":return[gr(qa("x",e,t,n))];case"Exp":return[Ue.Q(qa("x",e,t,n))];case"Expm1":return[xr(qa("x",e,t,n))];case"Floor":return[$t.G(qa("x",e,t,n))];case"Log":return[zt.c(qa("x",e,t,n))];case"Log1p":return[Rr.K(qa("x",e,t,n))];case"Imag":return[zo.a(qa("x",e,t,n))];case"Neg":return[$.W(qa("x",e,t,n))];case"Reciprocal":return[Qr(qa("x",e,t,n))];case"Real":return[Po.k(qa("x",e,t,n))];case"Relu":return[Zr.U(qa("x",e,t,n))];case"Round":return[ns.N(qa("x",e,t,n))];case"Selu":return[rs.U(qa("x",e,t,n))];case"Sigmoid":return[xn.X(qa("x",e,t,n))];case"Sin":return[Ae(qa("x",e,t,n))];case"Sign":return[as(qa("x",e,t,n))];case"Sinh":return[De(qa("x",e,t,n))];case"Softplus":return[$r.W(qa("x",e,t,n))];case"Sqrt":return[_._(qa("x",e,t,n))];case"Square":return[F.h(qa("x",e,t,n))];case"Tanh":return[ps.A(qa("x",e,t,n))];case"Tan":return[cs(qa("x",e,t,n))];case"ClipByValue":return[ir.i(qa("x",e,t,n),qa("clipValueMin",e,t,n),qa("clipValueMax",e,t,n))];case"Relu6":return[Yr.b(qa("x",e,t,n))];case"Rsqrt":return[Ke(Ka(e.inputNames[0],t,n))];case"Prod":return[Kr(qa("x",e,t,n),qa("axes",e,t,n))];case"LeakyRelu":return[Cr.h(qa("x",e,t,n),qa("alpha",e,t,n))];case"Prelu":return[qr.A(qa("x",e,t,n),qa("alpha",e,t,n))];case"IsNan":return[Tr(Ka(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return qo(e,t,n);case"convolution":return I.lub((()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const r=qa("stride",e,t,n),s=qa("pad",e,t,n),a=qa("dataFormat",e,t,n).toUpperCase(),o=qa("dilation",e,t,n);return[ur.P(qa("x",e,t,n),qa("filter",e,t,n),r,s,a,o)]}case"Conv2D":{const r=qa("strides",e,t,n),s=Ja(e,t,n),a=qa("dataFormat",e,t,n).toUpperCase(),o=qa("dilations",e,t,n);return[Ne.T(qa("x",e,t,n),qa("filter",e,t,n),[r[1],r[2]],s,a,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:r,pad:s,dataFormat:a,dilations:o,biasArg:i,preluArg:u,activationFunc:l,leakyreluAlpha:c}=ei(e,t,n);return[Ko.conv2d({x:qa("x",e,t,n),filter:qa("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:a,dilations:[o[1],o[2]],bias:i,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:s,dataFormat:a,dilations:o,biasArg:i,preluArg:u,activationFunc:l,leakyreluAlpha:c}=ei(e,t,n);return[Ko.depthwiseConv2d({x:qa("x",e,t,n),filter:qa("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:a,dilations:[o[1],o[2]],bias:i,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=qa("outputShape",e,t,n),s=qa("strides",e,t,n),a=Ja(e,t,n);return[lr.b(qa("x",e,t,n),qa("filter",e,t,n),r,[s[1],s[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=qa("strides",e,t,n),s=Ja(e,t,n),a=qa("dilations",e,t,n),o=qa("dataFormat",e,t,n).toUpperCase();return[pr.B(qa("input",e,t,n),qa("filter",e,t,n),[r[1],r[2]],s,o,[a[1],a[2]])]}case"Conv3D":{const r=qa("strides",e,t,n),s=qa("pad",e,t,n),a=qa("dataFormat",e,t,n).toUpperCase(),o=qa("dilations",e,t,n);return[Qo.p(qa("x",e,t,n),qa("filter",e,t,n),[r[1],r[2],r[3]],s,a,[o[1],o[2],o[3]])]}case"AvgPool":{const r=qa("strides",e,t,n),s=qa("pad",e,t,n),a=qa("kernelSize",e,t,n);return[rr.w(qa("x",e,t,n),[a[1],a[2]],[r[1],r[2]],s)]}case"MaxPool":{const r=qa("strides",e,t,n),s=qa("pad",e,t,n),a=qa("kernelSize",e,t,n);return[Br._(qa("x",e,t,n),[a[1],a[2]],[r[1],r[2]],s)]}case"MaxPoolWithArgmax":{const r=qa("strides",e,t,n),s=qa("pad",e,t,n),a=qa("kernelSize",e,t,n),o=qa("includeBatchInIndex",e,t,n),{result:i,indexes:u}=Zo(qa("x",e,t,n),[a[1],a[2]],[r[1],r[2]],s,o);return[i,u]}case"AvgPool3D":{const r=qa("strides",e,t,n),s=qa("pad",e,t,n),a=qa("kernelSize",e,t,n);return[Yo.u(qa("x",e,t,n),[a[1],a[2],a[3]],[r[1],r[2],r[3]],s)]}case"MaxPool3D":{const r=qa("strides",e,t,n),s=qa("pad",e,t,n),a=qa("kernelSize",e,t,n);return[Jo.Y(qa("x",e,t,n),[a[1],a[2],a[3]],[r[1],r[2],r[3]],s)]}case"Dilation2D":{const r=qa("strides",e,t,n),s=qa("pad",e,t,n),a=qa("dilations",e,t,n),o=r[1],i=r[2],u=a[1],l=a[2];return[hr(qa("x",e,t,n),qa("filter",e,t,n),[o,i],s,[u,l],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return I.lub((()=>((e,t,n)=>{switch(e.op){case"Fill":{const r=qa("shape",e,t,n),s=qa("dtype",e,t,n),a=qa("value",e,t,n);return[ti.h(r,a,s)]}case"LinSpace":return[ni(qa("start",e,t,n),qa("stop",e,t,n),qa("num",e,t,n))];case"Multinomial":{const r=qa("logits",e,t,n),s=qa("numSamples",e,t,n),a=qa("seed",e,t,n);return[ri(r,s,a)]}case"OneHot":{const r=qa("indices",e,t,n),s=qa("depth",e,t,n),a=qa("onValue",e,t,n),o=qa("offValue",e,t,n);return[Hr.l(r,s,a,o)]}case"Ones":return[Nt.i(qa("shape",e,t,n),qa("dtype",e,t,n))];case"OnesLike":return[jr.J(qa("x",e,t,n))];case"RandomUniform":return[si.L(qa("shape",e,t,n),qa("minval",e,t,n),qa("maxval",e,t,n),qa("dtype",e,t,n))];case"Range":{const r=qa("start",e,t,n),s=qa("stop",e,t,n),a=qa("step",e,t,n);return[ai.w(r,s,a,qa("dtype",e,t,n))]}case"TruncatedNormal":{const r=qa("shape",e,t,n),s=qa("mean",e,t,n),a=qa("stdDev",e,t,n),o=qa("seed",e,t,n);return[oi.X(r,s,a,qa("dtype",e,t,n),o)]}case"Zeros":return[Rt.l(qa("shape",e,t,n),qa("dtype",e,t,n))];case"ZerosLike":return[U.P(qa("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:s,maxOutputSize:a,iouThreshold:o,scoreThreshold:i,softNmsSigma:u}=pi(e,t,n),l=await ii.BHj.nonMaxSuppressionWithScoreAsync(r,s,a,o,i,u);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:s,maxOutputSize:a,iouThreshold:o,scoreThreshold:i}=pi(e,t,n),u=qa("padToMaxOutputSize",e,t,n),l=await ii.BHj.nonMaxSuppressionPaddedAsync(r,s,a,o,i,u);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:s,maxOutputSize:a,iouThreshold:o,scoreThreshold:i}=pi(e,t,n);return[await ii.BHj.nonMaxSuppressionAsync(r,s,a,o,i)]}case"Where":{const r=S.p(qa("condition",e,t,n),"bool"),s=[await li(r)];return r.dispose(),s}case"ListDiff":return ci(qa("x",e,t,n),qa("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return I.lub((()=>((e,t,n)=>{switch(e.op){case"LowerBound":return[fi(qa("sortedSequence",e,t,n),qa("values",e,t,n))];case"TopKV2":{const r=qa("x",e,t,n),s=qa("k",e,t,n),a=qa("sorted",e,t,n),o=hs(r,s,a);return[o.values,o.indices]}case"UpperBound":return[mi(qa("sortedSequence",e,t,n),qa("values",e,t,n))];case"Unique":{const r=qa("x",e,t,n),s=ds(r);return[s.values,s.indices]}case"UniqueV2":{const r=qa("x",e,t,n),s=qa("axis",e,t,n),a=ds(r,s);return[a.values,a.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return I.lub((()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const r=qa("images",e,t,n),s=qa("size",e,t,n),a=qa("alignCorners",e,t,n),o=qa("halfPixelCenters",e,t,n);return[ii.BHj.resizeBilinear(r,[s[0],s[1]],a,o)]}case"ResizeNearestNeighbor":{const r=qa("images",e,t,n),s=qa("size",e,t,n),a=qa("alignCorners",e,t,n),o=qa("halfPixelCenters",e,t,n);return[ii.BHj.resizeNearestNeighbor(r,[s[0],s[1]],a,o)]}case"CropAndResize":{const r=qa("image",e,t,n),s=qa("boxes",e,t,n),a=qa("boxInd",e,t,n),o=qa("cropSize",e,t,n),i=qa("method",e,t,n),u=qa("extrapolationValue",e,t,n);return[ii.BHj.cropAndResize(r,s,a,o,i,u)]}case"ImageProjectiveTransformV3":{const r=qa("images",e,t,n),s=qa("transforms",e,t,n),a=qa("outputShape",e,t,n),o=qa("fillValue",e,t,n),i=qa("interpolation",e,t,n),u=qa("fillMode",e,t,n);return[ii.BHj.transform(r,s,i.toLowerCase(),u.toLowerCase(),o,a)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return I.lub((()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=qa("default",e,t,n);return[Ka(e.name,t,n)||r];case"Placeholder":return[Ka(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[eo(qa("x",e,t,n))];case"IdentityN":return qa("x",e,t,n).map((e=>eo(e)));case"Shape":return[gi.R(qa("x",e,t,n).shape,"int32")];case"ShapeN":return qa("x",e,t,n).map((e=>gi.R(e.shape)));case"Size":return[D.i(qa("x",e,t,n).size,"int32")];case"Rank":return[D.i(qa("x",e,t,n).rank,"int32")];case"NoOp":return[D.i(1)];case"Print":const s=qa("x",e,t,n),a=qa("data",e,t,n),o=qa("message",e,t,n),i=qa("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<a.length;e++)console.log(Array.prototype.slice.call(a[e].dataSync()).slice(0,i));return[s];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return I.lub((()=>((e,t,n)=>{switch(e.op){case"Equal":return[ft.D(qa("a",e,t,n),qa("b",e,t,n))];case"NotEqual":return[Gr.Q(qa("a",e,t,n),qa("b",e,t,n))];case"Greater":return[it.p(qa("a",e,t,n),qa("b",e,t,n))];case"GreaterEqual":return[de.b(qa("a",e,t,n),qa("b",e,t,n))];case"Less":return[bt(qa("a",e,t,n),qa("b",e,t,n))];case"LessEqual":return[fe.z(qa("a",e,t,n),qa("b",e,t,n))];case"LogicalAnd":return[me.H(qa("a",e,t,n),qa("b",e,t,n))];case"LogicalNot":return[sn(qa("a",e,t,n))];case"LogicalOr":return[Or(qa("a",e,t,n),qa("b",e,t,n))];case"Select":case"SelectV2":return[ge.a(qa("condition",e,t,n),qa("a",e,t,n),qa("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return I.lub((()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[oe.O(qa("a",e,t,n),qa("b",e,t,n),qa("transposeA",e,t,n),qa("transposeB",e,t,n))];case"Einsum":return[bi(qa("equation",e,t,n),...qa("tensors",e,t,n))];case"Transpose":return[Oe.p(qa("x",e,t,n),qa("perm",e,t,n))];case"_FusedMatMul":const[r,s]=qa("fusedOps",e,t,n),a="biasadd"===r,o="prelu"===s,i=qa("numArgs",e,t,n),u=qa("leakyreluAlpha",e,t,n);if(a){if(o&&2!==i)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==i)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[l,c]=qa("args",e,t,n);return[Ko.matMul({a:qa("a",e,t,n),b:qa("b",e,t,n),transposeA:qa("transposeA",e,t,n),transposeB:qa("transposeB",e,t,n),bias:l,activation:s,preluActivationWeights:c,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return I.lub((()=>((e,t,n)=>{switch(e.op){case"EuclideanNorm":return[br(qa("x",e,t,n),qa("axis",e,t,n),qa("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[sr.t(qa("x",e,t,n),qa("mean",e,t,n),qa("variance",e,t,n),qa("offset",e,t,n),qa("scale",e,t,n),qa("epsilon",e,t,n))];case"LRN":return[Er(qa("x",e,t,n),qa("radius",e,t,n),qa("bias",e,t,n),qa("alpha",e,t,n),qa("beta",e,t,n))];case"Softmax":return[os.X(qa("x",e,t,n))];case"LogSoftmax":return[_r.C(qa("x",e,t,n))];case"SparseToDense":return[xi(qa("sparseIndices",e,t,n),qa("outputShape",e,t,n),qa("sparseValues",e,t,n),qa("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return I.lub((()=>((e,t,n)=>{switch(e.op){case"Max":{const r=qa("axis",e,t,n),s=qa("keepDims",e,t,n);return[Lr.F(qa("x",e,t,n),r,s)]}case"Mean":{const r=qa("axis",e,t,n),s=qa("keepDims",e,t,n);return[Wr.J(qa("x",e,t,n),r,s)]}case"Min":{const r=qa("axis",e,t,n),s=qa("keepDims",e,t,n);return[zr.V(qa("x",e,t,n),r,s)]}case"Sum":{const r=qa("axis",e,t,n),s=qa("keepDims",e,t,n);return[W.S(qa("x",e,t,n),r,s)]}case"All":{const r=qa("axis",e,t,n),s=qa("keepDims",e,t,n);return[qn.$(qa("x",e,t,n),r,s)]}case"Any":{const r=qa("axis",e,t,n),s=qa("keepDims",e,t,n);return[Kn.Y(qa("x",e,t,n),r,s)]}case"ArgMax":{const r=qa("axis",e,t,n);return[Qn.N(qa("x",e,t,n),r)]}case"ArgMin":{const r=qa("axis",e,t,n);return[Zn(qa("x",e,t,n),r)]}case"Prod":{const r=qa("axis",e,t,n),s=qa("keepDims",e,t,n);return[Kr(qa("x",e,t,n),r,s)]}case"Cumprod":{const r=qa("axis",e,t,n),s=qa("exclusive",e,t,n),a=qa("reverse",e,t,n);return[Gt(qa("x",e,t,n),r,s,a)]}case"Cumsum":{const r=qa("axis",e,t,n),s=qa("exclusive",e,t,n),a=qa("reverse",e,t,n);return[Re(qa("x",e,t,n),r,s,a)]}case"Bincount":const r=qa("x",e,t,n),s=qa("weights",e,t,n),a=qa("size",e,t,n);return[wi.y(r,s,a)];case"DenseBincount":{const r=qa("x",e,t,n),s=qa("weights",e,t,n),a=qa("size",e,t,n),o=qa("binaryOutput",e,t,n);return[vi(r,s,a,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return I.lub((()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=qa("n",e,t,n),s=qa("axis",e,t,n);let a=qa("tensors",e,t,n);return a=a.slice(0,r),[In.z(a,s)]}case"Gather":{const r=qa("x",e,t,n),s=qa("indices",e,t,n);return[Ln.I(r,S.p(s,"int32"),0)]}case"GatherV2":{const r=qa("axis",e,t,n),s=qa("batchDims",e,t,n),a=qa("x",e,t,n),o=qa("indices",e,t,n);return[Ln.I(a,S.p(o,"int32"),r,s)]}case"Reverse":{const r=qa("dims",e,t,n),s=[];for(let e=0;e<r.length;e++)r[e]&&s.push(e);const a=qa("x",e,t,n);return[en.G(a,s)]}case"ReverseV2":{const r=qa("axis",e,t,n),s=qa("x",e,t,n);return[en.G(s,r)]}case"Slice":{const r=qa("begin",e,t,n),s=qa("size",e,t,n);return[Et.t(qa("x",e,t,n),r,s)]}case"StridedSlice":{const r=qa("begin",e,t,n),s=qa("end",e,t,n),a=qa("strides",e,t,n),o=qa("beginMask",e,t,n),i=qa("endMask",e,t,n),u=qa("ellipsisMask",e,t,n),l=qa("newAxisMask",e,t,n),c=qa("shrinkAxisMask",e,t,n),p=qa("x",e,t,n);return[ls(p,r,s,a,o,i,u,l,c)]}case"Pack":return(0,I.lub)((()=>{const r=qa("axis",e,t,n),s=qa("tensors",e,t,n),a=s[0].shape,o=us.L(s[0]).shape,i=s.map((e=>{const t=I.D5U.arraysEqual(e.shape,a);if(!t&&!I.D5U.arraysEqual(us.L(e).shape,o))throw new Error("the input tensors shape does not match");return t?e:L.X(e,a)}));return[On.k(i,r)]}));case"Unpack":{const r=qa("axis",e,t,n),s=qa("tensor",e,t,n);return Bt.H(s,r)}case"Tile":{const r=qa("reps",e,t,n);return[Qe.G(qa("x",e,t,n),r)]}case"Split":case"SplitV":{const r=qa("axis",e,t,n),s=qa("numOrSizeSplits",e,t,n),a=qa("x",e,t,n);return xe.V(a,s,r)}case"ScatterNd":{const r=qa("indices",e,t,n),s=qa("values",e,t,n),a=qa("shape",e,t,n);return[ki.s(r,s,a)]}case"GatherNd":{const r=qa("x",e,t,n),s=qa("indices",e,t,n);return[Ii(r,s)]}case"SparseToDense":{const r=qa("sparseIndices",e,t,n),s=qa("outputShape",e,t,n),a=qa("sparseValues",e,t,n),o=qa("defaultValue",e,t,n);return[xi(r,a,s,a.dtype===o.dtype?o:S.p(o,a.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return I.lub((()=>((e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:s,emptyRowIndicator:a,reverseIndexMap:o}=ii.rVs.sparseFillEmptyRows(qa("indices",e,t,n),qa("values",e,t,n),qa("denseShape",e,t,n),qa("defaultValue",e,t,n));return[r,s,a,o]}case"SparseReshape":{const{outputIndices:r,outputShape:s}=ii.rVs.sparseReshape(qa("inputIndices",e,t,n),qa("inputShape",e,t,n),qa("newShape",e,t,n));return[r,s]}case"SparseSegmentMean":return[ii.rVs.sparseSegmentMean(qa("data",e,t,n),qa("indices",e,t,n),qa("segmentIds",e,t,n))];case"SparseSegmentSum":return[ii.rVs.sparseSegmentSum(qa("data",e,t,n),qa("indices",e,t,n),qa("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return I.lub((()=>((e,t,n)=>{switch(e.op){case"FFT":return[wr.k(qa("x",e,t,n))];case"IFFT":return[kr.S(qa("x",e,t,n))];case"RFFT":return[ts.Q(qa("x",e,t,n))];case"IRFFT":return[Ir.w(qa("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return I.lub((()=>((e,t,n)=>{switch(e.op){case"StringNGrams":{const{nGrams:r,nGramsSplits:s}=ii.Z_8.stringNGrams(qa("data",e,t,n),qa("dataSplits",e,t,n),qa("separator",e,t,n),qa("nGramWidths",e,t,n),qa("leftPad",e,t,n),qa("rightPad",e,t,n),qa("padWidth",e,t,n),qa("preserveShortSequences",e,t,n));return[r,s]}case"StringSplit":{const{indices:r,values:s,shape:a}=ii.Z_8.stringSplit(qa("input",e,t,n),qa("delimiter",e,t,n),qa("skipEmpty",e,t,n));return[r,s,a]}case"StringToHashBucketFast":return[ii.Z_8.stringToHashBucketFast(qa("input",e,t,n),qa("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return I.lub((()=>((e,t,n)=>{switch(e.op){case"Cast":return[S.p(qa("x",e,t,n),qa("dtype",e,t,n))];case"ExpandDims":{const r=qa("axis",e,t,n);return[Bn.d(qa("x",e,t,n),r)]}case"Squeeze":{const r=qa("axis",e,t,n);return[us.L(qa("x",e,t,n),r)]}case"Reshape":return[L.X(qa("x",e,t,n),qa("shape",e,t,n))];case"MirrorPad":return[Ur(qa("x",e,t,n),qa("padding",e,t,n),qa("mode",e,t,n))];case"PadV2":case"Pad":return[mn.v(qa("x",e,t,n),qa("padding",e,t,n),qa("constantValue",e,t,n))];case"SpaceToBatchND":{const r=qa("blockShape",e,t,n),s=qa("paddings",e,t,n);return[ue(qa("x",e,t,n),r,s)]}case"BatchToSpaceND":{const r=qa("blockShape",e,t,n),s=qa("crops",e,t,n);return[vn(qa("x",e,t,n),r,s)]}case"DepthToSpace":{const r=qa("blockSize",e,t,n),s=qa("dataFormat",e,t,n).toUpperCase();return[cr(qa("x",e,t,n),r,s)]}case"BroadcastTo":return[ar.U(qa("x",e,t,n),qa("shape",e,t,n))];case"BroadcastArgs":return[Ni(qa("s0",e,t,n),qa("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const s=qa("keyDType",e,t,n),a=qa("valueDType",e,t,n),o=new yi(s,a);return r.addHashTable(e.name,o),[o.handle]}case"LookupTableImport":case"LookupTableImportV2":{const s=qa("tableHandle",e,t,n,r),a=qa("keys",e,t,n),o=qa("values",e,t,n),i=r.getHashTableById(s.id);return[await i.import(a,o)]}case"LookupTableFind":case"LookupTableFindV2":{const s=qa("tableHandle",e,t,n,r),a=qa("keys",e,t,n),o=qa("defaultValue",e,t,n),i=r.getHashTableById(s.id);return[await i.find(a,o)]}case"LookupTableSize":case"LookupTableSizeV2":{const s=qa("tableHandle",e,t,n,r);return[r.getHashTableById(s.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const s=Xa(e.op);if(s&&s.customExecutor)return s.customExecutor(new Bo(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return I.D5U.isPromise(s)?s.then((e=>[].concat(e))):[].concat(s)}class Ti{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function Ci(e,t,n,r){const s=new Set,a=[];let o=null,i=null;const u=new Set,l=Object.keys(e).map((e=>Ya(e)[0]));let c=[];null!=r&&(c=r.map((e=>Ya(e.name)[0])));const p=[...t];for(;p.length>0;){const e=p.pop();(Di(e)||_i(e)||Fi(e))&&null==o&&(o=e,i=o.children.map((e=>e.name)).filter((e=>s.has(e)))),s.add(e.name),null==n[e.name]&&(-1===l.indexOf(e.name)&&-1===c.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((e=>{u.has(e.name)||(u.add(e.name),p.push(e))})):a.push(e.name)))}return{inputs:e,outputs:t,usedNodes:s,missingInputs:a,dynamicNode:o,syncInputs:i}}const Ei=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],Ai=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],$i=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function Di(e){return Ei.indexOf(e.op)>=0}function _i(e){return Ai.indexOf(e.op)>=0}function Fi(e){return $i.indexOf(e.op)>=0}class Ri{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new Ri(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=Ci(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:s,syncInputs:a}=n;if(null!=s)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(r.length>0){const n=t.map((e=>e.name)),s=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${s}]. Missing the following inputs: [${r}]`)}return function(e,t,n){const{usedNodes:r,inputs:s}=n,a=[],o=Object.keys(s).map((e=>Ya(e)[0])).map((t=>e.nodes[t])),i=e.initNodes;o.forEach((e=>{r.has(e.name)&&a.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&a.push(e)})),null!=i&&i.forEach((e=>{r.has(e.name)&&a.push(e)}));const u=new Set,l=[];for(;a.length>0;){const e=a.pop();u.add(e.name),t[e.name]||l.push(e),e.children.forEach((e=>{!u.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>u.has(e.name)))&&a.push(e)}))}return l}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[Ya(e)[0]])),s=t.map((e=>Ya(e)[0]));let a=s.map((e=>this.graph.nodes[e]));this.resetIntermediateTensors(),0===a.length&&(a=this._outputs);const o=this.getCompilationKey(r,a);let i=this.compiledMap.get(o);null==i&&(i=this.compile(e,a),this.compiledMap.set(o,i));const u={},l={};return(0,I.lub)((()=>{const n=new Ti(this.weightMap,u,l,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,s]=Ya(t),a=[];a[s]=e[t],r[n]=a}));const a=this.getFrozenTensorIds(r),o={};for(let e=0;e<i.length;e++){const t=i[e];if(!r[t.name]){const e=Si(t,r,n,this._resourceManager);if(I.D5U.isPromise(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,a,s,o)}}return null==this.parent&&n.dispose(a),t.map((e=>Ka(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,s,a,o){"control"!==t.category&&-1===a.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(o[e.id]=(o[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){const a=function(e,t,n){return t[Za(e,n.currentContextId)]}(e.name,n,r);null!=a&&a.forEach((e=>{if(e&&!e.kept&&!s.has(e.id)){const n=o[e.id];if(1===n){if(this.keepTensorForDebug){const[n,s]=Qa(t.name,r);this.intermediateTensors[n]||(this.intermediateTensors[n]=[]),this.intermediateTensors[n][s]=e}else e.dispose();delete o[e.id]}else null!=n&&o[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.intermediateTensors&&(Object.keys(this.intermediateTensors).forEach((e=>this.intermediateTensors[e].forEach((e=>e.dispose())))),this.disposeTensorsMap())}disposeTensorsMap(){this.tensorsMap&&Object.keys(this.tensorsMap).forEach((e=>{this.tensorsMap[e].forEach((e=>{!e||e.kept||e.isDisposed||this.keepIds.has(e.id)||e.dispose()}))}))}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(const e in this.intermediateTensors)this.intermediateTensors[e].forEach((e=>e.dispose())),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,r={},s={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=(0,I.OBj)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(l){console.warn(l.message)}this.resetIntermediateTensors();const a=new Ti(this.weightMap,r,s,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,a,t,n);const o=t.map((e=>Ka(e,this.tensorsMap,a))),i=o.map((e=>e.id)),u=Object.keys(e).map((t=>e[t].id));return this.keepIds=new Set([...i,...u,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),null==this.parent&&a.dispose(this.keepIds),o}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const s=Object.keys(e),a=s.map((e=>this.graph.nodes[Ya(e)[0]])),o=n.map((e=>Ya(e)[0]));let i=o.map((e=>this.graph.nodes[e]));0===i.length&&(i=this._outputs);const{usedNodes:u,missingInputs:l,dynamicNode:c,syncInputs:p}=Ci(e,i,this.weightMap,this._initNodes),h=[...a,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),d=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=Ya(t),s=[];s[r]=e[t],d[n]=s}));const f={},m=this.getFrozenTensorIds(d),g={};for(;h.length>0;){const e=this.processStack(a,h,t,d,g,m,o,f,u);await Promise.all(e)}null!=c||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=i.filter((e=>!Di(e)&&!Ka(e.name,d,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=c&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${s}]. Consider providing the following inputs: [${l}]. ${e}`)}return d}processStack(e,t,n,r,s,a,o,i,u){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&qa("isConstant",e.node,r,n)&&([c]=Qa(e.node.name,n)),null==r[e.node.name]){const p=Si(e.node,r,n,this._resourceManager);c||([c]=Qa(e.node.name,n));const h=n.currentContext;I.D5U.isPromise(p)?l.push(p.then((l=>(r[c]=l,n.currentContext=h,this.checkTensorForDisposal(c,e.node,r,n,a,o,i),this.processChildNodes(e.node,t,n,r,s,u),l)))):(r[c]=p,this.checkTensorForDisposal(c,e.node,r,n,a,o,i),this.processChildNodes(e.node,t,n,r,s,u))}else this.processChildNodes(e.node,t,n,r,s,u)}return l}processChildNodes(e,t,n,r,s,a){e.children.forEach((e=>{const[o]=Qa(e.name,n);!s[o]&&a.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!Ka(e,r,n)))&&(s[o]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!Ka(e,r,n)))&&(s[o]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=Ya(t),s=this.graph.nodes[r];if(s.attrParams.shape&&s.attrParams.shape.value){const e=s.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));I.D5U.assert(t,(()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}s.attrParams.dtype&&s.attrParams.dtype.value&&I.D5U.assert(n.dtype===s.attrParams.dtype.value,(()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){const t={};for(const n in e)if(null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]){t[this._signature.inputs[n].name]=e[n]}else t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=Ya(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>{if(null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]){return this._signature.outputs[e].name}return e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=Ya(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class Oi{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class Mi{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new Oi}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=I.io.browserHTTPRequest(e,this.loadOptions);else{const t=I.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(I.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return I.D5U.isPromise(e)?e.then((e=>this.loadSync(e))):this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=I.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Ri(ko.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=ko.Instance.transformGraph(e.modelInitializer);this.initializer=new Ri(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"===typeof e){const t=I.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof I.esB)&&!Array.isArray(e))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,r)=>(t[n]=e[r],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function Bi(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"===typeof e&&(e=function(e){e.endsWith("/")||(e+="/");return`${e}model.json?tfjs-format=file`}(e));const n=new Mi(e,t);return await n.load(),n}var Li,Wi=n(6377);function zi(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"===typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(Gi(e)){const s=Array.isArray(e)?[]:{};r.add(e);for(const a in e){const o=zi(e[a],t,n,r);s[a]=o}return r.delete(e),e.__proto__&&(s.__proto__=e.__proto__),s}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,s.value),s.value}function Pi(e,t=Vi){return Ui(e,t)}function Ui(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(Gi(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const a in r){const r=Ui(e.map((e=>e[a])),t,n);s[a]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function Vi(e){return null===e?null:Gi(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function Gi(e){let t=!1;if(I.OBj().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:r}=n(4977);t=e instanceof r}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"===typeof e&&!(e instanceof I.esB)&&!(e instanceof Promise)&&!t)}function Hi(e){return function(e,t){return zi(e,t)}(e,ji)}function ji(e){return e instanceof I.esB?{value:e.clone(),recurse:!1}:Gi(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class Xi{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class qi extends Xi{constructor(){super(qi.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let r=0;r<n;r++)t[r]=this.get(this.wrap(this.begin+r));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function Ki(e){return new Ji(e)}function Qi(e,t){return new cu(e,t)}qi.INITIAL_CAPACITY=32;class Zi{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new ou(this,e)}filter(e){return new su(this,e)}map(e){return new au(this,e)}mapAsync(e){return new iu(this,e)}serialMapAsync(e){return new iu(this,e).serial()}flatmap(e){return new lu(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new ru(this,e,t)}columnMajorBatch(e,t=!0,n=Vi){return this.rowMajorBatch(e,t).map((e=>Pi(e,n)))}concatenate(e,t){return new cu(new Yi([this,e]),t)}take(e){return e<0||null==e?this:new nu(this,e)}skip(e){return e<0||null==e?this:new tu(this,e)}prefetch(e){return new pu(this,e)}shuffle(e,t){return new hu(this,e,t)}serial(){return new eu(this)}}class Yi extends Zi{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:Hi(e),done:!1}}}class Ji extends Zi{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class eu extends Zi{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class tu extends Zi{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;I.B90(e.value)}return this.upstream.next()}}class nu extends Zi{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class ru extends Zi{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class su extends Zi{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;I.B90(e.value)}}}class au extends Zi{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=I.piX.getTensorsInContainer(e.value),n=this.transform(e.value),r=I.piX.getTensorsInContainer(n);for(const s of t)I.piX.isTensorInList(s,r)||s.dispose();return{value:n,done:!1}}}class ou extends Zi{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class iu extends Zi{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=I.piX.getTensorsInContainer(e.value),n=await this.transform(e.value),r=I.piX.getTensorsInContainer(n);for(const s of t)I.piX.isTensorInList(s,r)||s.dispose();return{value:n,done:!1}}}class uu extends Zi{constructor(){super(),this.outputQueue=new qi,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!(await this.pump()))return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class lu extends uu{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=I.piX.getTensorsInContainer(e.value),n=this.transform(e.value),r=I.piX.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const s of t)I.piX.isTensorInList(s,r)||s.dispose();return!0}}class cu extends Zi{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(Li||(Li={}));class pu extends Zi{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new Xi(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class hu extends pu{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Wi.alea(n||I.D5U.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class du{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return I.D5U.assert(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),fu((async()=>(await n.iterator()).columnMajorBatch(e,t,mu)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,fu((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,fu((async()=>(await t.iterator()).filter((t=>I.lub((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return fu((async()=>(await t.iterator()).map((t=>I.lub((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return fu((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return fu((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,fu((async()=>Qi(Ki((async()=>({value:await t.iterator(),done:!1}))).take(e))),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,fu((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=Wi.alea(t||I.D5U.now().toString());return fu((async()=>{let t=s.int32();return n&&(t+=s.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,fu((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function fu(e,t=null){return new class extends du{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function mu(e){if(null===e)return null;if(function(e){return null==e||null===(t=e)||"object"!==typeof t&&"function"!==typeof t||Array.isArray(e)||"object"===typeof e&&e instanceof I.esB||I.D5U.isTypedArray(e);var t}(e[0])){return{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof I.esB?I.knu(e):I.XeE(e)}(e),recurse:!1}}return{value:null,recurse:!0}}du.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");n(1876).Buffer;function gu(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&I.D5U.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}const yu=I.GDt.ZA;class bu extends I.Zuw{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new I.JLz(this,(0,I.SRH)())}nextDataId(){return bu.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,(0,I.OBj)().get("IS_NODE")&&I.Wap.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&I.D5U.isString(n[0])){const s=n.map((e=>I.D5U.encodeString(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,r,s){this.data.set(e,{values:t,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return I.Wap.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>I.D5U.decodeString(e)));return(0,I.f3b)(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,I.f3b)(e.shape,e.dtype,t)}makeOutput(e,t,n){return(0,I.SRH)().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=I.D5U.now();e();return{kernelMs:I.D5U.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){gu([e],"where");const t=this.readSync(e.dataId);return yu(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}bu.nextDataId=0;function xu(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:o}=r;if(gu(o,e),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const i=a,u=i.data.get(o.dataId).values,l=I.D5U.sizeFromShape(o.shape),c=n||o.dtype,p=I.D5U.getArrayFromDType(c,l);for(let e=0;e<l;++e)p[e]=t(u[e],s);return i.makeTensorInfo(o.shape,c,p)}}function wu(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:o}=r;if(gu(o,e),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const i=a,u=i.data.get(o.dataId).values,l=n||o.dtype,c=t(u,l,s);return i.makeTensorInfo(o.shape,l,c)}}(0,I.jqO)("cpu",(()=>new bu),1);const vu=xu(I.SX0,(e=>e>=0?e:Math.exp(e)-1)),ku={kernelName:I.SX0,backendName:"cpu",kernelFunc:vu};function Iu(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Nu={kernelName:I.iJz,backendName:"cpu",kernelFunc:Iu};function Su(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r;gu([s],"leakyRelu");const o=I.D5U.sizeFromShape(s.shape),i=n.data.get(s.dataId).values,u=I.D5U.getTypedArrayFromDType("float32",o);for(let l=0;l<i.length;l++)u[l]=i[l]<0?a*i[l]:i[l];return n.makeTensorInfo(s.shape,"float32",u)}const Tu={kernelName:I.J$2,backendName:"cpu",kernelFunc:Su};function Cu(e){return(t,n,r,s,a)=>{const o=I.Wap.assertAndGetBroadcastShape(t,n),i=o.length,u=I.D5U.computeStrides(o),l=I.D5U.sizeFromShape(o),c=I.D5U.getTypedArrayFromDType(a,l),p=t.length,h=n.length,d=I.D5U.computeStrides(t),f=I.D5U.computeStrides(n),m=I.Wap.getBroadcastDims(t,o),g=I.Wap.getBroadcastDims(n,o);if(m.length+g.length===0)for(let y=0;y<c.length;++y)c[y]=e(r[y%r.length],s[y%s.length]);else for(let y=0;y<c.length;++y){const t=I.D5U.indexToLoc(y,i,u),n=t.slice(-p);m.forEach((e=>n[e]=0));const a=I.D5U.locToIndex(n,p,d),o=t.slice(-h);g.forEach((e=>o[e]=0));const l=I.D5U.locToIndex(o,h,f);c[y]=e(r[a],s[l])}return[c,o]}}const Eu=Cu(((e,t)=>e<0?t*e:e));function Au(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;gu([r,s],"prelu");const a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,[i,u]=Eu(r.shape,s.shape,a,o,"float32");return n.makeTensorInfo(u,"float32",i)}const $u={kernelName:I.o0g,backendName:"cpu",kernelFunc:Au},Du=xu(I.qkr,(e=>Math.max(0,e))),_u={kernelName:I.qkr,backendName:"cpu",kernelFunc:Du},Fu=xu(I.SbG,(e=>Math.min(Math.max(0,e),6))),Ru={kernelName:I.SbG,backendName:"cpu",kernelFunc:Fu};function Ou(e){return(t,n,r)=>{const s=I.D5U.getTypedArrayFromDType(n,t.length);for(let a=0;a<t.length;++a)s[a]=e(t[a],r);return s}}const Mu=Ou((e=>1/(1+Math.exp(-e)))),Bu=xu(I.a5O,(e=>1/(1+Math.exp(-e)))),Lu={kernelName:I.a5O,backendName:"cpu",kernelFunc:Bu};function Wu(e,t,n,r,s){if("linear"===n)return Iu({inputs:{x:t},backend:e});if("relu"===n)return Du({inputs:{x:t},backend:e});if("elu"===n)return vu({inputs:{x:t},backend:e});if("relu6"===n)return Fu({inputs:{x:t},backend:e});if("prelu"===n)return Au({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return Su({inputs:{x:t},backend:e,attrs:{alpha:s}});if("sigmoid"===n)return Bu({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function zu(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,i=n.makeTensorInfo(r.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(s.shape,"float32",o)},i}const Pu={kernelName:I.Zz9,backendName:"cpu",kernelFunc:zu};function Uu(e,t,n="float32"){if("complex64"===n){return zu({inputs:{real:Uu(e,t,"float32"),imag:Uu(e,t,"float32")},backend:e})}const r=I.D5U.makeZerosTypedArray(I.D5U.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function Vu(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const Gu={kernelName:I.xJR,backendName:"cpu",kernelFunc:Vu};function Hu(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:a}=r;if("complex64"===a){if("complex64"===s.dtype)return Iu({inputs:{x:s},backend:n});const e=Uu(n,s.shape,s.dtype),t=Hu({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=zu({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=Vu({inputs:{input:s},backend:n}),t=Hu({inputs:{x:e},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(e),t}if(!I.D5U.hasEncodingLoss(s.dtype,a)){const e=Iu({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:a}}if("int32"===a){const e=n.data.get(s.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(s.shape,"int32",t)}if("bool"===a){const e=n.data.get(s.dataId).values,t=I.D5U.toTypedArray([0],s.dtype),[r,a]=Cu(((e,t)=>e!==t?1:0))(s.shape,[],e,t,"bool");return n.makeTensorInfo(a,"bool",r)}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${a}`)}const ju={kernelName:I.RFZ,backendName:"cpu",kernelFunc:Hu};function Xu(e,t,n,r){return null==n?({inputs:n,backend:s})=>{const{a:a,b:o}=n,i=s;gu([a,o],e);const u=i.data.get(a.dataId).values,l=i.data.get(o.dataId).values,c="string"===a.dtype?I.Wap.fromUint8ToStringArray(u):u,p="string"===a.dtype?I.Wap.fromUint8ToStringArray(l):l,h=r||a.dtype,[d,f]=t(a.shape,o.shape,c,p,h);return i.makeTensorInfo(f,h,d)}:({inputs:e,backend:s})=>{const{a:a,b:o}=e,i=s;if("complex64"===a.dtype||"complex64"===o.dtype){const e=Hu({inputs:{x:a},backend:i,attrs:{dtype:"complex64"}}),t=i.data.get(e.dataId),r=t.complexTensorInfos.real,s=t.complexTensorInfos.imag,u=i.data.get(r.dataId).values,l=i.data.get(s.dataId).values,c=Hu({inputs:{x:o},backend:i,attrs:{dtype:"complex64"}}),p=i.data.get(c.dataId),h=p.complexTensorInfos.real,d=p.complexTensorInfos.imag,f=i.data.get(h.dataId).values,m=i.data.get(d.dataId).values,[g,y,b]=n(a.shape,o.shape,u,l,f,m),x=i.makeTensorInfo(b,"float32",g),w=i.makeTensorInfo(b,"float32",y),v=zu({inputs:{real:x,imag:w},backend:i});return i.disposeIntermediateTensorInfo(e),i.disposeIntermediateTensorInfo(c),i.disposeIntermediateTensorInfo(x),i.disposeIntermediateTensorInfo(w),v}{const e=i.data.get(a.dataId).values,n=i.data.get(o.dataId).values,s=r||a.dtype,[u,l]=t(a.shape,o.shape,e,n,s);return i.makeTensorInfo(l,s,u)}}}function qu(e){return(t,n,r,s,a,o)=>{const i=I.Wap.assertAndGetBroadcastShape(t,n),u=I.D5U.sizeFromShape(i),l=i.length,c=I.D5U.computeStrides(i),p=I.D5U.getTypedArrayFromDType("float32",u),h=I.D5U.getTypedArrayFromDType("float32",u),d=I.Wap.getBroadcastDims(t,i),f=I.Wap.getBroadcastDims(n,i),m=I.Wap.mergeRealAndImagArrays(r,s),g=I.Wap.mergeRealAndImagArrays(a,o),y=t.length,b=I.D5U.computeStrides(t),x=n.length,w=I.D5U.computeStrides(n);if(d.length+f.length===0)for(let v=0;v<p.length;v++){const t=v%m.length,n=v%g.length,r=e(m[2*t],m[2*t+1],g[2*n],g[2*n+1]);p[v]=r.real,h[v]=r.imag}else for(let v=0;v<p.length;v++){const t=I.D5U.indexToLoc(v,l,c),n=t.slice(-y);d.forEach((e=>n[e]=0));const r=I.D5U.locToIndex(n,y,b),s=t.slice(-x);f.forEach((e=>s[e]=0));const a=I.D5U.locToIndex(s,x,w),o=e(m[2*r],m[2*r+1],g[2*a],g[2*a+1]);p[v]=o.real,h[v]=o.imag}return[p,h,i]}}const Ku=Cu(((e,t)=>e+t)),Qu=qu(((e,t,n,r)=>({real:e+n,imag:t+r}))),Zu=Xu(I.mm_,Ku,Qu),Yu={kernelName:I.mm_,backendName:"cpu",kernelFunc:Zu};function Ju(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,o=I.D5U.sizeFromShape(s.shape),i=I.D5U.inferFromImplicitShape(a,o),u=I.D5U.sizeFromShape(i);I.D5U.assert(o===u,(()=>`The new shape (${i}) has ${u} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const l=n.data.get(s.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=i,t.shape=i}return{dataId:s.dataId,shape:i,dtype:s.dtype}}const el={kernelName:I.HZH,backendName:"cpu",kernelFunc:Ju};function tl(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:o,transposeB:i}=r;gu([s,a],"matMul");const u=s.shape.length,l=a.shape.length,c=o?s.shape[u-2]:s.shape[u-1],p=i?a.shape[l-1]:a.shape[l-2],h=o?s.shape[u-1]:s.shape[u-2],d=i?a.shape[l-2]:a.shape[l-1],f=s.shape.slice(0,-2),m=a.shape.slice(0,-2),g=I.D5U.sizeFromShape(f),y=I.D5U.sizeFromShape(m),b=I.Jyw.assertAndGetBroadcastShape(s.shape.slice(0,-2),a.shape.slice(0,-2)).concat([h,d]);I.D5U.assert(c===p,(()=>`Error in matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${o} and transposeB=${i} must match.`));const x=i?[y,d,p]:[y,p,d],w=Ju({inputs:{x:s},backend:n,attrs:{shape:o?[g,c,h]:[g,h,c]}}),v=Ju({inputs:{x:a},backend:n,attrs:{shape:x}}),k=o?w.shape[1]:w.shape[2],N=o?w.shape[2]:w.shape[1],S=i?v.shape[1]:v.shape[2],T=Math.max(g,y),C=n.data.get(w.dataId).values,E=n.data.get(v.dataId).values,A=I.D5U.computeStrides(w.shape),$=I.D5U.computeStrides(v.shape),[D,_,F]=o?[A[0],1,A[1]]:[A[0],A[1],1],[R,O,M]=i?[1,$[1],$[0]]:[$[1],1,$[0]],B=N*S,L=(0,I.f3b)([T,N,S],w.dtype),W=L.values,z=n.blockSize;for(let I=0;I<T;I++)for(let e=0;e<N;e+=z)for(let t=0;t<S;t+=z)for(let n=0;n<k;n+=z){const r=Math.min(e+z,N),s=Math.min(t+z,S),a=Math.min(n+z,k);for(let o=e;o<r;o++)for(let e=t;e<s;e++){let t=0;for(let r=n;r<a;r++){const n=Math.min(I,g-1)*D,s=Math.min(I,y-1)*M;t+=C[n+o*_+r*F]*E[r*R+e*O+s]}W[I*B+(o*S+e)]+=t}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(v),n.makeTensorInfo(b,L.dtype,L.values)}const nl={kernelName:I.XLW,backendName:"cpu",kernelFunc:tl};const rl={kernelName:I.usg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:p}=r;let h,d,f;const m=[];h=tl({inputs:{a:s,b:a},attrs:{transposeA:u,transposeB:l},backend:n}),o&&(d=Zu({inputs:{a:h,b:o},backend:n}),m.push(h),h=d),c&&(f=Wu(n,h,c,i,p),m.push(h),h=f);for(const g of m)n.disposeIntermediateTensorInfo(g);return h}};function sl(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const al={kernelName:I.SYM,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;gu(t,"abs");let r=new Float32Array(I.D5U.sizeFromShape(t.shape));return r=sl(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}},ol=xu(I.VGw,(e=>Math.acos(e))),il={kernelName:I.VGw,backendName:"cpu",kernelFunc:ol},ul=xu(I.SpW,(e=>Math.acosh(e))),ll={kernelName:I.SpW,backendName:"cpu",kernelFunc:ul};const cl={kernelName:I.Xze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;gu(t,"addN");const s=r.map((e=>n.data.get(e.dataId).values)),a=(0,I.f3b)(r[0].shape,r[0].dtype),o=a.values;for(let i=0;i<r.length;i++){const e=s[i];for(let t=0;t<o.length;t++)o[t]+=e[t]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}};function pl(e,t,n,r,s){const a=t.length,o=I.D5U.sizeFromShape(t),i=I.D5U.computeStrides(t),u=I.D5U.computeStrides(s),l=I.D5U.getTypedArrayFromDType(n,I.D5U.sizeFromShape(s));for(let c=0;c<o;++c){const t=I.D5U.indexToLoc(c,a,i),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[r[e]];l[I.D5U.locToIndex(n,a,u)]=e[c]}return l}function hl(e){const{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{perm:a}=n;gu(s,"transpose");const o=s.shape.length,i=new Array(o);for(let l=0;l<i.length;l++)i[l]=s.shape[a[l]];const u=pl(r.data.get(s.dataId).values,s.shape,s.dtype,a,i);return{dataId:r.write(u,i,s.dtype),shape:i,dtype:s.dtype}}const dl={kernelName:I.G3Y,backendName:"cpu",kernelFunc:hl};const fl={kernelName:I.oT6,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;gu(s,"all");const i=I.D5U.parseAxisParam(a,s.shape);let u=i;const l=I.Wap.getAxesPermutation(u,s.shape.length);let c=s;null!=l&&(c=hl({inputs:{x:s},backend:n,attrs:{perm:l}}),u=I.Wap.getInnerMostAxes(u.length,s.shape.length)),I.Wap.assertAxesAreInnerMostDims("all",u,c.shape.length);const[p,h]=I.Wap.computeOutAndReduceShapes(c.shape,u),d=I.D5U.sizeFromShape(h),f=I.D5U.makeZerosTypedArray(I.D5U.sizeFromShape(p),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const e=y*d;let t=m[e];for(let n=0;n<d;++n){const r=m[e+n];t=t&&r}f[y]=t}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(p,c.dtype,f);if(o){const e=Ju({inputs:{x:g},backend:n,attrs:{shape:I.Wap.expandShapeToKeepDim(p,i)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const ml={kernelName:I.IKK,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;gu(s,"any");const i=I.D5U.parseAxisParam(a,s.shape);let u=i;const l=I.Wap.getAxesPermutation(u,s.shape.length);let c=s;null!=l&&(c=hl({inputs:{x:s},backend:n,attrs:{perm:l}}),u=I.Wap.getInnerMostAxes(u.length,s.shape.length)),I.Wap.assertAxesAreInnerMostDims("any",u,c.shape.length);const[p,h]=I.Wap.computeOutAndReduceShapes(c.shape,u),d=I.D5U.sizeFromShape(h),f=I.D5U.makeZerosTypedArray(I.D5U.sizeFromShape(p),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const e=y*d;let t=m[e];for(let n=0;n<d;++n){const r=m[e+n];t=t||r}f[y]=t}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(p,c.dtype,f);if(o){const e=Ju({inputs:{x:g},backend:n,attrs:{shape:I.Wap.expandShapeToKeepDim(p,i)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const gl={kernelName:I.sJF,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;gu(s,"argMax");let o=I.D5U.parseAxisParam(a,s.shape);const i=I.Wap.getAxesPermutation(o,s.shape.length);let u=s;const l=[];null!=i&&(u=hl({inputs:{x:s},backend:n,attrs:{perm:i}}),l.push(u),o=I.Wap.getInnerMostAxes(o.length,u.shape.length)),o=[o[0]],I.Wap.assertAxesAreInnerMostDims("argMax",o,u.shape.length);const[c,p]=I.Wap.computeOutAndReduceShapes(u.shape,o),h=I.D5U.sizeFromShape(c),d=I.D5U.makeZerosTypedArray(h,"int32"),f=I.D5U.sizeFromShape(p),m=n.data.get(u.dataId).values;for(let g=0;g<d.length;++g){const e=g*f;let t=m[e],n=0;for(let r=0;r<f;++r){const s=m[e+r];s>t&&(t=s,n=r)}d[g]=n}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}};const yl={kernelName:I.aJk,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;gu(s,"argMin");let o=I.D5U.parseAxisParam(a,s.shape);const i=I.Wap.getAxesPermutation(o,s.shape.length);let u=s;const l=[];null!=i&&(u=hl({inputs:{x:s},backend:n,attrs:{perm:i}}),l.push(u),o=I.Wap.getInnerMostAxes(o.length,u.shape.length)),o=[o[0]],I.Wap.assertAxesAreInnerMostDims("argMin",o,u.shape.length);const[c,p]=I.Wap.computeOutAndReduceShapes(u.shape,o),h=I.D5U.sizeFromShape(c),d=I.D5U.makeZerosTypedArray(h,"int32"),f=I.D5U.sizeFromShape(p),m=n.data.get(u.dataId).values;for(let g=0;g<d.length;++g){const e=g*f;let t=m[e],n=0;for(let r=0;r<f;++r){const s=m[e+r];s<t&&(t=s,n=r)}d[g]=n}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},bl=xu(I.M2y,(e=>Math.asin(e))),xl={kernelName:I.M2y,backendName:"cpu",kernelFunc:bl},wl=xu(I.qw7,(e=>Math.asinh(e))),vl={kernelName:I.qw7,backendName:"cpu",kernelFunc:wl},kl=xu(I.jMg,(e=>Math.atan(e))),Il={kernelName:I.jMg,backendName:"cpu",kernelFunc:kl},Nl=Cu(((e,t)=>Math.atan2(e,t))),Sl=Xu(I.QCc,Nl),Tl={kernelName:I.QCc,backendName:"cpu",kernelFunc:Sl},Cl=xu(I.Oyi,(e=>Math.atanh(e))),El={kernelName:I.Oyi,backendName:"cpu",kernelFunc:Cl};function Al(e,t,n,r,s,a){const o=s.strideHeight,i=s.strideWidth,u=s.dilationHeight,l=s.dilationWidth,c=s.effectiveFilterHeight,p=s.effectiveFilterWidth,h=s.padInfo.top,d=s.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=(0,I.f3b)(s.outShape,n),g=m.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],b=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let w=0;w<s.batchSize;++w){const t=w*y,n=w*r[0];for(let m=0;m<s.inChannels;++m)for(let y=0;y<s.outHeight;++y){const w=y*o-h,v=Math.max(0,w),k=Math.min(s.inHeight,c+w),I=t+y*b;for(let t=0;t<s.outWidth;++t){const o=t*i-d,c=Math.max(0,o),h=Math.min(s.inWidth,p+o);let y=f,b=0,w=0;for(let t=v;t<k;t+=u){const s=n+t*r[1];for(let t=c;t<h;t+=l){const n=e[s+t*r[2]+m];"max"===a&&n>y?y=n:"avg"===a&&(b+=n,w++)}if(isNaN(y))break}g[I+t*x+m]="avg"===a?b/w:y}}}return m}function $l(e,t,n,r,s=!1,a=!1){const o=(0,I.f3b)(r.outShape,"int32"),i=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,p=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=r.padInfo.top,f=r.padInfo.left,m=(0,I.f3b)(t,n,e);for(let g=0;g<r.batchSize;++g)for(let e=0;e<r.inChannels;++e)for(let t=0;t<r.outHeight;++t){const n=t*i-d;let y=n;for(;y<0;)y+=l;const b=Math.min(r.inHeight,p+n);for(let i=0;i<r.outWidth;++i){const p=i*u-f;let d=p;for(;d<0;)d+=c;const x=Math.min(r.inWidth,h+p);let w=Number.NEGATIVE_INFINITY,v=-1;for(let t=y;t<b;t+=l){const o=t-n;for(let n=d;n<x;n+=c){const i=n-p,u=m.get(g,t,n,e);u>w&&(w=u,v=s?a?((g*r.inHeight+t)*r.inWidth+n)*r.inChannels+e:(t*r.inWidth+n)*r.inChannels+e:o*h+i)}}o.set(v,g,t,i,e)}}return o}function Dl(e,t,n,r,s,a){const o=s.strideDepth,i=s.strideHeight,u=s.strideWidth,l=s.dilationDepth,c=s.dilationHeight,p=s.dilationWidth,h=s.effectiveFilterDepth,d=s.effectiveFilterHeight,f=s.effectiveFilterWidth,m=s.padInfo.front,g=s.padInfo.top,y=s.padInfo.left,b="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=(0,I.f3b)(s.outShape,n),w=x.values,v=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[2]*s.outShape[3]*s.outShape[4],N=s.outShape[3]*s.outShape[4],S=s.outShape[4];for(let I=0;I<s.batchSize;++I){const t=I*v,n=I*r[0];for(let x=0;x<s.inChannels;++x)for(let v=0;v<s.outDepth;++v){const I=v*o-m;let T=I;for(;T<0;)T+=l;const C=Math.min(s.inDepth,h+I),E=t+v*k;for(let t=0;t<s.outHeight;++t){const o=t*i-g;let h=o;for(;h<0;)h+=c;const m=Math.min(s.inHeight,d+o),v=E+t*N;for(let t=0;t<s.outWidth;++t){const o=t*u-y;let i=o;for(;i<0;)i+=p;const d=Math.min(s.inWidth,f+o),g=v+t*S;let k=b,I=0,N=0;for(let t=T;t<C;t+=l){const s=n+t*r[1];for(let t=h;t<m;t+=c){const n=s+t*r[2];for(let t=i;t<d;t+=p){const s=e[n+t*r[3]+x];if("max"===a&&s>k?k=s:"avg"===a&&(I+=s,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}w[g+x]="avg"===a?I/N:k}}}}return x}const _l={kernelName:I.JhU,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;gu(s,"avgPool");const{filterSize:a,strides:o,pad:i,dimRoundingMode:u}=r;I.D5U.assert(I.Wap.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const l=I.Wap.computePool2DInfo(s.shape,a,o,1,i,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&I.D5U.arraysEqual(l.inShape,l.outShape))c=Iu({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=I.D5U.computeStrides(s.shape),r=Al(e,s.shape,s.dtype,t,l,"avg");c=n.makeTensorInfo(l.outShape,s.dtype,r.values)}return c}};const Fl={kernelName:I._k9,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:u,dataFormat:l}=r;gu(s,"avgPool3d");const c=I.Wap.computePool3DInfo(s.shape,a,o,1,i,u,l),p=Dl(n.data.get(s.dataId).values,s.shape,s.dtype,I.D5U.computeStrides(s.shape),c,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}};const Rl={kernelName:I.IMb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:o,strides:i,pad:u,dimRoundingMode:l}=r;gu([s,a],"avgPool3DGrad");const c=I.Wap.computePool3DInfo(a.shape,o,i,1,u,l),p=c.strideDepth,h=c.strideHeight,d=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,x=c.dilationWidth,w=c.effectiveFilterDepth,v=c.effectiveFilterHeight,k=c.effectiveFilterWidth,N=w-1-c.padInfo.front,S=k-1-c.padInfo.left,T=v-1-c.padInfo.top,C=(0,I.f3b)(a.shape,"float32"),E=1/(f*m*g),A=n.bufferSync(s);for(let I=0;I<c.batchSize;++I)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inDepth;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=t-N,a=n-T,o=r-S;let i=0;for(let t=0;t<w;t+=y){const n=(s+t)/p;if(!(n<0||n>=c.outDepth||Math.floor(n)!==n))for(let t=0;t<v;t+=b){const r=(a+t)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let t=0;t<k;t+=x){const s=(o+t)/d;if(s<0||s>=c.outWidth||Math.floor(s)!==s)continue;i+=A.get(I,n,r,s,e)}}}C.set(i*E,I,t,n,r,e)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}};const Ol={kernelName:I.ROF,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,o=a;gu([s,a],"avgPoolGrad");const{filterSize:i,strides:u,pad:l}=r,c=I.Wap.computePool2DInfo(o.shape,i,u,1,l),p=c.strideHeight,h=c.strideWidth,d=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,w=y-1-c.padInfo.top,v=(0,I.f3b)(o.shape,"float32"),k=1/(d*f),N=n.data.get(s.dataId).values,S=(0,I.f3b)(s.shape,"float32",N);for(let I=0;I<c.batchSize;++I)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inHeight;++t)for(let n=0;n<c.inWidth;++n){const r=t-w,s=n-x;let a=0;for(let t=0;t<y;t+=m){const n=(r+t)/p;if(!(n<0||n>=c.outHeight||Math.floor(n)!==n))for(let t=0;t<b;t+=g){const r=(s+t)/h;if(r<0||r>=c.outWidth||Math.floor(r)!==r)continue;a+=S.get(I,n,r,e)}}v.set(a*k,I,t,n,e)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const Ml={kernelName:I.sHE,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,scale:a,offset:o,mean:i,variance:u}=t;I.D5U.assert(i.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),I.D5U.assert(null==o||i.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),I.D5U.assert(null==a||i.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),gu([s,i,u,a,o],"batchNorm");let{varianceEpsilon:l}=r;null==l&&(l=.001);const c=n.data.get(s.dataId).values,p=n.data.get(i.dataId).values,h=n.data.get(u.dataId).values,d=a?n.data.get(a.dataId).values:new Float32Array([1]),f=o?n.data.get(o.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=d.length,b=h.length,x=p.length;let w=0,v=0,k=0,N=0;for(let I=0;I<c.length;++I)m[I]=f[w++]+(c[I]-p[v++])*d[k++]/Math.sqrt(h[N++]+l),w>=g&&(w=0),v>=x&&(v=0),k>=y&&(k=0),N>=b&&(N=0);return n.makeTensorInfo(s.shape,s.dtype,m)}};function Bl(e,t,n,r,s){const a=I.kuN.isSliceContinous(r,t,n),o=I.D5U.sizeFromShape(n),i=I.D5U.computeStrides(r);if(a){const n=I.kuN.computeFlatOffset(t,i);return"string"===s?e.slice(n,n+o):e.subarray(n,n+o)}const u="string"===s?I.Wap.fromUint8ToStringArray(e):e,l=(0,I.f3b)(r,s,u),c=(0,I.f3b)(n,s);for(let p=0;p<c.size;++p){const e=c.indexToLoc(p),n=e.map(((e,n)=>e+t[n]));c.set(l.get(...n),...e)}return"string"===s?I.Wap.fromStringArrayToUint8(c.values):c.values}function Ll(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:o}=r;gu(s,"slice");const[i,u]=I.kuN.parseSliceParams(s,a,o);I.kuN.assertParamsValid(s,i,u);const l=Bl(n.data.get(s.dataId).values,i,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,l)}const Wl={kernelName:I.p2w,backendName:"cpu",kernelFunc:Ll};const zl={kernelName:I.zws,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:o}=r;gu([s],"batchToSpaceND");const i=a.reduce(((e,t)=>e*t)),u=I.Wap.getReshaped(s.shape,a,i),l=I.Wap.getPermuted(u.length,a.length),c=I.Wap.getReshapedPermuted(s.shape,a,i),p=I.Wap.getSliceBeginCoords(o,a.length),h=I.Wap.getSliceSize(c,o,a.length),d=Ju({inputs:{x:s},backend:n,attrs:{shape:u}}),f=hl({inputs:{x:d},backend:n,attrs:{perm:l}}),m=Ju({inputs:{x:f},backend:n,attrs:{shape:c}}),g=Ll({inputs:{x:m},backend:n,attrs:{begin:p,size:h}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function Pl(e,t,n,r,s){const a=I.D5U.sizeFromShape(r),o=I.D5U.makeZerosTypedArray(s,n);for(let i=0;i<e.length;i++){const n=e[i];if(n<0)throw new Error("Input x must be non-negative!");n>=s||(o[n]+=a>0?t[i]:1)}return o}function Ul(e,t,n,r=!1){const s=e.shape[0],a=e.shape[1],o=(0,I.f3b)([s,n],t.dtype);for(let i=0;i<s;i++)for(let s=0;s<a;s++){const a=e.get(i,s);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(r?o.set(1,i,a):t.size>0?o.set(o.get(i,a)+t.get(i,s),i,a):o.set(o.get(i,a)+1,i,a))}return o}const Vl={kernelName:I.zvY,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:o}=r,i=Pl(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,i)}};const Gl={kernelName:I.eEB,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,i=I.Wap.assertAndGetBroadcastShape(Array.from(a),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}},Hl=Ou((e=>Math.ceil(e))),jl=wu(I.gJX,Hl),Xl={kernelName:I.gJX,backendName:"cpu",kernelFunc:jl},ql=xu(I.xnO,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),Kl={kernelName:I.xnO,backendName:"cpu",kernelFunc:ql},Ql={kernelName:I.yj2,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(I.D5U.sizeFromShape(t.shape)),s=n.data.get(t.dataId),a=s.complexTensorInfos.real,o=s.complexTensorInfos.imag,i=n.data.get(a.dataId).values,u=n.data.get(o.dataId).values;for(let l=0;l<i.length;l++){const e=i[l],t=u[l];r[l]=Math.hypot(e,t)}return n.makeOutput(r,t.shape,"float32")}};function Zl(e,t,n,r){const s=I.D5U.getArrayFromDType(n,I.D5U.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=I.D5U.sizeFromShape(e.shape);s.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const a="string"===n?I.Wap.fromUint8ToStringArray(e.vals):e.vals;let o=0;for(let n=0;n<e.shape[0];++n){const i=n*t[1]+r;for(let t=0;t<e.shape[1];++t)s[i+t]=a[o++]}r+=e.shape[1]}))}return s}function Yl(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.imag,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const Jl={kernelName:I.J_u,backendName:"cpu",kernelFunc:Yl};function ec(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=I.D5U.parseAxisParam(s,t[0].shape)[0];let o=I.Wap.computeOutShape(t.map((e=>e.shape)),a);if(0===I.D5U.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);const i=t.filter((e=>I.D5U.sizeFromShape(e.shape)>0));if(1===i.length)return Iu({inputs:{x:i[0]},backend:n});const u=i.map((e=>e.shape));if(I.Wap.assertParamsConsistent(u,a),"complex64"===i[0].dtype){const e=i.map((e=>Vu({inputs:{input:e},backend:n}))),t=i.map((e=>Yl({inputs:{input:e},backend:n}))),r=ec({inputs:e,backend:n,attrs:{axis:a}}),s=ec({inputs:t,backend:n,attrs:{axis:a}}),o=zu({inputs:{real:r,imag:s},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),o}const l=i.map((e=>{const t=I.D5U.sizeFromShape(e.shape.slice(a));return Ju({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),c=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));o=I.Wap.computeOutShape(l.map((e=>e.shape)),1);const p=1===l[0].shape[0],h=Zl(c,o,t[0].dtype,p),d=I.Wap.computeOutShape(i.map((e=>e.shape)),a),f=n.makeTensorInfo(d,t[0].dtype,h);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}const tc={kernelName:I.Eh3,backendName:"cpu",kernelFunc:ec};function nc(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dataFormat:u,dilations:l,dimRoundingMode:c}=r;gu([s,a],"conv2d");const p=I.Wap.convertConv2DDataFormat(u),h=I.Wap.computeConv2DInfo(s.shape,a.shape,o,l,i,c,!1,p),d=h.filterHeight,f=h.filterWidth,m=h.dilationHeight,g=h.dilationWidth,y=h.padInfo.left,b=h.padInfo.top,x="channelsLast"===h.dataFormat,w=new I.YDk(h.outShape,s.dtype),v=I.D5U.computeStrides(s.shape),k=I.D5U.computeStrides(a.shape),N=v[0],S=x?v[1]:v[2],T=x?v[2]:1,C=x?1:v[1],E=w.strides[0],A=x?w.strides[1]:w.strides[2],$=x?w.strides[2]:1,D=x?1:w.strides[1],_=n.data.get(s.dataId).values,F=n.data.get(a.dataId).values,R=w.values;for(let I=0;I<h.batchSize;++I){const e=I*N,t=I*E;for(let n=0;n<h.outHeight;++n){const r=t+n*A,s=n*h.strideHeight-b;for(let t=0;t<d;++t){const n=s+t*m;if(n<0||n>=h.inHeight)continue;const a=t*k[0],o=e+n*S;for(let e=0;e<h.outWidth;++e){const t=r+e*$,n=e*h.strideWidth-y;for(let e=0;e<f;++e){const r=n+e*g;if(r<0||r>=h.inWidth)continue;const s=o+r*T;let i=a+e*k[1];for(let e=0;e<h.inChannels;++e){const n=_[s+e*C];for(let e=0;e<h.outChannels;++e)R[t+e*D]+=n*F[i+e];i+=h.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,R)}const rc={kernelName:I.mhS,backendName:"cpu",kernelFunc:nc};const sc={kernelName:I.wUP,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,pad:i,dataFormat:u,dimRoundingMode:l,filterShape:c}=r;gu([s,a],"conv2dBackpropFilter");const p=I.Wap.convertConv2DDataFormat(u),h=I.Wap.computeConv2DInfo(s.shape,c,o,1,i,l,!1,p),{strideHeight:d,strideWidth:f,filterHeight:m,filterWidth:g}=h,y="channelsLast"===h.dataFormat,b=new I.YDk(h.filterShape,"float32"),x=h.padInfo.left,w=h.padInfo.top,v=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,N=new I.YDk(s.shape,s.dtype,v),S=new I.YDk(a.shape,a.dtype,k);for(let I=0;I<m;++I){const e=Math.max(0,Math.ceil((w-I)/d)),t=Math.min(h.outHeight,(h.inHeight+w-I)/d);for(let n=0;n<g;++n){const r=Math.max(0,Math.ceil((x-n)/f)),s=Math.min(h.outWidth,(h.inWidth+x-n)/f);for(let a=0;a<h.inChannels;++a)for(let o=0;o<h.outChannels;++o){let i=0;for(let u=0;u<h.batchSize;++u)for(let l=e;l<t;++l){const e=I+l*d-w;for(let t=r;t<s;++t){const r=n+t*f-x;i+=y?N.get(u,e,r,a)*S.get(u,l,t,o):N.get(u,a,e,r)*S.get(u,o,l,t)}}b.set(i,I,n,a,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const ac={kernelName:I.wm,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:o,strides:i,pad:u,dataFormat:l,dimRoundingMode:c}=r;gu([s,a],"conv2dBackpropInput");const p=I.D5U.computeStrides(a.shape),h=I.D5U.computeStrides(s.shape);let d=I.Wap.convertConv2DDataFormat(l);const f=I.Wap.computeConv2DInfo(o,a.shape,i,1,u,c,!1,d),m=new I.YDk(f.inShape,"float32"),g=m.values,y=n.data.get(s.dataId).values,b=n.data.get(a.dataId).values,[x,w,v]=p,{batchSize:k,filterHeight:N,filterWidth:S,inChannels:T,inHeight:C,inWidth:E,outChannels:A,outHeight:$,outWidth:D,strideHeight:_,strideWidth:F}=f;d=f.dataFormat;const R=N-1-f.padInfo.top,O=S-1-f.padInfo.left,M="channelsLast"===d,B=m.strides[0],L=M?m.strides[1]:m.strides[2],W=M?m.strides[2]:1,z=M?1:m.strides[1],P=h[0],U=M?h[1]:h[2],V=M?h[2]:1,G=M?1:h[1];for(let I=0;I<k;++I)for(let e=0;e<T;++e)for(let t=0;t<C;++t){const n=t-R,r=Math.max(0,Math.ceil(n/_)),s=Math.min($,(N+n)/_);for(let a=0;a<E;++a){const o=a-O,i=Math.max(0,Math.ceil(o/F)),u=Math.min(D,(S+o)/F);let l=0;for(let t=r;t<s;++t){const r=t*_-n;for(let n=i;n<u;++n){const s=P*I+U*t+V*n,a=x*(N-1-r)+w*(S-1-(n*F-o))+v*e;for(let e=0;e<A;++e){l+=y[s+G*e]*b[a+e]}}}g[B*I+L*t+W*a+z*e]=l}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const oc={kernelName:I.x12,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:u}=r;gu([s,a],"conv3d");const l=I.Wap.computeConv3DInfo(s.shape,a.shape,o,u,i),{filterDepth:c,filterHeight:p,filterWidth:h,dilationDepth:d,dilationHeight:f,dilationWidth:m,padInfo:g}=l,y=g.front,b=g.left,x=g.top,w=new I.YDk(l.outShape,s.dtype),v=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,N=w.values,S=I.D5U.computeStrides(s.shape),T=I.D5U.computeStrides(a.shape);for(let I=0;I<l.batchSize;++I){const e=I*S[0],t=I*w.strides[0];for(let n=0;n<l.outDepth;++n){const r=t+n*w.strides[1],s=n*l.strideDepth-y;for(let t=0;t<c;++t){const n=s+t*d;if(n<0||n>=l.inDepth)continue;const a=t*T[0],o=e+n*S[1];for(let e=0;e<l.outHeight;++e){const t=r+e*w.strides[2],n=e*l.strideHeight-x;for(let e=0;e<p;++e){const r=n+e*f;if(r<0||r>=l.inHeight)continue;const s=a+e*T[1],i=o+r*S[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,r=e*l.strideWidth-b;for(let e=0;e<h;++e){const t=r+e*m;if(t<0||t>=l.inWidth)continue;const a=s+e*T[2],o=i+t*l.inChannels;let u=a;for(let e=0;e<l.inChannels;++e){const t=v[o+e];for(let e=0;e<l.outChannels;++e)N[n+e]+=t*k[u+e];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const ic={kernelName:I.o2y,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,pad:i,filterShape:u}=r;gu([s,a],"conv3dBackpropFilterV2");const l=I.D5U.computeStrides(s.shape),c=I.D5U.computeStrides(a.shape),p=I.Wap.computeConv3DInfo(s.shape,u,o,1,i),h=p.strideDepth,d=p.strideHeight,f=p.strideWidth,m=p.filterDepth,g=p.filterHeight,y=p.filterWidth,b=new I.YDk(p.filterShape,"float32"),x=b.values,[w,v,k,N]=b.strides,S=n.data.get(a.dataId).values,[T,C,E,A]=c,$=n.data.get(s.dataId).values,[D,_,F,R]=l,O=p.padInfo.front,M=p.padInfo.left,B=p.padInfo.top;for(let I=0;I<m;++I){const e=Math.max(0,Math.ceil((O-I)/h)),t=Math.min(p.outDepth,(p.inDepth+O-I)/h),n=I*w;for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((B-r)/d)),a=Math.min(p.outHeight,(p.inHeight+B-r)/d),o=r*v+n;for(let n=0;n<y;++n){const i=Math.max(0,Math.ceil((M-n)/f)),u=Math.min(p.outWidth,(p.inWidth+M-n)/f),l=n*k+o;for(let o=0;o<p.inChannels;++o){const c=o*N+l;for(let l=0;l<p.outChannels;++l){let m=0;for(let c=0;c<p.batchSize;++c){const p=c*D,g=c*T;for(let c=e;c<t;++c){const e=(I+c*h-O)*_+p,t=c*C+g;for(let c=s;c<a;++c){const s=(r+c*d-B)*F+e,a=c*E+t;for(let e=i;e<u;++e){const t=e*A+a;m+=$[(n+e*f-M)*R+s+o]*S[t+l]}}}}x[c+l]=m}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const uc={kernelName:I.ik2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:o,strides:i,inputShape:u}=r;gu([s],"conv3dBackpropInputV2");const l=I.D5U.computeStrides(s.shape),c=I.D5U.computeStrides(a.shape),p=I.Wap.computeConv3DInfo(u,a.shape,i,1,o),h=new I.YDk(p.inShape,"float32"),d=h.values,[f,m,g,y]=h.strides,b=n.data.get(s.dataId).values,[x,w,v,k]=l,N=n.data.get(a.dataId).values,[S,T,C,E]=c,{batchSize:A,filterDepth:$,filterHeight:D,filterWidth:_,inChannels:F,inDepth:R,inHeight:O,inWidth:M,outChannels:B,outDepth:L,outHeight:W,outWidth:z,strideDepth:P,strideHeight:U,strideWidth:V}=p,G=$-1-p.padInfo.front,H=D-1-p.padInfo.top,j=_-1-p.padInfo.left;for(let I=0;I<A;++I)for(let e=0;e<F;++e)for(let t=0;t<R;++t){const n=t-G,r=Math.max(0,Math.ceil(n/P)),s=Math.min(L,($+n)/P);for(let a=0;a<O;++a){const o=a-H,i=Math.max(0,Math.ceil(o/U)),u=Math.min(W,(D+o)/U);for(let l=0;l<M;++l){const c=l-j,p=Math.max(0,Math.ceil(c/V)),h=Math.min(z,(_+c)/V);let A=0;for(let t=r;t<s;++t){const r=t*P-n;for(let n=i;n<u;++n){const s=n*U-o;for(let a=p;a<h;++a){const o=x*I+w*t+v*n+k*a,i=S*($-1-r)+T*(D-1-s)+C*(_-1-(a*V-c))+E*e;for(let e=0;e<B;++e){A+=b[o+e]*N[i+e]}}}}d[f*I+m*t+g*a+y*l+e]=A}}}return n.makeTensorInfo(h.shape,h.dtype,h.values)}},lc=xu(I.mc4,(e=>Math.cos(e))),cc={kernelName:I.mc4,backendName:"cpu",kernelFunc:lc},pc=xu(I.TR1,(e=>Math.cosh(e))),hc={kernelName:I.TR1,backendName:"cpu",kernelFunc:pc};const dc={kernelName:I.VcC,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:o}=t,{cropSize:i,method:u,extrapolationValue:l}=r,[c,p,h,d]=s.shape,f=a.shape[0],[m,g]=i,y=(0,I.f3b)([f,m,g,d],"float32"),b=n.data.get(a.dataId).values,x=n.data.get(o.dataId).values,w=n.data.get(s.dataId).values,v=I.D5U.computeStrides(s.shape),k=I.D5U.computeStrides(y.shape);for(let I=0;I<f;I++){const e=4*I,t=b[e],n=b[e+1],r=b[e+2],s=b[e+3],a=x[I];if(a>=c)continue;const o=m>1?(r-t)*(p-1)/(m-1):0,i=g>1?(s-n)*(h-1)/(g-1):0;for(let c=0;c<m;c++){const e=m>1?t*(p-1)+c*o:.5*(t+r)*(p-1);if(e<0||e>p-1)for(let t=0;t<g;t++)for(let e=0;e<d;e++){const n=e+t*k[2]+c*k[1]+I*k[0];y.values[n]=l}else if("bilinear"===u){const t=Math.floor(e),r=Math.ceil(e),o=e-t;for(let e=0;e<g;e++){const u=g>1?n*(h-1)+e*i:.5*(n+s)*(h-1);if(u<0||u>h-1){for(let t=0;t<d;t++){const n=t+e*k[2]+c*k[1]+I*k[0];y.values[n]=l}continue}const p=Math.floor(u),f=Math.ceil(u),m=u-p;for(let n=0;n<d;n++){let s=n+p*v[2]+t*v[1]+a*v[0];const i=w[s];s=n+f*v[2]+t*v[1]+a*v[0];const u=w[s];s=n+p*v[2]+r*v[1]+a*v[0];const l=w[s];s=n+f*v[2]+r*v[1]+a*v[0];const h=i+(u-i)*m,d=l+(w[s]-l)*m;s=n+e*k[2]+c*k[1]+I*k[0],y.values[s]=h+(d-h)*o}}}else for(let t=0;t<g;++t){const r=g>1?n*(h-1)+t*i:.5*(n+s)*(h-1);if(r<0||r>h-1){for(let e=0;e<d;e++){const n=e+t*k[2]+c*k[1]+I*k[0];y.values[n]=l}continue}const o=Math.round(r),u=Math.round(e);for(let e=0;e<d;e++){const n=e+o*v[2]+u*v[1]+a*v[0],r=e+t*k[2]+c*k[1]+I*k[0];y.values[r]=w[n]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const fc={kernelName:I.Byc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:o,reverse:i}=r;gu(s,"cumprod");const u=I.Wap.getAxesPermutation([a],s.shape.length);let l=s;null!=u&&(l=hl({inputs:{x:s},backend:n,attrs:{perm:u}}));const c=I.Wap.getInnerMostAxes(1,s.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const p=(0,I.x8V)(l.dtype,"int32"),h=I.D5U.makeOnesTypedArray(I.D5U.sizeFromShape(l.shape),p),d=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=i?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let y=0;y<d.length;y+=f)for(let e=0;e<f;e++){const t=m(y,e);if(0===e)h[t]=o?1:d[t];else{const n=m(y,e-1);h[t]=o?d[n]*h[n]:d[t]*h[n]}}const g=n.makeTensorInfo(l.shape,p,h);if(null!=u){const e=hl({inputs:{x:g},backend:n,attrs:{perm:I.Wap.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),e}return g}};const mc={kernelName:I.iHb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:o,reverse:i}=r;gu(s,"cumsum");const u=I.Wap.getAxesPermutation([a],s.shape.length);let l=s;null!=u&&(l=hl({inputs:{x:s},backend:n,attrs:{perm:u}}));const c=I.Wap.getInnerMostAxes(1,s.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const p=(0,I.x8V)(l.dtype,"int32"),h=I.D5U.makeZerosTypedArray(I.D5U.sizeFromShape(l.shape),p),d=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=i?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let y=0;y<d.length;y+=f)for(let e=0;e<f;e++){const t=m(y,e);if(0===e)h[t]=o?0:d[t];else{const n=m(y,e-1);h[t]=o?d[n]+h[n]:d[t]+h[n]}}const g=n.makeTensorInfo(l.shape,p,h);if(null!=u){const e=hl({inputs:{x:g},backend:n,attrs:{perm:I.Wap.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),e}return g}};const gc={kernelName:I.QRR,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:o,binaryOutput:i}=r;if(1===s.shape.length){const e=Pl(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,e)}if(2===s.shape.length){const e=Ul(n.bufferSync(s),n.bufferSync(a),o,i);return n.makeTensorInfo(e.shape,a.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};const yc={kernelName:I.T0n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:o}=r;I.D5U.assert("NHWC"===o,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`));const i=s.shape[0],u=s.shape[1],l=s.shape[2],c=s.shape[3],p=u*a,h=l*a,d=c/(a*a),f=n.data.get(s.dataId).values,m=new Float32Array(i*p*h*d);let g=0;for(let y=0;y<i;++y)for(let e=0;e<p;++e){const t=Math.floor(e/a),n=e%a;for(let e=0;e<h;++e){const r=Math.floor(e/a),s=(n*a+e%a)*d;for(let e=0;e<d;++e){const n=e+s+c*(r+l*(t+u*y));m[g++]=f[n]}}}return n.makeTensorInfo([i,p,h,d],s.dtype,m)}};function bc(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:u,dimRoundingMode:l}=r;gu([s,a],"depthwiseConv2DNative");const c=I.D5U.computeStrides(s.shape),p=I.D5U.computeStrides(a.shape);let h=u;null==h&&(h=[1,1]),I.D5U.assert(I.Wap.eitherStridesOrDilationsAreOne(o,h),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${h}'`));const d=I.Wap.computeConv2DInfo(s.shape,a.shape,o,h,i,l,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=d,x=b.left,w=b.top,v=d.outChannels/d.inChannels,k=new I.YDk(d.outShape,s.dtype),N=n.data.get(s.dataId).values,S=n.data.get(a.dataId).values,T=k.values;for(let I=0;I<d.batchSize;++I){const e=I*c[0],t=I*k.strides[0];for(let n=0;n<d.outHeight;++n){const r=t+n*k.strides[1],s=n*d.strideHeight-w;for(let t=0;t<f;++t){const n=s+t*g;if(n<0||n>=d.inHeight)continue;const a=t*p[0],o=e+n*c[1];for(let e=0;e<d.outWidth;++e){const t=r+e*k.strides[2],n=e*d.strideWidth-x;for(let e=0;e<m;++e){const r=n+e*y;if(r<0||r>=d.inWidth)continue;const s=a+e*p[1],i=o+r*d.inChannels;let u=t,l=s;for(let e=0;e<d.inChannels;++e){const t=N[i+e];for(let e=0;e<v;++e)T[u+e]+=t*S[l+e];u+=v,l+=v}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const xc={kernelName:I.cie,backendName:"cpu",kernelFunc:bc};const wc={kernelName:I.sL$,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,dilations:i,pad:u,dimRoundingMode:l,filterShape:c}=r;gu([s,a],"depthwiseConv2dNativeBackpropFilter");const p=I.Wap.computeConv2DInfo(s.shape,c,o,i,u,l,!0),{strideHeight:h,strideWidth:d,filterHeight:f,filterWidth:m}=p,g=new I.YDk(p.filterShape,"float32"),y=p.padInfo.left,b=p.padInfo.top,x=p.outChannels/p.inChannels,w=n.data.get(s.dataId).values,v=new I.YDk(s.shape,s.dtype,w),k=n.data.get(a.dataId).values,N=new I.YDk(a.shape,a.dtype,k);for(let I=0;I<f;++I){const e=Math.max(0,Math.ceil((b-I)/h)),t=Math.min(p.outHeight,(p.inHeight+b-I)/h);for(let n=0;n<m;++n){const r=Math.max(0,Math.ceil((y-n)/d)),s=Math.min(p.outWidth,(p.inWidth+y-n)/d);for(let a=0;a<p.outChannels;++a){const o=Math.trunc(a/x),i=a%x;let u=0;for(let l=0;l<p.batchSize;++l)for(let i=e;i<t;++i){const e=I+i*h-b;for(let t=r;t<s;++t){const r=n+t*d-y;u+=v.get(l,e,r,o)*N.get(l,i,t,a)}}g.set(u,I,n,o,i)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const vc={kernelName:I.y7R,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:o,dilations:i,pad:u,dimRoundingMode:l,inputShape:c}=r;gu([s,a],"depthwiseConv2DNativeBackpropInput");const p=I.D5U.computeStrides(s.shape),h=I.D5U.computeStrides(a.shape),d=I.Wap.computeConv2DInfo(c,a.shape,o,i,u,l,!0),f=new I.YDk(d.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(s.dataId).values,[w,v,k]=p,N=n.data.get(a.dataId).values,[S,T,C]=h,{batchSize:E,filterHeight:A,filterWidth:$,inChannels:D,inHeight:_,inWidth:F,outChannels:R,outHeight:O,outWidth:M,strideHeight:B,strideWidth:L}=d,W=A-1-d.padInfo.top,z=$-1-d.padInfo.left,P=R/D;for(let I=0;I<E;++I)for(let e=0;e<D;++e)for(let t=0;t<_;++t){const n=t-W,r=Math.max(0,Math.ceil(n/B)),s=Math.min(O,(A+n)/B);for(let a=0;a<F;++a){const o=a-z,i=Math.max(0,Math.ceil(o/L)),u=Math.min(M,($+o)/L);let l=0;for(let t=r;t<s;++t){const r=t*B-n;for(let n=i;n<u;++n){const s=w*I+v*t+k*n,a=S*(A-1-r)+T*($-1-(n*L-o))+C*e;for(let t=0;t<P;++t){l+=x[s+(e*P+t)]*N[a+t]}}}m[g*I+y*t+b*a+e]=l}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};const kc={kernelName:I.$w,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=I.D5U.sizeFromShape(r.shape),a=n.data.get(r.dataId).values,o=(0,I.f3b)([s,s],r.dtype),i=o.values;for(let l=0;l<a.length;l++)i[l*s+l]=a[l];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,o.dtype,o.values)}},Ic={kernelName:I.p4S,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s}=e,{strides:a,pad:o,dilations:i}=n,u=t,l=u.data.get(r.dataId).values,c=r.shape.length,p=u.data.get(s.dataId).values,h=s.shape.length,{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:N,dilationHeight:S,dilationWidth:T,outShape:C}=I.Wap.computeDilation2DInfo(r.shape,s.shape,a,o,"NHWC",i),E=I.D5U.sizeFromShape(C),A=C.length,$=I.D5U.getArrayFromDType(r.dtype,E);for(let D=0;D<d;++D)for(let e=0;e<y;++e){const t=e*w-x.top;for(let n=0;n<b;++n){const a=n*v-x.left;for(let o=0;o<g;++o){let i=Number.MIN_SAFE_INTEGER;for(let e=0;e<k;++e){const n=t+e*S;if(n>=0&&n<f)for(let t=0;t<N;++t){const u=a+t*T;if(u>=0&&u<m){const a=I.D5U.locToIndex([D,n,u,o],c,I.D5U.computeStrides(r.shape)),d=I.D5U.locToIndex([e,t,o],h,I.D5U.computeStrides(s.shape)),f=l[a]+p[d];f>i&&(i=f)}}}$[I.D5U.locToIndex([D,e,n,o],A,I.D5U.computeStrides(C))]=i}}}return{dataId:u.write(I.D5U.toTypedArray($,r.dtype),C,r.dtype),shape:C,dtype:r.dtype}}},Nc={kernelName:I.Vn9,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:o,pad:i,dilations:u}=n,l=t,c=I.D5U.toNestedArray(r.shape,l.data.get(r.dataId).values),p=I.D5U.toNestedArray(s.shape,l.data.get(s.dataId).values),{batchSize:h,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:N,dilationWidth:S,outShape:T}=I.Wap.computeDilation2DInfo(r.shape,s.shape,o,i,"NHWC",u);I.D5U.assert(a.rank===T.length,(()=>`Error in ${I.Vn9}, dy must have the same rank as output ${T.length}, but got ${a.rank}`));const C=I.D5U.toNestedArray(T,l.data.get(a.dataId).values),E=I.D5U.makeZerosNestedTypedArray(s.shape,s.dtype);for(let I=0;I<h;++I)for(let e=0;e<g;++e){const t=e*x-b.top;for(let n=0;n<y;++n){const r=n*w-b.left;for(let s=0;s<m;++s){let a=Number.MIN_SAFE_INTEGER,o=0,i=0;for(let e=0;e<v;++e){const n=t+e*N;if(n>=0&&n<d)for(let t=0;t<k;++t){const u=r+t*S;if(u>=0&&u<f){const r=c[I][n][u][s]+p[e][t][s];r>a&&(a=r,o=e,i=t)}}}E[o][i][s]+=C[I][e][n][s]}}}return{dataId:l.write(I.D5U.toTypedArray(E,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Sc={kernelName:I.ekb,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:o,pad:i,dilations:u}=n,l=t,c=I.D5U.toNestedArray(r.shape,l.data.get(r.dataId).values),p=I.D5U.toNestedArray(s.shape,l.data.get(s.dataId).values),{batchSize:h,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:N,dilationWidth:S,outShape:T}=I.Wap.computeDilation2DInfo(r.shape,s.shape,o,i,"NHWC",u);I.D5U.assert(a.rank===T.length,(()=>`Error in ${I.ekb}, dy must have the same rank as output ${T.length}, but got ${a.rank}`));const C=I.D5U.toNestedArray(T,l.data.get(a.dataId).values),E=I.D5U.makeZerosNestedTypedArray(r.shape,r.dtype);for(let I=0;I<h;++I)for(let e=0;e<g;++e){const t=e*x-b.top;for(let n=0;n<y;++n){const r=n*w-b.left;for(let s=0;s<m;++s){let a=Number.MIN_SAFE_INTEGER,o=t<0?0:t,i=r<0?0:r;for(let e=0;e<v;++e){const n=t+e*N;if(n>=0&&n<d)for(let t=0;t<k;++t){const u=r+t*S;if(u>=0&&u<f){const r=c[I][n][u][s]+p[e][t][s];r>a&&(a=r,o=n,i=u)}}}E[I][o][i][s]+=C[I][e][n][s]}}}return{dataId:l.write(I.D5U.toTypedArray(E,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Tc=Cu(((e,t)=>e*t)),Cc=qu(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),Ec=Xu(I.wYn,Tc,Cc),Ac={kernelName:I.wYn,backendName:"cpu",kernelFunc:Ec};function $c(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;let i;gu(s,"sum"),i="bool"===s.dtype?Hu({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):Iu({inputs:{x:s},backend:n});const u=i.shape.length,l=I.D5U.parseAxisParam(a,i.shape),c=I.Wap.getAxesPermutation(l,u);let p=l,h=i;null!=c&&(h=hl({inputs:{x:i},backend:n,attrs:{perm:c}}),p=I.Wap.getInnerMostAxes(p.length,u)),I.Wap.assertAxesAreInnerMostDims("sum",p,h.shape.length);const[d,f]=I.Wap.computeOutAndReduceShapes(h.shape,p);let m=Uu(n,d,I.Wap.upcastType(h.dtype,"int32"));const g=I.D5U.sizeFromShape(f),y=n.data.get(m.dataId).values,b=n.data.get(h.dataId).values;for(let x=0;x<y.length;++x){const e=x*g;let t=0;for(let n=0;n<g;++n)t+=b[e+n];y[x]=t}if(o){const e=m;m=Ju({inputs:{x:m},backend:n,attrs:{shape:I.Wap.expandShapeToKeepDim(m.shape,l)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(i),null!=c&&n.disposeIntermediateTensorInfo(h),m}const Dc={kernelName:I.GBy,backendName:"cpu",kernelFunc:$c};const _c={kernelName:I.$g6,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:o,summedDims:i,idDims:u}=I.Wap.decodeEinsumEquation(s,a.length);I.Wap.checkEinsumDimSizes(o.length,u,a);const{path:l,steps:c}=I.Wap.getEinsumComputePath(i,u),p=c.length;let h=null,d=o.length;const f=[];for(let m=0;m<p;++m){for(const e of c[m]){const{permutationIndices:t,expandDims:r}=I.Wap.getEinsumPermutation(d,u[e]);let s;I.Wap.isIdentityPermutation(t)?s=a[e]:(s=hl({inputs:{x:a[e]},backend:n,attrs:{perm:t}}),f.push(s));const o=s.shape.slice();for(let e=0;e<r.length;++e)o.splice(r[e],0,1);I.D5U.arraysEqual(s.shape,o)||(s=Ju({inputs:{x:s},backend:n,attrs:{shape:o}}),f.push(s)),null===h?h=s:(h=Ec({inputs:{a:s,b:h},backend:n}),f.push(h))}m<p-1&&(l[m]>=0&&(h=$c({inputs:{x:h},backend:n,attrs:{axis:l[m]-(o.length-d),keepDims:!1}}),f.push(h)),d--)}for(const m of f)m!==h&&n.disposeIntermediateTensorInfo(m);return h}};const Fc={kernelName:I.HEU,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:s}=t;gu([r,s],"eluGrad");const a=new Float32Array(I.D5U.sizeFromShape(s.shape)),o=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values;for(let u=0;u<o.length;++u){const e=o[u];a[u]=e>=1?i[u]:i[u]*(e+1)}return n.makeTensorInfo(s.shape,"float32",a)}},Rc=Cu(((e,t)=>e===t?1:0)),Oc=Xu(I.hdR,Rc,null,"bool"),Mc={kernelName:I.hdR,backendName:"cpu",kernelFunc:Oc},Bc=I.Wap.ERF_P,Lc=I.Wap.ERF_A1,Wc=I.Wap.ERF_A2,zc=I.Wap.ERF_A3,Pc=I.Wap.ERF_A4,Uc=I.Wap.ERF_A5,Vc=xu(I.Omj,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+Bc*n);return t*(1-((((Uc*r+Pc)*r+zc)*r+Wc)*r+Lc)*r*Math.exp(-n*n))})),Gc={kernelName:I.Omj,backendName:"cpu",kernelFunc:Vc},Hc=Ou((e=>Math.exp(e))),jc=wu(I.NEP,Hc,"float32"),Xc={kernelName:I.NEP,backendName:"cpu",kernelFunc:jc};function qc(e){const{inputs:t,backend:n,attrs:r}=e,{input:s}=t,{dim:a}=r,o=s.shape.length,i=s.shape.slice();let u=a;return a<0&&(I.D5U.assert(-(o+1)<=a,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),u=o+a+1),i.splice(u,0,1),Ju({inputs:{x:s},backend:n,attrs:{shape:i}})}const Kc={kernelName:I.YFo,backendName:"cpu",kernelFunc:qc},Qc=Ou((e=>Math.expm1(e))),Zc=wu(I.Y0y,Qc),Yc={kernelName:I.Y0y,backendName:"cpu",kernelFunc:Zc},Jc=Cu(((e,t)=>e/t)),ep=Xu(I.oHH,Jc),tp={kernelName:I.oHH,backendName:"cpu",kernelFunc:ep},np=Cu(((e,t)=>e-t)),rp=qu(((e,t,n,r)=>({real:e-n,imag:t-r}))),sp=Xu(I.Tr8,np,rp),ap={kernelName:I.Tr8,backendName:"cpu",kernelFunc:sp};function op(e,t,n){const r=e.shape,s=r[0],a=r[1],o=n.data.get(e.dataId),i=o.complexTensorInfos.real,u=o.complexTensorInfos.imag,l=[s,a],c=I.D5U.sizeFromShape(l),p=I.D5U.getTypedArrayFromDType("float32",c),h=I.D5U.getTypedArrayFromDType("float32",c);for(let g=0;g<s;g++){const e=Ll({inputs:{x:i},backend:n,attrs:{begin:[g,0],size:[1,a]}}),r=Ll({inputs:{x:u},backend:n,attrs:{begin:[g,0],size:[1,a]}}),s=zu({inputs:{real:e,imag:r},backend:n}),{real:o,imag:l}=ip(s,t,n),c=I.Wap.mergeRealAndImagArrays(o,l);for(let t=0;t<a;t++){const e=I.Wap.getComplexWithIndex(c,t);p[g*a+t]=e.real,h[g*a+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s)}const d=n.makeTensorInfo(l,"float32",p),f=n.makeTensorInfo(l,"float32",h),m=zu({inputs:{real:d,imag:f},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}function ip(e,t,n){const r=I.D5U.sizeFromShape(e.shape),s=n.data.get(e.dataId),a=n.data.get(s.complexTensorInfos.real.dataId).values,o=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0===((i=r)&i-1)){const s=up(a,o,r,t,n),i=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(i,"float32",s.real),t=n.makeTensorInfo(i,"float32",s.imag),a=n.makeTensorInfo([],"float32",I.D5U.createScalarValue(r,"float32")),o=Iu({inputs:{x:a},backend:n}),u=tp.kernelFunc({inputs:{a:e,b:a},backend:n}),l=tp.kernelFunc({inputs:{a:t,b:o},backend:n}),c=n.data.get(u.dataId).values,p=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),{real:c,imag:p}}return s}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let s=0;s<t;s++){let a=0,o=0;for(let r=0;r<t;r++){const i=I.Wap.exponent(s*r,t,n),u=I.Wap.getComplexWithIndex(e,r);a+=u.real*i.real-u.imag*i.imag,o+=u.real*i.imag+u.imag*i.real}n&&(a/=t,o/=t),I.Wap.assignToTypedArray(r,a,o,s)}return r}(I.Wap.mergeRealAndImagArrays(a,o),r,t);return I.Wap.splitRealAndImagArrays(e)}var i}function up(e,t,n,r,s){if(1===n)return{real:e,imag:t};const a=I.Wap.mergeRealAndImagArrays(e,t),o=n/2,i=I.Wap.complexWithEvenIndex(a),u=i.real,l=i.imag,c=[u.length],p=s.makeTensorInfo(c,"float32",u),h=s.makeTensorInfo(c,"float32",l),d=zu({inputs:{real:p,imag:h},backend:s}),f=I.Wap.complexWithOddIndex(a),m=f.real,g=f.imag,y=[m.length],b=s.makeTensorInfo(y,"float32",m),x=s.makeTensorInfo(y,"float32",g),w=zu({inputs:{real:b,imag:x},backend:s}),v=up(u,l,o,r,s),k=v.real,N=v.imag,S=[k.length],T=s.makeTensorInfo(S,"float32",k),C=s.makeTensorInfo(S,"float32",N),E=zu({inputs:{real:T,imag:C},backend:s}),A=up(m,g,o,r,s),$=A.real,D=A.imag,_=[$.length],F=s.makeTensorInfo(_,"float32",$),R=s.makeTensorInfo(_,"float32",D),O=zu({inputs:{real:F,imag:R},backend:s}),M=I.Wap.exponents(n,r),B=[M.real.length],L=s.makeTensorInfo(B,"float32",M.real),W=s.makeTensorInfo(B,"float32",M.imag),z=zu({inputs:{real:L,imag:W},backend:s}),P=Ec({inputs:{a:z,b:O},backend:s}),U=Zu({inputs:{a:E,b:P},backend:s}),V=sp({inputs:{a:E,b:P},backend:s}),G=Vu({inputs:{input:U},backend:s}),H=Vu({inputs:{input:V},backend:s}),j=Yl({inputs:{input:U},backend:s}),X=Yl({inputs:{input:V},backend:s}),q=ec({inputs:[G,H],backend:s,attrs:{axis:0}}),K=ec({inputs:[j,X],backend:s,attrs:{axis:0}}),Q=s.data.get(q.dataId).values,Z=s.data.get(K.dataId).values;return s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(T),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(E),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(R),s.disposeIntermediateTensorInfo(O),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(X),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(K),{real:Q,imag:Z}}const lp={kernelName:I.vwp,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=I.D5U.sizeFromShape(r.shape),a=r.shape[r.shape.length-1],o=Ju({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),i=op(o,!1,n),u=Ju({inputs:{x:i},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),u}};function cp(e){const{backend:t,attrs:n}=e,{shape:r,value:s,dtype:a}=n,o=a||I.D5U.inferDtype(s),i=I.D5U.getArrayFromDType(o,I.D5U.sizeFromShape(r));return function(e,t,n){e.fill(t)}(i,s),t.makeTensorInfo(r,o,i)}const pp={kernelName:I.deh,backendName:"cpu",kernelFunc:cp};const hp={kernelName:I.Uyb,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,s=n,a=I.D5U.getTypedArrayFromDType(r.dtype,I.D5U.sizeFromShape(r.shape)),[o,i,u,l]=r.shape,c=s.data.get(r.dataId).values;for(let p=0;p<o;p++){const e=p*u*i*l;for(let t=0;t<i;t++){const n=t*(u*l);for(let t=0;t<u;t++){const r=t*l;for(let s=0;s<l;s++){const o=Math.round(u-t-1),i=e+n+r+s;let p=c[i];if(o>=0&&o<u){p=c[e+n+o*l+s]}a[i]=p}}}}return{dataId:s.write(a,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},dp=Ou((e=>Math.floor(e))),fp=wu(I.OR,dp),mp={kernelName:I.OR,backendName:"cpu",kernelFunc:fp},gp=Cu(((e,t)=>Math.floor(e/t))),yp=Xu(I.jeX,gp,null,"int32"),bp={kernelName:I.jeX,backendName:"cpu",kernelFunc:yp};const xp={kernelName:I._V0,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:h,activation:d,leakyreluAlpha:f}=r;let m=nc({inputs:{x:s,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:h}});if(o){const e=m;if("NCHW"===c&&1===o.shape.length&&1!==o.shape[0]){const e=Ju({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=Zu({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=Zu({inputs:{a:m,b:o},backend:n});n.disposeIntermediateTensorInfo(e)}if(d){const e=m;if("NCHW"===c&&"prelu"===d&&1===i.shape.length&&1!==i.shape[0]){const e=Ju({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=Wu(n,m,d,e,f),n.disposeIntermediateTensorInfo(e)}else m=Wu(n,m,d,i,f);n.disposeIntermediateTensorInfo(e)}return m}};const wp={kernelName:I.luS,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:h,activation:d,leakyreluAlpha:f}=r;let m=bc({inputs:{x:s,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:h}});if(o){const e=m;m=Zu({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(e)}if(d){const e=m;m=Wu(n,m,d,i,f),n.disposeIntermediateTensorInfo(e)}return m}};function vp(e,t,n,r,s,a,o,i,u){const l=(0,I.f3b)([r,a],n);for(let c=0;c<r;c++){const n=[];let r=0;for(let t=0;t<s;t++){const a=e[c*s+t];r+=a*o[t],n.push(a)}if(r<0||r>=u/a)throw new Error(`Invalid indices: ${n} does not index into ${i}`);for(let e=0;e<a;e++)l.values[c*a+e]=t.get(...t.indexToLoc(r*a+e))}return l}const kp={kernelName:I.q1x,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=I.D5U.sizeFromShape(r.shape),o=s.shape,i=o[o.length-1],[u,l,c,p]=I.Wap.prepareAndValidate(r,s);if(0===l)return n.makeTensorInfo(u,r.dtype,[]);const h=vp(n.data.get(s.dataId).values,n.bufferSync(r),r.dtype,l,i,c,p,r.shape,a);return n.makeTensorInfo(u,r.dtype,h.values)}};function Ip(e,t,n){const r=(0,I.f3b)(n,e.dtype);for(let s=0;s<r.size;++s){const n=r.indexToLoc(s).slice(),a=n[0],o=n[2],i=t.locToIndex([a,o]);n[2]=t.values[i];const u=e.locToIndex(n);0<=u&&u<e.values.length&&(r.values[s]=e.values[u])}return r}const Np={kernelName:I.qi_,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:o,batchDims:i}=r;gu([s,a],"gatherV2");const u=I.D5U.parseAxisParam(o,s.shape)[0],l=n.data.get(a.dataId).values,c=s.shape[u];for(let x=0;x<l.length;++x){const e=l[x];I.D5U.assert(e<=c-1&&e>=0,(()=>`GatherV2: the index value ${e} is not in [0, ${c-1}]`))}let p=i;null==i&&(p=0);const h=I.D5U.sizeFromShape(a.shape),d=I.Wap.segment_util.collectGatherOpShapeInfo(s,a,u,p),f=Ju({inputs:{x:s},backend:n,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),m=Ju({inputs:{x:a},backend:n,attrs:{shape:[d.batchSize,h/d.batchSize]}}),g=[d.batchSize,d.outerSize,h/d.batchSize,d.sliceSize],y=n.bufferSync(m),b=Ip(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(d.outputShape,b.dtype,b.values)}},Sp=Cu(((e,t)=>e>t?1:0)),Tp=Xu(I.iZT,Sp,null,"bool"),Cp={kernelName:I.iZT,backendName:"cpu",kernelFunc:Tp},Ep=Cu(((e,t)=>e>=t?1:0)),Ap=Xu(I.Acj,Ep,null,"bool"),$p={kernelName:I.Acj,backendName:"cpu",kernelFunc:Ap};const Dp={kernelName:I.Qg5,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=I.D5U.sizeFromShape(r.shape),a=r.shape[r.shape.length-1],o=Ju({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),i=op(o,!0,n),u=Ju({inputs:{x:i},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),u}},_p=xu(I.avt,(e=>Number.isFinite(e)?1:0),"bool"),Fp={kernelName:I.avt,backendName:"cpu",kernelFunc:_p},Rp=xu(I.iWB,(e=>Math.abs(e)===1/0?1:0),"bool"),Op={kernelName:I.iWB,backendName:"cpu",kernelFunc:Rp},Mp=xu(I.r7n,(e=>Number.isNaN(e)?1:0),"bool"),Bp={kernelName:I.r7n,backendName:"cpu",kernelFunc:Mp},Lp=Cu(((e,t)=>e<t?1:0)),Wp=Xu(I.vtC,Lp,null,"bool"),zp={kernelName:I.vtC,backendName:"cpu",kernelFunc:Wp},Pp=Cu(((e,t)=>e<=t?1:0)),Up=Xu(I.CAk,Pp,null,"bool"),Vp={kernelName:I.CAk,backendName:"cpu",kernelFunc:Up};function Gp(e,t,n){const r=(t-e)/(n-1),s=I.D5U.makeZerosTypedArray(n,"float32");s[0]=e;for(let a=1;a<s.length;a++)s[a]=s[a-1]+r;return s}const Hp={kernelName:I.e7N,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,o=Gp(r,s,a);return t.makeTensorInfo([o.length],"float32",o)}},jp=Ou((e=>Math.log(e))),Xp=wu(I.ZbH,jp),qp={kernelName:I.ZbH,backendName:"cpu",kernelFunc:Xp},Kp=xu(I.kU,(e=>Math.log1p(e))),Qp={kernelName:I.kU,backendName:"cpu",kernelFunc:Kp},Zp=Cu(((e,t)=>e&&t)),Yp=Xu(I.PYm,Zp,null,"bool"),Jp={kernelName:I.PYm,backendName:"cpu",kernelFunc:Yp},eh=xu(I.VfG,(e=>e?0:1),"bool"),th={kernelName:I.VfG,backendName:"cpu",kernelFunc:eh},nh=Cu(((e,t)=>e||t)),rh=Xu(I.MZg,nh,null,"bool"),sh={kernelName:I.MZg,backendName:"cpu",kernelFunc:rh};const ah={kernelName:I.eZ0,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:o,alpha:i,beta:u}=r;gu(s,"LRN");const l=s.shape[3],c=l-1,p=n.data.get(s.dataId).values,h=I.D5U.sizeFromShape(s.shape),d=new Float32Array(h);function f(e){const t=e%l;let n=e-t+Math.max(0,t-a);const r=e-t+Math.min(t+a,c);let s=0;for(;n<=r;n++){const e=p[n];s+=e*e}return s}for(let m=0;m<h;m++){const e=f(m),t=p[m]*Math.pow(o+i*e,-u);d[m]=t}return n.makeTensorInfo(s.shape,s.dtype,d)}};const oh={kernelName:I.Hhh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:o}=t,{depthRadius:i,bias:u,alpha:l,beta:c}=r;gu(o,"LRNGrad");const p=I.D5U.sizeFromShape(o.shape),h=o.shape[3],d=n.data.get(o.dataId).values,f=n.data.get(s.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(p),y=p;for(let b=0;b<y;b++){const e=b%h,t=b-e+Math.max(0,e-i),n=b-e+Math.min(h,e+i+1);let r=0;for(let s=t;s<n;s++)r+=Math.pow(f[s],2);r=l*r+u;for(let s=t;s<n;s++){let e=-2*l*c*f[s]*m[b]/r;b===s&&(e+=Math.pow(r,-c)),e*=d[b],g[s]+=e}}return n.makeTensorInfo(o.shape,s.dtype,g)}};function ih(e,t,n,r){const s=I.D5U.getTypedArrayFromDType(r,I.D5U.sizeFromShape(n));for(let a=0;a<s.length;++a){const n=a*t;let r=e[n];for(let s=0;s<t;++s){const t=e[n+s];(Number.isNaN(t)||t>r)&&(r=t)}s[a]=r}return s}function uh(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:o}=r,i=n;let u=s.shape;const l=u.length,c=I.D5U.parseAxisParam(a,u);let p=c;const h=I.Wap.getAxesPermutation(p,l);let d=i.data.get(s.dataId).values;if(null!=h){const e=new Array(l);for(let t=0;t<e.length;t++)e[t]=u[h[t]];d=pl(d,u,s.dtype,h,e),p=I.Wap.getInnerMostAxes(p.length,l),u=e}gu(s,"max"),I.Wap.assertAxesAreInnerMostDims("max",p,l);const[f,m]=I.Wap.computeOutAndReduceShapes(u,p),g=ih(d,I.D5U.sizeFromShape(m),f,s.dtype),y=i.write(g,f,s.dtype);let b=f;if(o){b=I.Wap.expandShapeToKeepDim(f,c)}return{dataId:y,shape:b,dtype:s.dtype}}const lh={kernelName:I.YoZ,backendName:"cpu",kernelFunc:uh},ch=Cu(((e,t)=>Math.max(e,t))),ph=Xu(I.BMI,ch),hh={kernelName:I.BMI,backendName:"cpu",kernelFunc:ph};const dh={kernelName:I.mTV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;gu(s,"maxPool");const{filterSize:a,strides:o,pad:i,dimRoundingMode:u}=r;I.D5U.assert(I.Wap.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const l=I.Wap.computePool2DInfo(s.shape,a,o,1,i,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&I.D5U.arraysEqual(l.inShape,l.outShape))c=Iu({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=I.D5U.computeStrides(s.shape),r=Al(e,s.shape,s.dtype,t,l,"max");c=n.makeTensorInfo(l.outShape,s.dtype,r.values)}return c}};const fh={kernelName:I.OAf,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:u,dataFormat:l}=r;gu(s,"maxPool3d");const c=I.Wap.computePool3DInfo(s.shape,a,o,1,i,u,l),p=Dl(n.data.get(s.dataId).values,s.shape,s.dtype,I.D5U.computeStrides(s.shape),c,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}};const mh={kernelName:I.OU7,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:o,strides:i,pad:u,dimRoundingMode:l}=r;gu([s,a],"maxPool3DGrad");const c=I.Wap.computePool3DInfo(a.shape,o,i,1,u,l),p=function(e,t){const n=(0,I.f3b)(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,a=t.strideWidth,o=t.dilationDepth,i=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,p=t.effectiveFilterWidth,h=t.padInfo.front,d=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*r-h;let x=b;for(;x<0;)x+=o;const w=Math.min(t.inDepth,l+b);for(let r=0;r<t.outHeight;++r){const l=r*s-d;let h=l;for(;h<0;)h+=i;const v=Math.min(t.inHeight,c+l);for(let s=0;s<t.outWidth;++s){const d=s*a-f;let k=d;for(;k<0;)k+=u;const I=Math.min(t.inWidth,p+d);let N=Number.NEGATIVE_INFINITY,S=-1;for(let t=x;t<w;t+=o){const n=t-b;for(let r=h;r<v;r+=i){const s=r-l;for(let a=k;a<I;a+=u){const o=a-d,i=e.get(m,t,r,a,g);i>=N&&(N=i,S=n*c*p+s*c+o)}}}n.set(S,m,y,r,s,g)}}}return n}(n.bufferSync(a),c),h=c.strideDepth,d=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterDepth,x=c.effectiveFilterHeight,w=c.effectiveFilterWidth,v=b-1-c.padInfo.front,k=w-1-c.padInfo.left,N=x-1-c.padInfo.top,S=(0,I.f3b)(a.shape,"float32"),T=n.bufferSync(s);for(let I=0;I<c.batchSize;++I)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inDepth;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=t-v,a=n-N,o=r-k;let i=0;for(let t=0;t<b;t+=m){const n=(s+t)/h;if(!(n<0||n>=c.outDepth||Math.floor(n)!==n))for(let r=0;r<x;r+=g){const s=(a+r)/d;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let a=0;a<w;a+=y){const u=(o+a)/f;if(u<0||u>=c.outWidth||Math.floor(u)!==u)continue;const l=b*x*w-1-p.get(I,n,s,u,e)===t*x*w+r*w+a?1:0;if(0===l)continue;i+=T.get(I,n,s,u,e)*l}}}S.set(i,I,t,n,r,e)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}};const gh={kernelName:I.OV7,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:o}=t,i=a;gu([a,o],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:p}=r,h=I.Wap.computePool2DInfo(i.shape,u,l,1,c,p),d=n.data.get(i.dataId).values,f=(0,I.f3b)(h.outShape,i.dtype,$l(d,i.shape,i.dtype,h).values),m=h.strideHeight,g=h.strideWidth,y=h.dilationHeight,b=h.dilationWidth,x=h.effectiveFilterHeight,w=h.effectiveFilterWidth,v=w-1-h.padInfo.left,k=x-1-h.padInfo.top,N=(0,I.f3b)(i.shape,"float32"),S=n.data.get(s.dataId).values,T=(0,I.f3b)(s.shape,"float32",S);for(let I=0;I<h.batchSize;++I)for(let e=0;e<h.inChannels;++e)for(let t=0;t<h.inHeight;++t)for(let n=0;n<h.inWidth;++n){const r=t-k,s=n-v;let a=0;for(let t=0;t<x;t+=y){const n=(r+t)/m;if(!(n<0||n>=h.outHeight||Math.floor(n)!==n))for(let r=0;r<w;r+=b){const o=(s+r)/g;if(o<0||o>=h.outWidth||Math.floor(o)!==o)continue;const i=x*w-1-f.get(I,n,o,e)===t*w+r?1:0;if(0===i)continue;a+=T.get(I,n,o,e)*i}}N.set(a,I,t,n,e)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}};const yh={kernelName:I.vFR,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:o,includeBatchInIndex:i}=t,u=n;gu(r,"MaxPoolWithArgmax");const l=u.data.get(r.dataId).values,c=I.Wap.computePool2DInfo(r.shape,s,a,[1,1],o),[p,h]=function(e,t,n,r,s){const a=Al(e,0,n,I.D5U.computeStrides(t),s,"max"),o=$l(e,t,n,s,!0,r);return[a.values,o.values]}(l,r.shape,r.dtype,i,c),d=u.write(p,c.outShape,r.dtype),f=u.write(h,c.outShape,r.dtype);return[{dataId:d,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};const bh={kernelName:I.q2K,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=I.D5U.parseAxisParam(a,s.shape),u=I.Wap.computeOutAndReduceShapes(s.shape,i)[1],l=I.D5U.sizeFromShape(u),c=[],p=n.makeTensorInfo([],"float32",new Float32Array([l]));c.push(p);const h=Hu({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});c.push(h);const d=ep({inputs:{a:h,b:p},backend:n});c.push(d);const f=$c({inputs:{x:d},backend:n,attrs:{axis:a,keepDims:o}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};const xh={kernelName:I.c17,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;gu(s,"min");const i=I.D5U.parseAxisParam(a,s.shape);let u=i;const l=I.Wap.getAxesPermutation(u,s.shape.length);let c=s;null!=l&&(c=hl({inputs:{x:s},backend:n,attrs:{perm:l}}),u=I.Wap.getInnerMostAxes(u.length,s.shape.length)),I.Wap.assertAxesAreInnerMostDims("min",u,c.shape.length);const[p,h]=I.Wap.computeOutAndReduceShapes(c.shape,u),d=I.D5U.sizeFromShape(h),f=I.D5U.makeZerosTypedArray(I.D5U.sizeFromShape(p),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const e=y*d;let t=m[e];for(let n=0;n<d;++n){const r=m[e+n];(Number.isNaN(r)||r<t)&&(t=r)}f[y]=t}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(p,c.dtype,f);if(o){const e=Ju({inputs:{x:g},backend:n,attrs:{shape:I.Wap.expandShapeToKeepDim(p,i)}});return n.disposeIntermediateTensorInfo(g),e}return g}},wh=Cu(((e,t)=>Math.min(e,t))),vh=Xu(I.q8u,wh),kh={kernelName:I.q8u,backendName:"cpu",kernelFunc:vh};const Ih={kernelName:I.jQs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,mode:o}=r;gu(s,"mirrorPad");const i=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),u=a.map((e=>e[0])),l=a.map(((e,t)=>e[0]+s.shape[t])),c="reflect"===o?0:1,p=n.data.get(s.dataId).values,h=s.shape.length,d=I.D5U.computeStrides(s.shape),f=I.D5U.sizeFromShape(i),m=i.length,g=I.D5U.computeStrides(i),y=I.D5U.getTypedArrayFromDType(s.dtype,f);for(let b=0;b<f;b++){let e=I.D5U.indexToLoc(b,m,g);for(let n=0;n<m;n++)e[n]<u[n]?e[n]=2*u[n]-e[n]-c:e[n]>=l[n]&&(e[n]=2*(l[n]-1)-e[n]+c);e=e.map(((e,t)=>e-u[t]));const t=I.D5U.locToIndex(e,h,d);y[b]=p[t]}return{dataId:n.write(y,i,s.dtype),shape:i,dtype:s.dtype}}},Nh=Cu(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),Sh=Xu(I.Vbg,Nh),Th={kernelName:I.Vbg,backendName:"cpu",kernelFunc:Sh};var Ch=n(2948);function Eh(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,o=s.shape.length;let i=a;if(-1===i&&(i=o-1),i!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${i}`);const u=I.D5U.parseAxisParam([i],s.shape),l=uh({inputs:{x:s},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),c=I.Wap.expandShapeToKeepDim(l.shape,u),p=Ju({inputs:{x:l},backend:n,attrs:{shape:c}}),h=sp({inputs:{a:s,b:p},backend:n}),d=jc({inputs:{x:h},backend:n}),f=$c({inputs:{x:d},backend:n,attrs:{axis:u,keepDims:!1}}),m=Ju({inputs:{x:f},backend:n,attrs:{shape:c}}),g=ep({inputs:{a:d,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const Ah={kernelName:I.Gcp,backendName:"cpu",kernelFunc:Eh};const $h={kernelName:I.NZg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:o,normalized:i}=r;gu(s,"multinomial");const u=i?s:Eh({inputs:{logits:s},backend:n,attrs:{dim:-1}}),l=u.shape[0],c=u.shape[1],p=n.data.get(u.dataId).values,h=[l,a],d=I.D5U.makeZerosTypedArray(I.D5U.sizeFromShape(h),"int32");for(let f=0;f<l;++f){const e=f*c,t=new Float32Array(c-1);t[0]=p[e];for(let s=1;s<t.length;++s)t[s]=t[s-1]+p[e+s];const n=Ch.alea(o.toString()),r=f*a;for(let s=0;s<a;++s){const e=n();d[r+s]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){d[r+s]=n;break}}}return i||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(h,"int32",d)}};function Dh(e,t,n){const r=I.D5U.createScalarValue(-1,n);return Tc([],t,r,e,n)}const _h={kernelName:I.kuV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;gu(r,"neg");const s=n.data.get(r.dataId).values,[a,o]=Dh(s,r.shape,r.dtype);return n.makeTensorInfo(o,r.dtype,a)}},Fh=I.GDt.GP;const Rh={kernelName:I.uv1,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u}=r;gu(s,"NonMaxSuppression");const l=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:p}=Fh(l,c,o,i,u);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},Oh=I.GDt.qP;const Mh={kernelName:I.cye,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:l}=r;gu(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,p=n.data.get(a.dataId).values,{selectedIndices:h,validOutputs:d}=Oh(c,p,o,i,u,l);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},Bh=I.GDt.pA;const Lh={kernelName:I.W0H,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,softNmsSigma:l}=r;gu(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,p=n.data.get(a.dataId).values,h=o,d=i,f=u,m=l,{selectedIndices:g,selectedScores:y}=Bh(c,p,h,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},Wh=Cu(((e,t)=>e!==t?1:0)),zh=Xu(I.yQU,Wh,null,"bool"),Ph={kernelName:I.yQU,backendName:"cpu",kernelFunc:zh};const Uh={kernelName:I.we_,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{depth:a,onValue:o,offValue:i}=r;gu(s,"oneHot");const u=I.D5U.sizeFromShape(s.shape),l=new Float32Array(u*a);l.fill(i);const c=n.data.get(s.dataId).values;for(let p=0;p<u;++p)c[p]>=0&&c[p]<a&&(l[p*a+c[p]]=o);return n.makeTensorInfo([...s.shape,a],"int32",l)}};function Vh(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=Vu({inputs:{input:r},backend:n}),t=Vh({inputs:{x:e},backend:n}),s=Yl({inputs:{input:r},backend:n}),a=Vh({inputs:{x:s},backend:n}),o=zu({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),o}return cp({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const Gh={kernelName:I.RuY,backendName:"cpu",kernelFunc:Vh};const Hh={kernelName:I.qWM,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const t=Vu({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=Yl({inputs:{input:s},backend:r}),o=Vh({inputs:{x:a},backend:r}),i=zu({inputs:{real:n,imag:o},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(o),i}return cp({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function jh(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return qc({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,o=t[0].dtype;t.forEach((e=>{I.D5U.assertShapesMatch(a,e.shape,"All tensors passed to stack must have matching shapes"),I.D5U.assert(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],u=ec({inputs:t.map((e=>{const t=qc({inputs:{input:e},backend:n,attrs:{dim:s}});return i.push(t),t})),backend:n,attrs:{axis:s}});return i.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const Xh={kernelName:I.QiL,backendName:"cpu",kernelFunc:jh};const qh={kernelName:I.lyA,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:o}=r;gu(s,"pad");const i=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),u=a.map((e=>e[0])),l=n.data.get(s.dataId).values,c=I.D5U.sizeFromShape(s.shape),p=s.shape.length,h=I.D5U.computeStrides(s.shape),d=I.D5U.sizeFromShape(i),f=i.length,m=I.D5U.computeStrides(i),g=I.D5U.getTypedArrayFromDType(s.dtype,d);0!==o&&g.fill(o);for(let y=0;y<c;y++){const e=I.D5U.indexToLoc(y,p,h).map(((e,t)=>e+u[t]));g[I.D5U.locToIndex(e,f,m)]=l[y]}return{dataId:n.write(g,i,s.dtype),shape:i,dtype:s.dtype}}},Kh=Cu(((e,t)=>Math.pow(e,t))),Qh=Xu(I.pe_,Kh),Zh={kernelName:I.pe_,backendName:"cpu",kernelFunc:Qh};function Yh(e,t,n,r){const[s,a]=I.Wap.computeOutAndReduceShapes(e,r),o=(0,I.x8V)(t,"int32"),i=I.D5U.makeZerosTypedArray(I.D5U.sizeFromShape(s),o),u=I.D5U.sizeFromShape(a);for(let l=0;l<i.length;++l){const e=l*u;let t=1;for(let r=0;r<u;++r)t*=n[e+r];i[l]=t}return{outVals:i,outShape:s,outDtype:o}}const Jh={kernelName:I.DlI,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;gu(s,"prod");const i=s.shape.length,u=I.D5U.parseAxisParam(a,s.shape),l=I.Wap.getAxesPermutation(u,i);let c=u,p=s;const h=[];null!=l&&(p=hl({inputs:{x:s},backend:n,attrs:{perm:l}}),h.push(p),c=I.Wap.getInnerMostAxes(c.length,i));const d=n.data.get(p.dataId).values,{outVals:f,outShape:m,outDtype:g}=Yh(p.shape,p.dtype,d,c);let y=m;return o&&(y=I.Wap.expandShapeToKeepDim(m,u)),h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function ed(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return I.D5U.makeZerosTypedArray(0,r);const s=Math.abs(Math.ceil((t-e)/n)),a=I.D5U.makeZerosTypedArray(s,r);t<e&&1===n&&(n=-1),a[0]=e;for(let o=1;o<a.length;o++)a[o]=a[o-1]+n;return a}const td={kernelName:I.e6w,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,dtype:a,step:o}=n,i=ed(r,s,o,a);return t.makeTensorInfo([i.length],a,i)}},nd=xu(I.$HU,(e=>1/e)),rd={kernelName:I.$HU,backendName:"cpu",kernelFunc:nd};const sd={kernelName:I._Yw,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:o,size:i}=r;gu(s,"resizeBilinear");const u=I.D5U.computeStrides(s.shape),[l,c]=i,[p,h,d,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(I.D5U.sizeFromShape([p,l,c,f])),y=[a&&l>1?h-1:h,a&&c>1?d-1:d],b=[a&&l>1?l-1:l,a&&c>1?c-1:c];let x=0;const w=y[0]/b[0],v=y[1]/b[1];for(let k=0;k<p;k++)for(let e=0;e<l;e++){let t;t=o?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(h-1,Math.ceil(t)),a=k*u[0]+n*u[1],i=k*u[0]+s*u[1];for(let e=0;e<c;e++){let t;t=o?v*(e+.5)-.5:v*e;const n=Math.max(0,Math.floor(t)),s=t-n,l=Math.min(d-1,Math.ceil(t)),c=a+n*u[2],p=i+n*u[2],h=a+l*u[2],y=i+l*u[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[p+e],a=t+(m[h+e]-t)*s,o=a+(n+(m[y+e]-n)*s-a)*r;g[x++]=o}}}return n.makeTensorInfo([p,l,c,f],"float32",g)}};const ad={kernelName:I.zbQ,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:o}=r;gu([a,s],"resizeBilinearGrad");const i=I.D5U.computeStrides(s.shape),[u,l,c,p]=s.shape,[,h,d]=a.shape,f=new Float32Array(u*l*c*p),m=[o&&h>1?l-1:l,o&&d>1?c-1:c],g=[o&&h>1?h-1:h,o&&d>1?d-1:d],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(a.dataId).values;let w=0;for(let v=0;v<u;v++){const e=v*i[0];for(let t=0;t<h;t++){const n=t*y,r=Math.floor(n),s=Math.min(Math.ceil(n),l-1),a=e+r*i[1],o=e+s*i[1],u=n-r,h=1-u;for(let e=0;e<d;e++){const t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),s=t-n,l=1-s,d=a+n*i[2],m=a+r*i[2],g=o+n*i[2],y=o+r*i[2],v=h*l,k=h*s,I=u*l,N=u*s;for(let e=0;e<p;e++){const t=x[w++];f[d+e]+=t*v,f[m+e]+=t*k,f[g+e]+=t*I,f[y+e]+=t*N}}}}return n.makeTensorInfo([u,c,l,p],"float32",f)}};const od={kernelName:I.dpD,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:o,size:i}=r;gu(s,"resizeNearestNeighbor");const u=I.D5U.computeStrides(s.shape),[l,c]=i,[p,h,d,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(p*l*c*f),y=[a&&l>1?h-1:h,a&&c>1?d-1:d],b=[a&&l>1?l-1:l,a&&c>1?c-1:c],x=y[0]/b[0],w=y[1]/b[1];let v=0;for(let k=0;k<p;k++){const e=k*u[0];for(let t=0;t<l;t++){const n=o?x*(t+.5):x*t;let r=Math.min(h-1,a?Math.round(n):Math.floor(n));o&&(r=Math.max(0,r));const s=e+r*u[1];for(let e=0;e<c;e++){const t=o?w*(e+.5):w*e;let n=Math.min(d-1,a?Math.round(t):Math.floor(t));o&&(n=Math.max(0,n));const r=s+n*u[2];for(let e=0;e<f;e++){const t=m[r+e];g[v++]=t}}}}return n.makeTensorInfo([p,l,c,f],s.dtype,g)}};const id={kernelName:I.Hmb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:o}=r;gu([a,s],"resizeNearestNeighborGrad");const i=I.D5U.computeStrides(s.shape),u=I.D5U.computeStrides(a.shape),[l,c,p,h]=s.shape,[,d,f]=a.shape,m=new Float32Array(l*c*p*h),g=n.data.get(a.dataId).values,y=[o&&d>1?c-1:c,o&&f>1?p-1:p],b=[o&&d>1?d-1:d,o&&f>1?f-1:f],x=y[0]/b[0],w=y[1]/b[1],v=1/x,k=1/w,N=2*Math.ceil(v)+2,S=2*Math.ceil(k)+2;for(let I=0;I<l;I++){const e=I*i[0];for(let t=0;t<c;t++){const n=e+t*i[1],r=Math.floor(t*v),s=Math.floor(r-N/2);for(let a=0;a<p;a++){const r=n+a*i[2],l=Math.floor(a*k),y=Math.floor(l-S/2);for(let n=0;n<h;n++){let i=0;for(let r=0;r<N;r++){const l=r+s;if(l<0||l>=d)continue;const h=e+l*u[1],m=l*x;if(t===Math.min(c-1,o?Math.round(m):Math.floor(m)))for(let e=0;e<S;e++){const t=e+y;if(t<0||t>=f)continue;const r=h+t*u[2],s=t*w;a===Math.min(p-1,o?Math.round(s):Math.floor(s))&&(i+=g[r+n])}}m[r+n]=i}}}}return n.makeTensorInfo(s.shape,s.dtype,m)}};const ud={kernelName:I.mKl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r;gu(s,"reverse");const o=s.shape.length,i=I.D5U.parseAxisParam(a,s.shape);if(0===o)return Iu({inputs:{x:s},backend:n});const u=new I.YDk(s.shape,s.dtype),l=n.bufferSync(s);for(let c=0;c<u.size;c++){const e=u.indexToLoc(c),t=e.slice();i.forEach((e=>t[e]=s.shape[e]-1-t[e])),u.set(l.get(...t),...e)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},ld={kernelName:I.b9H,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:o}=t,i=n,u=I.D5U.getTypedArrayFromDType(r.dtype,I.D5U.sizeFromShape(r.shape)),[l,c,p,h]=r.shape,[d,f]=I.Wap.getImageCenter(o,c,p),m=Math.sin(s),g=Math.cos(s),y=i.data.get(r.dataId).values;for(let b=0;b<l;b++){const e=b*p*c*h;for(let t=0;t<c;t++){const n=t*(p*h);for(let r=0;r<p;r++){const s=r*h;for(let o=0;o<h;o++){const i=[l,t,r,o],b=i[2],x=i[1];let w=(b-d)*g-(x-f)*m,v=(b-d)*m+(x-f)*g;w=Math.round(w+d),v=Math.round(v+f);let k=a;if("number"!==typeof a&&(k=3===o?255:a[o]),w>=0&&w<p&&v>=0&&v<c){k=y[e+v*(p*h)+w*h+o]}u[e+n+s+o]=k}}}}return{dataId:i.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},cd=xu(I.e07,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1})),pd={kernelName:I.e07,backendName:"cpu",kernelFunc:cd},hd=Ou((e=>1/Math.sqrt(e))),dd=wu(I.bV0,hd),fd={kernelName:I.bV0,backendName:"cpu",kernelFunc:dd};function md(e,t,n,r,s,a,o,i,u,l){const c=[r/s,s],p=e.values,h=t.values;if(0===r)return(0,I.f3b)(n,t.dtype);const d=(0,I.f3b)(c,t.dtype);"string"===typeof u||"number"===typeof u?d.values.fill(u):"boolean"===typeof u&&d.values.fill(+u);for(let f=0;f<a;f++){const e=[];let a=0;for(let t=0;t<o;t++){const n=p[f*o+t];e.push(n),a+=n*i[t]}if(a<0||a>=r/s)throw new Error(`Invalid indices: ${e} does not index into ${n}`);for(let n=0;n<s;n++)l?d.values[a*s+n]+=h[f*s+n]:d.values[a*s+n]=0===t.rank?h[0]:h[f*s+n]}return d}const gd={kernelName:I.xQA,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:o}=r,{sliceRank:i,numUpdates:u,sliceSize:l,strides:c,outputSize:p}=I.Wap.calculateShapes(a,s,o),h=md(n.bufferSync(s),n.bufferSync(a),o,p,l,u,i,c,0,!0);return n.makeTensorInfo(o,h.dtype,h.values)}};function yd(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<t?n=s+1:r=s;return r}function bd(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<=t?n=s+1:r=s;return r}const xd={kernelName:I.nr8,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:a}=t,{side:o}=r,i=function(e,t,n,r,s,a){const o=I.D5U.getArrayFromDType("int32",n*s);for(let i=0;i<n;++i){const n=e.slice(i*r,(i+1)*r),u=i*s;for(let e=0;e<s;++e)o[u+e]="left"===a?yd(n,t[e+u]):bd(n,t[e+u])}return o}(n.data.get(s.dataId).values,n.data.get(a.dataId).values,s.shape[0],s.shape[1],a.shape[1],o);return n.makeTensorInfo(a.shape,"int32",i)}};const wd={kernelName:I.PhF,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t;gu([r,s,a],"select");const o=r.shape.length,i=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,c=(0,I.x8V)(s.dtype,a.dtype),p=I.D5U.makeZerosTypedArray(I.D5U.sizeFromShape(s.shape),c);let h=0;const d=0===o||o>1||1===s.shape.length?1:I.D5U.sizeFromShape(s.shape.slice(1));for(let f=0;f<i.length;f++)for(let e=0;e<d;e++)1===i[f]?p[h++]=u[f]:p[h++]=l[f];return n.makeTensorInfo(s.shape,c,p)}},vd=I.Wap.SELU_SCALEALPHA,kd=I.Wap.SELU_SCALE,Id=xu(I.oFR,(e=>e>=0?kd*e:vd*(Math.exp(e)-1))),Nd={kernelName:I.oFR,backendName:"cpu",kernelFunc:Id},Sd=xu(I.i5y,(e=>e<0?-1:e>0?1:0)),Td={kernelName:I.i5y,backendName:"cpu",kernelFunc:Sd},Cd=xu(I.RQH,(e=>Math.sin(e))),Ed={kernelName:I.RQH,backendName:"cpu",kernelFunc:Cd},Ad=xu(I.wYB,(e=>Math.sinh(e))),$d={kernelName:I.wYB,backendName:"cpu",kernelFunc:Ad},Dd=Math.log(1.1920928955078125e-7)+2,_d=xu(I.MRv,(e=>{const t=e>-Dd,n=e<Dd,r=Math.exp(e);let s;return s=n?r:t?e:Math.log(1+r),s})),Fd={kernelName:I.MRv,backendName:"cpu",kernelFunc:_d};const Rd={kernelName:I.TQc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:o}=r;gu([s],"spaceToBatchND");const i=I.D5U.sizeFromShape(a),u=[[0,0]];u.push(...o);for(let g=1+a.length;g<s.shape.length;++g)u.push([0,0]);const l=qh.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),c=I.Wap.getReshaped(l.shape,a,i,!1),p=I.Wap.getPermuted(c.length,a.length,!1),h=I.Wap.getReshapedPermuted(l.shape,a,i,!1),d=Ju({inputs:{x:l},backend:n,attrs:{shape:c}}),f=hl({inputs:{x:d},backend:n,attrs:{perm:p}}),m=Ju({inputs:{x:f},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}};function Od(e,t,n,r,s,a,o){const i=t[0],u=a[0],l=new Array(u),c=new Array(i),p=t[1];if(0===u){if(0!==i)throw new Error(I.Wap.getSparseFillEmptyRowsIndicesDenseShapeMismatch(i));return[I.D5U.getArrayFromDType(n,0),[0,p],I.D5U.getArrayFromDType(s,0),l,c]}let h=!0,d=0;const f=new Array(u).fill(0);for(let g=0;g<i;++g){const t=e[g*p];if(t<0)throw new Error(I.Wap.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,t));if(t>=u)throw new Error(I.Wap.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,t,u));++f[t],h=h&&t>=d,d=t}let m=!0;for(let g=0;g<u;++g){const e=0===f[g];l[g]=e,m=m&&!e,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&h){const t=e,n=r;for(let e=0;e<i;++e)c[e]=e;return[t,[i,p],n,l,c]}{const t=f[u-1],a=I.D5U.getArrayFromDType(n,t*p),h=I.D5U.getArrayFromDType(s,t),d=new Array(u).fill(0);for(let n=0;n<i;++n){const t=e[n*p],s=d[t],o=(0===t?0:f[t-1])+s;d[t]++;for(let r=0;r<p;++r)a[o*p+r]=e[n*p+r];h[o]=r[n],c[n]=o}for(let e=0;e<u;++e){if(0===d[e]){const t=0===e?0:f[e-1];a[t*p+0]=e;for(let e=1;e<p;++e)a[t*p+e]=0;h[t]=o}}return[a,[t,p],h,l,c]}}const Md={kernelName:I.O3z,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:o}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n        ${s.shape}`);if(0!==o.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${o.shape}`);const i=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,c=n.data.get(o.dataId).values[0],[p,h,d,f,m]=Od(i,r.shape,r.dtype,u,s.dtype,l,c);return[n.makeTensorInfo(h,r.dtype,p),n.makeTensorInfo([h[0]],s.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};function Bd(e,t,n,r,s){const a=I.D5U.sizeFromShape(r),o=t[0],i=s.length,u=[];let l=1,c=-1;for(let m=0;m<i;++m){const e=s[m];if(-1===e){if(-1!==c)throw new Error(I.Wap.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(c,m));c=m,u.push(1)}else{if(e<0)throw new Error(I.Wap.getSparseReshapeNegativeOutputDimErrorMessage(m,e));l*=e,u.push(e)}}if(-1!==c){if(l<=0)throw new Error(I.Wap.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const e=Math.trunc(a/l);if(l*e!==a)throw new Error(I.Wap.getSparseReshapeInputOutputMultipleErrorMessage(r,u));u[c]=e}if(I.D5U.sizeFromShape(u)!==a)throw new Error(I.Wap.getSparseReshapeInputOutputMismatchErrorMessage(r,u));const p=r.length,h=[];if(p>0){h[p-1]=1;for(let e=p-2;e>=0;--e)h[e]=h[e+1]*r[e+1]}const d=[];if(i>0){d[i-1]=1;for(let e=i-2;e>=0;--e)d[e]=d[e+1]*u[e+1]}const f=I.D5U.getArrayFromDType(n,o*i);for(let m=0;m<o;++m){let t=0;for(let n=0;n<p;++n)t+=e[m*p+n]*h[n];for(let e=0;e<i;++e)f[m*i+e]=Math.trunc(t/d[e]),t%=d[e]}return[f,[o,i],u]}const Ld={kernelName:I.nhH,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const o=Array.from(n.data.get(s.dataId).values),i=n.data.get(r.dataId).values,u=Array.from(n.data.get(a.dataId).values),[l,c,p]=Bd(i,r.shape,r.dtype,o,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([p.length],a.dtype,new Int32Array(p))]}};function Wd(e,t,n,r,s,a=!1,o=0){const i=r.length,u=[t[0],e.length/t[0]],l=u[1],c=i>0?s[i-1]+1:0;if(c<0)throw new Error(I.Wap.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const p=t.slice();p[0]=c;const h=p.reduce(((e,t)=>e*t),1),d=I.D5U.getArrayFromDType(n,h);if(0===i)return c>0&&d.fill(o),[d,p];if(c<=0)throw new Error(I.Wap.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let f=0,m=1,g=0,y=s[f];for(;;){let t=0;if(m<i){if(t=s[m],y===t){++m;continue}if(y>=t)throw new Error(I.Wap.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=c)throw new Error(I.Wap.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,c));y>g&&d.fill(o,g*l,y*l);for(let n=f;n<m;++n){const t=r[n];if(t<0||t>=u[0])throw new Error(I.Wap.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(n,r[n],u[0]));for(let n=0;n<l;n++)d[y*l+n]+=e[t*l+n]}if(a)for(let e=0;e<l;e++)d[y*l+e]/=m-f;if(f=m,++m,g=y+1,y=t,m>i)break}return g<c&&d.fill(o,g*l,c*l),[d,p]}const zd={kernelName:I.w3H,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,[l,c]=Wd(o,r.shape,r.dtype,i,u,!0);return n.makeTensorInfo(c,r.dtype,l)}};const Pd={kernelName:I.ZjV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,[l,c]=Wd(o,r.shape,r.dtype,i,u);return n.makeTensorInfo(c,r.dtype,l)}};const Ud={kernelName:I.D2d,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:o}=t,{outputShape:i}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:p,outputSize:h}=I.Wap.calculateShapes(a,s,i),d=!1,f=n.bufferSync(s);let m;switch(a.dtype){case"bool":m=md(f,n.bufferSync(a),i,h,c,l,u,p,Boolean(n.data.get(o.dataId).values[0]),d);break;case"float32":m=md(f,n.bufferSync(a),i,h,c,l,u,p,n.data.get(o.dataId).values[0],d);break;case"int32":m=md(f,n.bufferSync(a),i,h,c,l,u,p,n.data.get(o.dataId).values[0],d);break;case"string":m=md(f,n.bufferSync(a),i,h,c,l,u,p,I.D5U.decodeString(n.data.get(o.dataId).values[0]),d);break;default:throw new Error(`Unsupported type ${a.dtype}`)}return n.makeTensorInfo(i,m.dtype,m.values)}};const Vd={kernelName:I.L8s,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:o}=r,i=I.D5U.parseAxisParam(o,s.shape)[0],u=I.Wap.prepareSplitSize(s,a,i),l=new Array(s.shape.length).fill(0),c=s.shape.slice();return u.map((e=>{const t=[...c];t[i]=e;const r=Ll({inputs:{x:s},backend:n,attrs:{begin:l,size:t}});return l[i]+=e,r}))}},Gd=Ou((e=>Math.sqrt(e))),Hd=xu(I.FKq,(e=>Math.sqrt(e))),jd={kernelName:I.FKq,backendName:"cpu",kernelFunc:Hd},Xd={kernelName:I.bK0,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;gu(n,"square");const s=r.data.get(n.dataId).values,a=new Float32Array(s.length);for(let o=0;o<s.length;++o){const e=s[o];a[o]=e*e}return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},qd=Cu(((e,t)=>{const n=e-t;return n*n})),Kd=Xu(I._tC,qd),Qd={kernelName:I._tC,backendName:"cpu",kernelFunc:Kd},Zd=xu(I.h8e,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),Yd={kernelName:I.h8e,backendName:"cpu",kernelFunc:Zd};function Jd(e,t,n,r){const s=(0,I.f3b)(e,t.dtype);for(let a=0;a<s.size;a++){const e=s.indexToLoc(a),o=new Array(e.length);for(let t=0;t<o.length;t++)o[t]=e[t]*n[t]+r[t];s.set(t.get(...o),...e)}return s}const ef={kernelName:I.jQk,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:o,strides:i,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:h}=r;gu(s,"stridedSlice");const{finalShapeSparse:d,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=I.kuN.sliceInfo(s.shape,a,o,i,u,l,c,p,h);let v;if(m)v=Ju({inputs:{x:s},backend:n,attrs:{shape:f}});else if(g||y){I.D5U.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=I.kuN.computeOutShape(b,x,w),t=Ll({inputs:{x:s},backend:n,attrs:{begin:b,size:e}});v=Ju({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=Jd(d,n.bufferSync(s),w,b);v=n.makeTensorInfo(f,e.dtype,e.values)}return v}};class tf{constructor(e,t,n,r,s,a){this.separator=I.D5U.encodeString(e),this.nGramWidths=t,this.leftPad=I.D5U.encodeString(n),this.rightPad=I.D5U.encodeString(r),this.padWidth=s,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,s,a){for(let o=0;o<s;++o){const i=this.getPadWidth(a),u=Math.max(0,i-o),l=Math.max(0,i-(s-(o+1))),c=a-(u+l),p=t+(u>0?0:o-i);let h=0;h+=u*this.leftPad.length;for(let t=0;t<c;++t)h+=e[p+t].length;h+=l*this.rightPad.length;h+=(u+l+c-1)*this.separator.length,n[r+o]=new Uint8Array(h);const d=n[r+o];let f=0;const m=e=>e.forEach((e=>d[f++]=e));for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[p+t]),m(this.separator);if(c>0){m(e[p+c-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let s=1;s<r;++s){let r=t[s]>=e;if(r=r&&t[s]<=n,!r)throw new Error(`Invalid split value ${t[s]}, must be in [${e}, ${n}]`);e=t[s]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const s=r-1,a=I.D5U.getArrayFromDType("int32",r);if(0===n||0===r){const e=new Array(n);for(let t=0;t<=s;++t)a[t]=0;return[e,a]}a[0]=0;for(let i=1;i<=s;++i){const e=t[i]-t[i-1];let n=0;this.nGramWidths.forEach((t=>{n+=this.getNumNGrams(e,t)})),this.preserveShort&&e>0&&0===n&&(n=1),a[i]=a[i-1]+n}const o=new Array(a[s]);for(let i=0;i<s;++i){const n=t[i];let r=a[i];if(this.nGramWidths.forEach((s=>{const a=t[i+1]-t[i],u=this.getNumNGrams(a,s);this.createNGrams(e,n,o,r,u,s),r+=u})),this.preserveShort&&r===a[i]){const s=t[i+1]-t[i];if(0===s)continue;const a=s+2*this.padWidth,u=1;this.createNGrams(e,n,o,r,u,a)}}return[o,a]}}function nf(e,t,n,r,s,a,o,i){return new tf(n,r,s,a,o,i).compute(e,t)}const rf={kernelName:I._JP,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:o,rightPad:i,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:p}=t,h=n.data.get(c.dataId).values,d=n.data.get(p.dataId).values,[f,m]=nf(h,d,s,a,o,i,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}};function sf(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const s=t[0];let a=e.indexOf(s);for(;-1!==a;){const t=e.subarray(0,a);n&&0===t.length||r.push(t),a=(e=e.subarray(a+1)).indexOf(s)}return void(n&&0===e.length||r.push(e))}let s=0;for(let a=0;a<e.length+1;a++)if(a===e.length||-1!==t.indexOf(e[a])){const t=e.subarray(s,a);n&&0===t.length||r.push(t),s=a+1}}function af(e,t,n){const r=e.length,s=[];let a=0,o=0;const i=new Array(r);for(let h=0;h<r;++h){const r=s.length;sf(e[h],t,n,s);const u=s.length-r;i[h]=u,a+=u,o=Math.max(o,u)}const u=I.D5U.getArrayFromDType("int32",2*a),l=new Array(a),c=[r,o];let p=0;for(let h=0;h<r;++h)for(let e=0;e<i[h];++e)u[2*p]=h,u[2*p+1]=e,l[p]=s[p],++p;return[u,l,c]}const of={kernelName:I.s1s,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:o}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==o.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const i=n.data.get(a.dataId).values,u=n.data.get(o.dataId).values[0],[l,c,p]=af(i,u,s),h=c.length;return[n.makeTensorInfo([h,2],"int32",l),n.makeTensorInfo([h],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(p))]}};function uf(e,t){const n=I.D5U.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=I.D5U.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}const lf={kernelName:I.XkS,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const o=uf(n.data.get(a.dataId).values,s);return n.makeTensorInfo(a.shape,"int32",o)}},cf=xu(I.sEM,(e=>Math.tan(e))),pf={kernelName:I.sEM,backendName:"cpu",kernelFunc:cf},hf=xu(I.MIZ,(e=>Math.tanh(e))),df={kernelName:I.MIZ,backendName:"cpu",kernelFunc:hf};function ff(e,t){const n=new Array(e.rank);for(let s=0;s<n.length;s++)n[s]=e.shape[s]*t[s];const r=(0,I.f3b)(n,e.dtype);for(let s=0;s<r.values.length;++s){const t=r.indexToLoc(s),n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=t[r]%e.shape[r];const a=e.locToIndex(n);r.values[s]=e.values[a]}return r}const mf={kernelName:I.n9L,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;gu(s,"tile");const o=ff(n.bufferSync(s),a);return n.makeTensorInfo(o.shape,o.dtype,o.values)}},gf=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function yf(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const s=r-n+1,a=t-n+1,o=Math.log(s),i=.5*Math.exp(2*o/3),u=.5*Math.sqrt(o*i*(s-i)/s)*Math.sign(a-s/2);yf(e,t,Math.max(n,Math.floor(t-a*i/s+u)),Math.min(r,Math.floor(t+(s-a)*i/s+u)))}const s=e[t];let a=n,o=r;for(I.D5U.swap(e,n,t),gf(e[r],s)>0&&I.D5U.swap(e,n,r);a<o;){for(I.D5U.swap(e,a,o),a++,o--;gf(e[a],s)<0;)a+=1;for(;gf(e[o],s)>0;)o-=1}0===gf(e[n],s)?I.D5U.swap(e,n,o):(o+=1,I.D5U.swap(e,o,r)),o<=t&&(n=o+1),t<=o&&(r=o-1)}}function bf(e,t,n,r,s){const a=t[t.length-1],[o,i]=[e.length/a,a],u=I.D5U.getTypedArrayFromDType(n,o*r),l=I.D5U.getTypedArrayFromDType("int32",o*r);for(let p=0;p<o;p++){const t=p*i,n=e.subarray(t,t+i);let a=new Array(n.length);n.forEach(((e,t)=>a[t]={value:e,index:t})),r<a.length&&(yf(a,r),a=a.slice(0,r)),s&&a.sort(gf);const o=p*r,c=u.subarray(o,o+r),h=l.subarray(o,o+r);for(let e=0;e<r;e++)c[e]=a[e].value,h[e]=a[e].index}const c=t.slice();return c[c.length-1]=r,[(0,I.f3b)(c,n,u),(0,I.f3b)(c,"int32",l)]}const xf={kernelName:I.cWu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:o}=r;gu(s,"topk");const i=n.data.get(s.dataId).values,[u,l]=bf(i,s.shape,s.dtype,a,o);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}};const wf={kernelName:I.wx7,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:s,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:u,outputShape:l}=n,[c,p,h,d]=s.shape,[f,m]=null!=l?l:[p,h],g=[c,f,m,d],y=I.D5U.computeStrides(s.shape),b=y[0],x=y[1],w=y[2],v=I.D5U.getTypedArrayFromDType(s.dtype,I.D5U.sizeFromShape(g));v.fill(u);const k=r.data.get(s.dataId).values,N=r.data.get(a.dataId).values;for(let I=0;I<c;++I){const e=1===a.shape[0]?N:N.subarray(8*I,8*I+8);for(let t=0;t<f;++t)for(let n=0;n<m;++n)for(let r=0;r<d;++r){let s;const a=e[6]*n+e[7]*t+1;if(0===a)continue;const l=(e[0]*n+e[1]*t+e[2])/a,c=(e[3]*n+e[4]*t+e[5])/a,d=vf(l,h,i),f=vf(c,p,i);switch(o){case"nearest":s=If(k,p,h,b,x,w,I,f,d,r,u);break;case"bilinear":s=Nf(k,p,h,b,x,w,I,f,d,r,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}v[I*b+t*x+n*w+r]=s}return r.makeTensorInfo(g,s.dtype,v)}return{dataId:r.write(v,g,s.dtype),shape:s.shape,dtype:s.dtype}}};function vf(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return I.D5U.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return I.D5U.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return I.D5U.clamp(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function kf(e,t,n,r,s,a,o,i,u,l,c){return 0<=i&&i<t&&0<=u&&u<n?e[o*r+i*s+u*a+l]:c}function If(e,t,n,r,s,a,o,i,u,l,c){return kf(e,t,n,r,s,a,o,Math.round(i),Math.round(u),l,c)}function Nf(e,t,n,r,s,a,o,i,u,l,c){const p=Math.floor(i),h=Math.floor(u),d=p+1,f=h+1;return(d-i)*((f-u)*kf(e,t,n,r,s,a,o,p,h,l,c)+(u-h)*kf(e,t,n,r,s,a,o,p,f,l,c))+(i-p)*((f-u)*kf(e,t,n,r,s,a,o,d,h,l,c)+(u-h)*kf(e,t,n,r,s,a,o,d,f,l,c))}function Sf(e,t,n,r){const s=I.D5U.parseAxisParam(t,n)[0],a=[1,n[0],1];for(let f=0;f<s;f++)a[0]*=n[f];a[1]=n[s];for(let f=s+1;f<n.length;f++)a[2]*=n[f];const o={},i=new Int32Array(n[s]),u=new I.YDk(a,r,e),l=[],c=1===a[0]&&1===a[2];for(let f=0;f<n[s];f++){let t;if(c)t=e[f].toString();else{const e=[];for(let t=0;t<a[0];t++)for(let n=0;n<a[2];n++)e.push(u.get(t,f,n));t=e.join(",")}if(void 0!==o[t])i[f]=o[t];else{const e=Object.keys(o).length;o[t]=e,i[f]=e,l.push(f)}}const p=a.slice();p[1]=Object.keys(o).length;const h=new I.YDk(p,r);l.forEach(((e,t)=>{for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)h.set(u.get(n,e,r),n,t,r)}));const d=n.slice();return d[s]=p[1],{outputValues:h.values,outputShape:d,indices:i}}const Tf={kernelName:I.kpP,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;gu(a,"unique");const o=r.data.get(a.dataId).values,{outputValues:i,outputShape:u,indices:l}=Sf(o,s,a.shape,a.dtype);return[r.makeTensorInfo(u,a.dtype,i),r.makeTensorInfo([l.length],"int32",l)]}};const Cf={kernelName:I.ToN,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const o=s.shape.length,i=s.shape[a],u=new Array(o-1);let l=0;for(let d=0;d<o;d++)d!==a&&(u[l++]=s.shape[d]);const c=new Array(o).fill(0),p=s.shape.slice();p[a]=1;const h=new Array(i);for(let d=0;d<h.length;d++){c[a]=d;const e=Ll({inputs:{x:s},backend:n,attrs:{begin:c,size:p}});h[d]=Ju({inputs:{x:e},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(e)}return h}};const Ef={kernelName:I.Qvg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:o}=r;gu(s,"unsortedSegmentSum");const i=[],u=[],l=s.shape.length-a.shape.length;let c=a;for(let h=0;h<l;++h){const e=qc({inputs:{input:c},backend:n,attrs:{dim:h+1}});c=e,u.push(e)}for(let h=0;h<o;++h){const e=I.D5U.createScalarValue(h,"int32"),t=n.makeTensorInfo([],"int32",e),r=Oc({inputs:{a:t,b:c},backend:n}),a=Hu({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),o=Ec({inputs:{a:a,b:s},backend:n}),l=$c({inputs:{x:o},backend:n,attrs:{axis:0,keepDims:!1}});i.push(l),u.push(t),u.push(r),u.push(a),u.push(o),u.push(l)}const p=jh({inputs:i,backend:n,attrs:{axis:0}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},Af=[rl,al,il,ll,Yu,cl,fl,ml,gl,yl,xl,vl,Il,Tl,El,_l,Fl,Rl,Ol,nl,Ml,zl,Vl,Gl,ju,Xl,Kl,Pu,Ql,tc,rc,sc,ac,oc,ic,uc,cc,hc,dc,fc,mc,gc,yc,xc,wc,vc,kc,Ic,Nc,Sc,_c,ku,Fc,Mc,Gc,Xc,Kc,Yc,lp,pp,hp,mp,bp,xp,wp,kp,Np,Cp,$p,Nu,Dp,Jl,Fp,Op,Bp,Tu,zp,Vp,Hp,qp,Qp,Jp,th,sh,ah,oh,lh,hh,dh,fh,mh,gh,yh,bh,xh,kh,Ih,Th,$h,Ac,_h,Rh,Mh,Lh,Ph,Uh,Hh,Xh,qh,Zh,$u,Jh,td,Gu,tp,rd,_u,Ru,el,sd,ad,od,id,ud,ld,pd,fd,gd,xd,wd,Nd,Lu,Td,Ed,$d,Wl,Ah,Fd,Rd,Md,Ld,zd,Pd,Ud,Vd,jd,Xd,Qd,Yd,ef,rf,of,lf,ap,Dc,pf,df,mf,xf,wf,dl,Tf,Cf,Ef,Gh];for(const bI of Af)(0,I.wCN)(bI);const $f={},Df={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function _f(e,t){if(!(e in $f)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if("undefined"!==typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e):t;if(n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete $f[e]}),!1),1===e)return n.getContext("webgl",Df)||n.getContext("experimental-webgl",Df);return n.getContext("webgl2",Df)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;$f[e]=n}const n=$f[e];return null==n||n.isContextLost()?(delete $f[e],_f(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),$f[e])}var Ff,Rf,Of;function Mf(e,t){return[t,e]}function Bf(e){const t=I.D5U.sizeFromShape(e),n=Math.ceil(t/4);return I.D5U.sizeToSquarishShape(n)}function Lf(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function Wf(e,t){const n=e;let r,s,a,o,i,u,l,c,p,h;return 2===(0,I.OBj)().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,a=n.RGBA16F,o=n.RGBA32F,i=n.RED,l=4,c=1,p=n.HALF_FLOAT,h=n.FLOAT,u=n.RGBA8):(r=e.RGBA,s=e.RGBA,a=e.RGBA,o=n.RGBA,i=e.RGBA,l=4,c=4,p=null!=t?t.HALF_FLOAT_OES:null,h=e.FLOAT,u=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:o,textureFormatFloat:i,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:p,textureTypeFloat:h}}function zf(e,t){const n=t();return(0,I.OBj)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(Ff||(Ff={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(Rf||(Rf={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(Of||(Of={}));function Pf(e){return!!((0,I.OBj)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function Uf(e,t){return Zf(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}const Vf=/ERROR: [0-9]+:([0-9]+):/g;function Gf(e,t){const n=Vf.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],s=e.split("\n"),a=s.length.toString().length+2,o=s.map(((e,t)=>I.D5U.rightPad((t+1).toString(),a)+e));let i=0;for(let p=0;p<o.length;p++)i=Math.max(o[p].length,i);const u=o.slice(0,r-1),l=o.slice(r-1,r),c=o.slice(r);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${I.D5U.rightPad(l[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function Hf(e,t){if(zf(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function jf(e,t,n,r,s,a,o){const i=e.getAttribLocation(t,n);return-1!==i&&(zf(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),zf(e,(()=>e.vertexAttribPointer(i,s,e.FLOAT,!1,a,o))),zf(e,(()=>e.enableVertexAttribArray(i))),!0)}function Xf(e,t,n,r){zf(e,(()=>function(e,t,n){Yf(e,n),zf(e,(()=>e.activeTexture(e.TEXTURE0+n))),zf(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),zf(e,(()=>e.uniform1i(n,r)))}function qf(e,t,n){zf(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),zf(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function Kf(e,t){zf(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),zf(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function Qf(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function Zf(e,t,n){const r=zf(e,(()=>t()));if(null==r)throw new Error(n);return r}function Yf(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function Jf(e,t=2){return I.D5U.sizeFromShape(e.slice(0,e.length-t))}function em(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function tm(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[Jf(e),...em(e)]),t}function nm(e){return e%2===0}function rm(e,t){if(e=e.slice(-2),t=t.slice(-2),I.D5U.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(nm(n)&&nm(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&nm(e[0])&&nm(t[0])}let sm,am;function om(e,t){return null!=e.getExtension(t)}function im(e){try{if(null!=_f(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function um(e){if(0===e)return!1;const t=_f(e);if(1!==e){if(om(t,"EXT_color_buffer_float"))return lm(t);const e="EXT_color_buffer_half_float";if(om(t,e)){const n=t.getExtension(e);return function(e,t){const n=Wf(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);const s=1,a=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,s,a,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(o),i}(t,n)}return!1}if(!om(t,"OES_texture_float"))return!1;if(!om(t,"WEBGL_color_buffer_float"))return!1;return lm(t)}function lm(e){const t=Wf(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),s}function cm(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&I.D5U.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const pm=(0,I.OBj)();pm.registerFlag("HAS_WEBGL",(()=>pm.getNumber("WEBGL_VERSION")>0)),pm.registerFlag("WEBGL_VERSION",(()=>im(2)?2:im(1)?1:0)),pm.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),pm.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===pm.get("WEBGL_VERSION"))),pm.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),pm.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),pm.registerFlag("WEBGL_PACK",(()=>pm.getBool("HAS_WEBGL"))),pm.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>pm.getBool("WEBGL_PACK"))),pm.registerFlag("WEBGL_PACK_CLIP",(()=>pm.getBool("WEBGL_PACK"))),pm.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>pm.getBool("WEBGL_PACK"))),pm.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>pm.getBool("WEBGL_PACK"))),pm.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>pm.getBool("WEBGL_PACK"))),pm.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>pm.getBool("WEBGL_PACK"))),pm.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>pm.getBool("WEBGL_PACK"))),pm.registerFlag("WEBGL_PACK_REDUCE",(()=>pm.getBool("WEBGL_PACK"))),pm.registerFlag("WEBGL_LAZILY_UNPACK",(()=>pm.getBool("WEBGL_PACK"))),pm.registerFlag("WEBGL_CONV_IM2COL",(()=>pm.getBool("WEBGL_PACK"))),pm.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==sm){const t=_f(e);sm=t.getParameter(t.MAX_TEXTURE_SIZE)}return sm}(pm.getNumber("WEBGL_VERSION")))),pm.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==am){const t=_f(e);am=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,am)}(pm.getNumber("WEBGL_VERSION")))),pm.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=pm.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=_f(e);return t=om(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:om(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),pm.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>pm.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!I.C2$.isMobile())),pm.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=_f(e);if(1===e){if(!om(t,"OES_texture_float"))return!1}else if(!om(t,"EXT_color_buffer_float"))return!1;return lm(t)}(pm.getNumber("WEBGL_VERSION")))),pm.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!pm.getBool("WEBGL_FORCE_F16_TEXTURES")&&pm.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),pm.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>um(pm.getNumber("WEBGL_VERSION")))),pm.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=pm.getNumber("WEBGL_VERSION"))&&null!=_f(e).fenceSync;var e})),pm.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>pm.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),pm.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),pm.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>I.C2$.isMobile()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),pm.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),pm.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),pm.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),pm.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128));var hm=n(9610),dm=n(5156);function fm(e,t,n,r){const s=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),a=s.map((e=>e.shapeInfo)),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},i=dm.Vm(s,o,t),u=function(e,t){const n=Zf(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(zf(e,(()=>e.shaderSource(n,t))),zf(e,(()=>e.compileShader(n))),(0,I.OBj)().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw Gf(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,i),l=e.createProgram(u);return(0,I.OBj)().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:u,source:i,webGLProgram:l,inShapeInfos:a,outShapeInfo:o,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:u,source:i,webGLProgram:l,inShapeInfos:a,outShapeInfo:o},mm(e,t,l))}function mm(e,t,n){const r={},s={},a={},o=[];let i,u,l,c=null,p=null;p=e.getUniformLocation(n,"NAN",!1),1===(0,I.OBj)().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(n,"INFINITY",!1));const h=!1;for(let d=0;d<t.variableNames.length;d++){const o=t.variableNames[d];r[o]=e.getUniformLocation(n,o,h),r[`offset${o}`]=e.getUniformLocation(n,`offset${o}`,h),t.enableShapeUniforms&&(s[`${o}Shape`]=e.getUniformLocation(n,`${o}Shape`,h),a[`${o}TexShape`]=e.getUniformLocation(n,`${o}TexShape`,h))}return t.enableShapeUniforms&&(i=e.getUniformLocation(n,"outShape",h),l=e.getUniformLocation(n,"outShapeStrides",h),u=e.getUniformLocation(n,"outTexShape",h)),t.customUniforms&&t.customUniforms.forEach(((t,r)=>{o[r]=e.getUniformLocation(n,t.name,h)})),{uniformLocations:r,customUniformLocations:o,infLoc:c,nanLoc:p,inShapesLocations:s,inTexShapesLocations:a,outShapeLocation:i,outShapeStridesLocation:l,outTexShapeLocation:u}}function gm(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,s=t[n],a=s.shape;if(!I.D5U.arraysEqual(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(e.isUniform&&s.isUniform)return;const o=e.texShape,i=s.isUniform?null:s.texData.texShape;if(!I.D5U.arraysEqual(o,i))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${i} must match`)}))}function ym(e){return(0,I.OBj)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var bm=n(8110);class xm{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Ff.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=(0,hm.A)();this.outputShape=e,this.enableShapeUniforms=ym(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?bm.Kn(["r","c","d"],e):bm.RW(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class wm{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Ff.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=(0,hm.A)();this.outputShape=e,this.enableShapeUniforms=ym(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?bm.Kn(["r","c","d"],e):bm.RW(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class vm{constructor(e){this.variableNames=["A"],this.outTexUsage=Rf.DOWNLOAD;const t=(0,hm.A)();this.outputShape=e,this.userCode=`\n      ${bm.ye}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class km{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Rf.DOWNLOAD;const t=(0,hm.A)();this.outputShape=e,this.userCode=`\n      ${bm.ye}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class Im{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=(0,hm.A)();this.outputShape=e,this.enableShapeUniforms=ym(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?bm.nc():bm.ku(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}class Nm{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=(0,hm.A)();this.outputShape=e,this.enableShapeUniforms=ym(this.outputShape.length);let r="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let t=0;t<=1;t++){const s=2*a+t;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${t} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${t};\n          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${a};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?bm.nc():bm.ku(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${s};\n        }\n    `}}function Sm(e){const t=(0,hm.A)();return function(e,t){const n=Zf(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(zf(e,(()=>e.shaderSource(n,t))),zf(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function Tm(e){return function(e,t){const n=Zf(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return zf(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),zf(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function Cm(e){return function(e,t){const n=Zf(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return zf(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),zf(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}function Em(e,t,n,r,s,a){!function(e,t){const n=(0,I.OBj)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const o=function(e){return Zf(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),i=e.TEXTURE_2D;return zf(e,(()=>e.bindTexture(i,o))),zf(e,(()=>e.texParameteri(i,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),zf(e,(()=>e.texParameteri(i,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),zf(e,(()=>e.texParameteri(i,e.TEXTURE_MIN_FILTER,e.NEAREST))),zf(e,(()=>e.texParameteri(i,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===(0,I.OBj)().getNumber("WEBGL_VERSION")?zf(e,(()=>e.texImage2D(i,0,r,t,n,0,s,a,null))):zf(e,(()=>e.texStorage2D(i,1,r,t,n))),zf(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:o,texShape:[n,t]}}function Am(e){return e.internalFormatFloat}function $m(e){return e.internalFormatHalfFloat}function Dm(e){return e.downloadTextureFormat}function _m(e){return e.internalFormatPackedFloat}function Fm(e){return e.internalFormatPackedHalfFloat}function Rm(e,t,n,r,s,a,o,i){const u=e,l=new Float32Array(function(e,t){const[n,r]=Lf(e,t);return n*r*4}(a,o));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}class Om{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=(0,I.OBj)().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){$f[e]=t}(t,e)):this.gl=_f(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===(0,I.OBj)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=Uf(this.gl,e),om(this.gl,t))this.textureHalfFloatExtension=Uf(this.gl,t);else if((0,I.OBj)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),om(this.gl,r))this.colorBufferHalfFloatExtension=Uf(this.gl,r);else if((0,I.OBj)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",om(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!om(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=Tm(this.gl),this.indexBuffer=Cm(this.gl),this.framebuffer=function(e){return Zf(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=Wf(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,I.OBj)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;zf(e,(()=>e.finish())),zf(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),zf(e,(()=>e.deleteFramebuffer(this.framebuffer))),zf(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),zf(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),zf(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=Mf(t,n);return Em(e,s,a,Am(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=Mf(t,n);return Em(e,s,a,$m(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=Mf(t,n);return Em(e,s,a,Dm(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){zf(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===(0,I.OBj)().getNumber("WEBGL_VERSION")?zf(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):zf(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===(0,I.OBj)().getNumber("WEBGL_VERSION")?zf(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):zf(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),zf(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,s,a){let o,i,u;zf(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),s instanceof Uint8Array?(o=new Uint8Array(n*r*4),i=e.UNSIGNED_BYTE,u=e.RGBA):(o=new Float32Array(n*r*4),i=e.FLOAT,u=a.internalFormatPackedFloat),o.set(s),2===(0,I.OBj)().getNumber("WEBGL_VERSION")?zf(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,i,o))):zf(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,i,o))),zf(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=Lf(t,n);return Em(e,s,a,Fm(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=Lf(t,n);return Em(e,s,a,_m(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Kf(this.gl,this.framebuffer),this.outputTexture=null),zf(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[s,a]=Mf(t,n),o=new Uint8Array(t*n*4);return zf(e,(()=>e.readPixels(0,0,s,a,r.downloadTextureFormat,e.UNSIGNED_BYTE,o))),new Float32Array(o.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,s,a){return Rm(this.gl,e,0,0,0,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const s=e.createBuffer();zf(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,s)));const a=16*t*n;return zf(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ))),zf(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),zf(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),s}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if((0,I.OBj)().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(s,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=s}else(0,I.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,(0,I.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return zf(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=Sm(t));const n=function(e){return Zf(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return zf(t,(()=>t.attachShader(n,this.vertexShader))),zf(t,(()=>t.attachShader(n,e))),function(e,t){if(zf(e,(()=>e.linkProgram(t))),!(0,I.OBj)().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n),this.debug&&Hf(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=function(e,t,n){return zf(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),jf(e,t,"clipSpacePos",n,3,20,0)&&jf(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&zf(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&Hf(this.gl,this.program),zf(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return Zf(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),zf(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),Xf(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,s]=Lf(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&Hf(this.gl,this.program),Qf(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),zf(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),zf(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=Uf(this.gl,2===(0,I.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,I.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===(0,I.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await I.D5U.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,(0,I.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,(0,I.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||I.D5U.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),qf(this.gl,e,this.framebuffer),this.debug&&Qf(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(qf(this.gl,this.outputTexture,this.framebuffer),this.debug&&Qf(this.gl)):Kf(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;qf(r,e,this.framebuffer),this.debug&&Qf(r),this.outputTexture=e,zf(r,(()=>r.viewport(0,0,t,n))),zf(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),zf(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:Mm,bincountImpl:Bm,bincountReduceImpl:Lm,ceilImpl:Wm,concatImpl:zm,equalImpl:Pm,expImpl:Um,expm1Impl:Vm,floorImpl:Gm,gatherNdImpl:Hm,gatherV2Impl:jm,greaterImpl:Xm,greaterEqualImpl:qm,lessImpl:Km,lessEqualImpl:Qm,linSpaceImpl:Zm,logImpl:Ym,maxImpl:Jm,maximumImpl:eg,minimumImpl:tg,multiplyImpl:ng,negImpl:rg,notEqualImpl:sg,prodImpl:ag,rangeImpl:og,rsqrtImpl:ig,scatterImpl:ug,sigmoidImpl:lg,simpleAbsImpl:cg,sliceImpl:pg,sparseFillEmptyRowsImpl:hg,sparseReshapeImpl:dg,sparseSegmentReductionImpl:fg,sqrtImpl:mg,stridedSliceImpl:gg,stringNGramsImpl:yg,stringSplitImpl:bg,stringToHashBucketFastImpl:xg,subImpl:wg,tileImpl:vg,topKImpl:kg,transposeImpl:Ig,uniqueImpl:Ng}=k;function Sg(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function Tg(e,t){return 1===t?[e]:Sg(e,t)}class Cg{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=ym(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=Tg("rc",this.rank),t=(0,dm.kW)(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),s=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${s}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let s=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)s=`${e[e.length-1-t]},`+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){return`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`}return`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class Eg{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=ym(this.outputShape.length);let n="";for(let a=0;a<4;a++){let e="thisRC = rc;";a%2===1&&(e+="thisRC.z += 1;"),a>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${a>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${a}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${a>0?"}":""}\n      `}var r,s;this.userCode=`\n      ${r=t,s=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${s?bm.al(["r","c","d"],"inputShape"):bm.RW(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?bm.nc():bm.ku(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class Ag{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=Dg(t,n),s=_g(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const a=$g(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[s].shift();return this.usedTextures[s].push(e),e}let o;return r===Of.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===Of.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===Of.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===Of.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===Of.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(o),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),o}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const s=Dg(n,r),a=_g(t,s,r);a in this.freeTextures||(this.freeTextures[a]=[]);const o=$g(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),i=(0,I.OBj)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==i&&this._numBytesAllocated>i?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=o):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const u=this.usedTextures[a],l=u.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(l,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function $g(e,t,n,r,s){const a=function(e,t){switch(e){case Of.PACKED_2X2_FLOAT32:return _m(t);case Of.PACKED_2X2_FLOAT16:return Fm(t);case Of.UNPACKED_FLOAT32:return Am(t);case Of.UNPACKED_FLOAT16:return $m(t);case Of.PACKED_4X1_UNSIGNED_BYTE:return Dm(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let o;if(s){const[t,n]=Lf(e[0],e[1]);o=t*n}else{const[t,n]=Mf(e[0],e[1]);o=t*n}const i=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,a);return o*i}function Dg(e,t){if(e===Rf.UPLOAD)return Of.PACKED_2X2_FLOAT32;if(e===Rf.RENDER||null==e)return function(e){return(0,I.OBj)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?Of.PACKED_2X2_FLOAT32:Of.UNPACKED_FLOAT32:e?Of.PACKED_2X2_FLOAT16:Of.UNPACKED_FLOAT16}(t);if(e===Rf.DOWNLOAD||e===Rf.PIXELS)return Of.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function _g(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class Fg{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=ym(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const Rg="return abs(x);";const Og="return x;";class Mg{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=ym(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class Bg{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=ym(this.outputShape.length);const t=e.length,n=Tg("rc",t),r=(0,dm.kW)(t),s=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),o=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${o}));\n      }\n    `}}const Lg=I.GDt.ZA,Wg={};const zg=(0,I.OBj)().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class Pg extends I.Zuw{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!(0,I.OBj)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof Om)t=e;else{const n=_f((0,I.OBj)().getNumber("WEBGL_VERSION"),e);t=new Om(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=_f((0,I.OBj)().getNumber("WEBGL_VERSION"));t=new Om(e),this.binaryCache=((n=(0,I.OBj)().getNumber("WEBGL_VERSION"))in Wg||(Wg[n]={}),Wg[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new Ag(this.gpgpu),this.numMBBeforeWarning=null==(0,I.OBj)().global.screen?1024:(0,I.OBj)().global.screen.height*(0,I.OBj)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new I.JLz(this,(0,I.SRH)())}nextDataId(){return Pg.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if(((0,I.OBj)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,I.OBj)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:Rf.UPLOAD,refCount:1}),r}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,r,s){if((0,I.OBj)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:Rf.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:s,slice:a,shape:o,isPacked:i}=t;if(null!=a){let t;t=i?new Mg(o,Og):new Fg(o,Og);const n=this.runWebGLProgram(t,[{dataId:e,shape:o,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const u=null!=this.activeTimers;let l,c;if(u&&(l=I.D5U.now()),"complex64"===r){const e=this.readSync(s.real.dataId),t=this.readSync(s.imag.dataId);c=I.Wap.mergeRealAndImagArrays(e,t)}else c=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=I.D5U.now()-l),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:s,dtype:a,complexTensorInfos:o,isPacked:i}=t;if(null!=s){let t;t=i?new Mg(r,Og):new Fg(r,Og);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:a}],a),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if((0,I.OBj)().getBool("DEBUG")&&!(0,I.OBj)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===(0,I.OBj)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,c=null;if("complex64"!==a&&(0,I.OBj)().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...Bf(r))}if(this.pendingRead.set(e,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const e=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),t=e[0],n=e[1];l=I.Wap.mergeRealAndImagArrays(t,n)}else if(null==c)l=this.getValuesFromTexture(e);else{const e=I.D5U.sizeFromShape(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=c){const e=this.gpgpu.gl;zf(e,(()=>e.deleteBuffer(c)))}const p=this.convertAndCacheOnCPU(e,l),h=this.pendingRead.get(e);return this.pendingRead.delete(e),h.forEach((e=>e(p))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&(0,I.SRH)().removeDataId(e,this),this.pendingDeletes--),p}readToGPU(e,t={}){const n=this.texData.get(e),{values:r,shape:s,slice:a,dtype:o,isPacked:i,texture:u}=n;if("complex64"===o)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=a){let n;n=i?new Mg(s,Og):new Fg(s,Og);const r=this.runWebGLProgram(n,[{dataId:e,shape:s,dtype:o}],o),a=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),a}if(null==u)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(e,t.customTexShape),c=(0,I.SRH)().makeTensorFromTensorInfo(l),p=this.texData.get(l.dataId);return Object.assign({tensorRef:c},p.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>I.D5U.decodeString(e)));return(0,I.f3b)(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,I.f3b)(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!Pf(n)){if((0,I.OBj)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),s=I.D5U.sizeFromShape(t);if((0,I.OBj)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...Bf(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),a}const a=(0,I.OBj)().getBool("WEBGL_PACK")&&!0===r,o=a?tm(t):t,i=a?new km(o):new vm(o),u=this.runWebGLProgram(i,[{shape:o,dtype:n,dataId:e}],"float32"),l=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(u),c}timerAvailable(){return(0,I.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=I.D5U.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),a=I.D5U.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if((0,I.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);o.kernelMs=I.D5U.sum(e),o.getExtraProfileInfo=()=>e.map(((e,t)=>({name:a[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,I.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:I.D5U.now(),endMs:null}}endTimer(e){return(0,I.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=I.D5U.now(),e)}async getQueryTime(e){if((0,I.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:s,isPacked:a,slice:o}=this.texData.get(e),i=o&&o.origDataId||e,u=this.dataRefCount.get(i);u>1?this.dataRefCount.set(i,u-1):(this.dataRefCount.delete(i),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,s,a)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=zg){return(0,I.OBj)().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&I.D5U.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){I.Wap.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return Lg(e.shape,t)}packedUnaryOp(e,t,n){const r=new Mg(e.shape,t),s=this.compileAndRun(r,[e],n);return(0,I.SRH)().makeTensorFromTensorInfo(s)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=cg(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if((0,I.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Rg,e.dtype);const t=new Fg(e.shape,Rg),n=this.compileAndRun(t,[e]);return(0,I.SRH)().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&I.D5U.isString(n[0])){const s=n.map((e=>I.D5U.encodeString(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return(0,I.SRH)().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new Bg(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new Cg(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[Jf(e.shape),...em(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[Jf(t),...em(t)],a=new Eg(s,n),o=[n],i=this.runWebGLProgram(a,[r],e.dtype,o,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:s,dtype:a}=n;if(null!=t){const e=I.D5U.sizeFromShape(s),n=t[0]*t[1]*4;I.D5U.assert(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const o=tm(s);let i;i=r?new wm(o):new xm(o);const u=[null!=t?t:Bf(o)];return{dtype:a,shape:s,dataId:this.runWebGLProgram(i,[{shape:o,dtype:a,dataId:e}],a,u,!0,t).dataId}}runWebGLProgram(e,t,n,r,s=!1,a){const o=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(o.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===Ff.DENSE){const t=null!=a?a:Bf(e.outputShape);i.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===I.D5U.sizeFromShape(o.shape))return i.values=I.D5U.getTypedArrayFromDType(o.dtype,0),o;const u=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&I.D5U.sizeFromShape(t.shape)<=(0,I.OBj)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!==!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!rm(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),u.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(o.dataId);const c={shape:o.shape,texData:i,isUniform:!1},p=function(e,t,n){let r="";t.concat(n).forEach((t=>{const s=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const a=t.texData.texShape,{useSqueezeShape:o,uniformShape:i,keptDims:u}=dm.Tt(e.packedInputs,t.shape,a);let l="",c="",p="";if(1===i.length&&e.packedInputs){const e=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];l=`${e[0]>1}_${e[1]>1}`}else if(2!==i.length||e.packedInputs){if(i.length>2&&!e.packedInputs){const e=I.D5U.computeStrides(i);p=`${e[0]===a[1]}_${e[e.length-1]===a[1]}`}}else c=`${i[0]>1}_${i[1]>1}`;const h=t.shape.length,d=2===i.length&&I.D5U.arraysEqual(t.shape,a),f=1===I.D5U.sizeFromShape(t.shape),m=I.Wap.getBroadcastDims(t.shape,n.shape),g=!e.packedInputs&&h===n.shape.length&&I.D5U.arraysEqual(a,n.texData.texShape),y=e.packedInputs||i.length>2?"":`${a[0]>1}_${a[1]>1}`;r+=`${h}_${g}_${o?u:""}_${i.length}_${f}_${m}_${d}_${l}_${c}_${p}_${y}_${s}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${s}`}}));const s=e.userCode;let a=e.constructor.name;return a+="_"+r+"_"+s+`${(0,I.OBj)().getNumber("WEBGL_VERSION")}`,a}(e,l,c),h=this.getAndSaveBinary(p,(()=>fm(this.gpgpu,e,l,c))),d=null!=this.activeTimers;let f;d&&(f=this.startTimer()),(0,I.OBj)().get("ENGINE_COMPILE_ONLY")||function(e,t,n,r,s){t.program.enableShapeUniforms||(gm(t.inShapeInfos,n),gm([t.outShapeInfo],[r]));const a=r.texData.texture,o=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(a.texture,o[0],o[1]):e.setOutputMatrixTexture(a.texture,o[0],o[1]),e.setProgram(t.webGLProgram),1===(0,I.OBj)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const s=t.program.variableNames[r],a=t.uniformLocations[s],o=t.uniformLocations[`offset${s}`],i=t.inShapesLocations[`${s}Shape`],u=t.inTexShapesLocations[`${s}TexShape`];if(i){const{uniformShape:r}=dm.Tt(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(i,new Int32Array(r));break;case 2:e.gl.uniform2iv(i,new Int32Array(r));break;case 3:e.gl.uniform3iv(i,new Int32Array(r));break;case 4:e.gl.uniform4iv(i,new Int32Array(r))}}if(u&&e.gl.uniform2i(u,n.texData.texShape[0],n.texData.texShape[1]),null!=a)if(n.isUniform)if(I.D5U.sizeFromShape(n.shape)<2)e.gl.uniform1f(a,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}else null!=n.texData.slice&&null!=o&&e.gl.uniform1i(o,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture.texture,a,r)}));const i=t.outShapeLocation;if(i)switch(r.shape.length){case 1:e.gl.uniform1iv(i,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(i,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(i,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(i,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=I.D5U.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&s&&t.program.customUniforms.forEach(((n,r)=>{const a=t.customUniformLocations[r],o=s[r];if("float"===n.type)e.gl.uniform1fv(a,o);else if("vec2"===n.type)e.gl.uniform2fv(a,o);else if("vec3"===n.type)e.gl.uniform3fv(a,o);else if("vec4"===n.type)e.gl.uniform4fv(a,o);else if("int"===n.type)e.gl.uniform1iv(a,o);else if("ivec2"===n.type)e.gl.uniform2iv(a,o);else if("ivec3"===n.type)e.gl.uniform3iv(a,o);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(a,o)}})),e.executeProgram()}(this.gpgpu,h,l,c,r),u.forEach((e=>this.disposeIntermediateTensorInfo(e))),d&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=(0,I.OBj)().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=I.D5U.now();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!(0,I.OBj)().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===s){const e=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),e}return o}compileAndRun(e,t,n,r,s=!1){n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,r,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!(0,I.OBj)().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=(0,I.lub)((()=>{if(!(0,I.OBj)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=(0,I.OBj)().getBool("DEBUG");(0,I.OBj)().set("DEBUG",!1);const t=this.abs((0,I.iD$)(1e-8)).dataSync()[0];if((0,I.OBj)().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:s,texture:a,usage:o,isPacked:i}=t;if(null!=a)return;const u=null!=this.activeTimers;let l;u&&(l=I.D5U.now());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=(0,I.OBj)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?I.D5U.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=I.D5U.squeezeShape(e);e=t.newShape}let r=I.D5U.sizeFromShape(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=Jf(e);let n=2,s=2;return e.length&&([n,s]=em(e)),r=t*(n/2)*(s/2),I.D5U.sizeToSquarishShape(r).map((e=>2*e))}return I.D5U.sizeToSquarishShape(r)}(n,i),t.texShape=c),null!=s){const e=tm(n);let a,o=c[1],p=c[0];const h=s instanceof Uint8Array||s instanceof Uint8ClampedArray;!i&&h||([o,p]=Lf(c[0],c[1])),a=i?new Nm(e,h):new Im(e,h);const d=h?[p,o]:c,f=this.makeTensorInfo(d,r),m=this.texData.get(f.dataId);m.usage=h?Rf.PIXELS:Rf.UPLOAD,m.texShape=d,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),o,p,s);const g=[[p,o]],y=!0,b=this.runWebGLProgram(a,[f],r,g,y),x=this.texData.get(b.dataId);t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,(0,I.OBj)().get("ENGINE_COMPILE_ONLY")?this.disposeData(b.dataId):(t.texture=x.texture,t.values=null,this.texData.delete(b.dataId)),this.disposeIntermediateTensorInfo(f),u&&(this.uploadWaitMs+=I.D5U.now()-l)}else{const e=this.acquireTexture(c,o,r,i);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*I.D5U.bytesPerElement(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(n){throw n}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await(0,I.glt)(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw Gf(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const[,e]of Object.entries(this.binaryCache)){const{uniformLocations:t,customUniformLocations:n,infLoc:r,nanLoc:s,inShapesLocations:a,inTexShapesLocations:o,outShapeLocation:i,outShapeStridesLocation:u,outTexShapeLocation:l}=mm(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=s,e.inShapesLocations=a,e.inTexShapesLocations=o,e.outShapeLocation=i,e.outShapeStridesLocation=u,e.outTexShapeLocation=l}}}Pg.nextDataId=0;I.C2$.isBrowser()&&(0,I.jqO)("webgl",(()=>new Pg),2);class Ug{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=I.Wap.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=ym(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class Vg{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=I.Wap.assertAndGetBroadcastShape(t,n);const s=this.outputShape.length;this.enableShapeUniforms=ym(s);let a="";if(r)if(0===s||1===I.D5U.sizeFromShape(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(a=`\n          ${(0,dm.kW)(s)} coords = getOutputCoords();\n        `,1===s)this.enableShapeUniforms?a+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=Tg("coords",s);this.enableShapeUniforms?a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= outShape[${s} - 2];\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= outShape[${s} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}function Gg(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Hg={kernelName:I.iJz,backendName:"webgl",kernelFunc:Gg};function jg(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.makeTensorInfo(r.shape,"complex64"),o=n.texData.get(a.dataId),i=Gg({inputs:{x:r},backend:n}),u=Gg({inputs:{x:s},backend:n});return o.complexTensorInfos={real:i,imag:u},a}const Xg={kernelName:I.Zz9,backendName:"webgl",kernelFunc:jg},qg="return (a < 0.) ? b * a : a;",Kg="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const Qg={kernelName:I.J$2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r,o=n.makeTensorInfo([],"float32",I.D5U.createScalarValue(a,"float32")),i=(0,I.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Vg(Kg,s.shape,o.shape):new Ug(qg,s.shape,o.shape),u=n.runWebGLProgram(i,[s,o],"float32");return n.disposeIntermediateTensorInfo(o),u}},Zg="return (a < 0.) ? b * a : a;",Yg="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const Jg={kernelName:I.o0g,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,a=(0,I.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Vg(Yg,r.shape,s.shape):new Ug(Zg,r.shape,s.shape);return n.runWebGLProgram(a,[r,s],"float32")}};function ey({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:a})=>{const{x:o}=s,i=a,u=r||o.dtype;if(i.shouldExecuteOnCPU([o])&&null!=n){const e=i.texData.get(o.dataId),t=n(e.values,u);return i.makeTensorInfo(o.shape,u,t)}let l;return l=(0,I.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new Mg(o.shape,t):new Fg(o.shape,e),i.runWebGLProgram(l,[o],u)}}function ty({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:a}){return({inputs:o,backend:i})=>{const{a:u,b:l}=o,c=i;if(r&&"complex64"===u.dtype){const t=c.texData.get(u.dataId),n=c.texData.get(l.dataId),[r,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,s={dataId:n.dataId,dtype:n.dtype,shape:u.shape},a={dataId:r.dataId,dtype:r.dtype,shape:l.shape},o=new Ug(e,u.shape,l.shape);return c.runWebGLProgram(o,[s,a],(0,I.x8V)(n.dtype,r.dtype))})),a=jg({inputs:{real:r,imag:s},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(s),a}const p=a||(0,I.x8V)(u.dtype,l.dtype);if(("string"===u.dtype||"string"===l.dtype||c.shouldExecuteOnCPU([u,l]))&&null!=s){const e=c.texData.get(u.dataId).values,t=c.texData.get(l.dataId).values,n="string"===u.dtype?I.Wap.fromUint8ToStringArray(e):e,r="string"===u.dtype?I.Wap.fromUint8ToStringArray(t):t,[a,o]=s(u.shape,l.shape,n,r,p),i=c.makeTensorInfo(o,p);return c.texData.get(i.dataId).values=a,i}let h;return h=(0,I.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new Vg(t,u.shape,l.shape,n):new Ug(e,u.shape,l.shape),c.runWebGLProgram(h,[u,l],p)}}function ny(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?Yg:Zg;if("leakyrelu"===e)return t?Kg:qg;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class ry{constructor(e,t,n,r=!1,s=!1,a=!1,o=null,i=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=ym(this.outputShape.length);const l=r?e[1]:e[2],c=Math.ceil(l/2),p=r?"i * 2, rc.y":"rc.y, i * 2",h=s?"rc.z, i * 2":"i * 2, rc.z",d=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";o&&(m=i?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${o}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${o}\n        }`:`vec4 activation(vec4 x) {\n          ${o}\n        }`,g="result = activation(result);");const y=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${b};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${p});\n          vec4 b = getMatrixB(batchB, ${h});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${d[0]} * ${f[0]});\n          result += (${d[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}const sy="return areal * breal - aimag * bimag;",ay="return areal * bimag + aimag * breal;";class oy{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=I.Wap.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const iy="return a * b;";function uy(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,a=I.Wap.upcastType(r.dtype,s.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),a=new oy(sy,r.shape,s.shape),o=new oy(ay,r.shape,s.shape),i=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],u=n.runWebGLProgram(a,i,"float32"),l=n.runWebGLProgram(o,i,"float32"),c=jg({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,s])){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),[o,i]=ng(r.shape,s.shape,e.values,t.values,a),u=n.makeTensorInfo(i,a);return n.texData.get(u.dataId).values=o,u}let o;return o=(0,I.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Vg(iy,r.shape,s.shape):new Ug(iy,r.shape,s.shape),n.runWebGLProgram(o,[r,s],a)}const ly={kernelName:I.wYn,backendName:"webgl",kernelFunc:uy};function cy(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,o=n,i=I.D5U.sizeFromShape(s.shape),u=I.D5U.inferFromImplicitShape(a,i),l=I.D5U.sizeFromShape(u);I.D5U.assert(i===l,(()=>`The new shape (${u}) has ${l} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`));const c=o.texData.get(s.dataId);return!c.isPacked||rm(s.shape,u)||null!==c.texture&&rm(c.shape,u)?(o.incRef(s.dataId),{dataId:s.dataId,shape:u,dtype:s.dtype}):function(e,t,n){const r=[Jf(e.shape),...em(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},a=[Jf(t),...em(t)],o=new Eg(a,r),i=[r],u=n.runWebGLProgram(o,[s],e.dtype,i,!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}}(s,u,o)}const py={kernelName:I.HZH,backendName:"webgl",kernelFunc:cy};class hy{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];const o=4*Math.floor(n/4),i=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${I.D5U.isInt(e)?e.toPrecision(2):e}, ones);`}let l="";s%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===i}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===i}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===i}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class dy{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];let o="0.0",i="";"prod"===t?o="1.0":"min"===t?(o="1.0 / 1e-20",i="min"):"max"===t&&(o="-1.0 / 1e-20",i="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let p=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${i}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${i}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,h="vec4";"all"===t?(o="1.0",p="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",h="bvec4"):"any"===t&&(o="0.0",p="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",h="bvec4");let d="";s%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${o};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${o});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${p}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${p}\n        } else if (${2===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${p}\n        } else if (${3===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${p}\n        }\n        setOutput(${u});\n      }\n    `}}function fy(e,t,n,r){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=I.Wap.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let a=e;for(let o=0;o<s.length;o++){const{inSize:i,windowSize:u,outSize:l}=s[o];let c,p;c="mean"===n?0===o?new hy({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:l},i):new hy({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:l}):new dy({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:l},n),p=a,a=r.runWebGLProgram(c,[a],t),p.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(p)}return a}class my{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;const r=(0,dm.kW)(this.rank),s=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let s=0;s<e.length;s++)r[e[s]]=n[s];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class gy{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let l=0;l<n.length;l++)n[l]=e[t[l]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=(0,dm.kW)(this.rank),s=Sg("rc",this.rank),a=new Array(this.rank);for(let l=0;l<t.length;l++)a[t[l]]=s[l];const o=`vec2(${a.slice(-2).join()})`,i=`++${s[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${o})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${i}) {\n        result[1] = ${u};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${i}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function yy(e,t,n){const r=(0,I.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new gy(e.shape,t):new my(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function by(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r;return function(e,t,n,r){const s=t,a=e.shape.length,o=I.D5U.parseAxisParam(s,e.shape);let i=o;const u=I.Wap.getAxesPermutation(i,a),l=null!=u;let c=e;l&&(c=yy(e,u,r),i=I.Wap.getInnerMostAxes(i.length,a)),I.Wap.assertAxesAreInnerMostDims("sum",i,a);const[p,h]=I.Wap.computeOutAndReduceShapes(c.shape,i);let d=p;n&&(d=I.Wap.expandShapeToKeepDim(p,o));const f=I.D5U.sizeFromShape(h),m=cy({inputs:{x:c},attrs:{shape:[I.D5U.sizeFromShape(e.shape)/f,f]},backend:r}),g=fy(m,(0,I.z4k)(e.dtype),"sum",r),y=cy({inputs:{x:g},attrs:{shape:d},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),l&&r.disposeIntermediateTensorInfo(c),y}(s,a,o,n)}const xy={kernelName:I.GBy,backendName:"webgl",kernelFunc:by};function wy(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:a}=r,o=n,i=s.shape.length,u=new Array(i);for(let c=0;c<u.length;c++)u[c]=s.shape[a[c]];let l;if(o.shouldExecuteOnCPU([s])){const e=o.texData.get(s.dataId).values,t=Ig(e,s.shape,s.dtype,a,u);l=o.makeTensorInfo(u,s.dtype);o.texData.get(l.dataId).values=t}else l=yy(s,a,o);return l}const vy={kernelName:I.G3Y,backendName:"webgl",kernelFunc:wy};function ky({a:e,b:t,transposeA:n,transposeB:r,backend:s,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:u=null}){const l=e.shape.length,c=t.shape.length,p=n?e.shape[l-2]:e.shape[l-1],h=r?t.shape[c-1]:t.shape[c-2],d=n?e.shape[l-1]:e.shape[l-2],f=r?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=I.D5U.sizeFromShape(m),b=I.D5U.sizeFromShape(g),x=I.Jyw.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([d,f]);I.D5U.assert(p===h,(()=>`Error in matMul: inner shapes (${p}) and (${h}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const w=n?[y,p,d]:[y,d,p],v=r?[b,f,h]:[b,h,f],k=cy({inputs:{x:e},backend:s,attrs:{shape:w}}),N=cy({inputs:{x:t},backend:s,attrs:{shape:v}}),S=[k,N],T=Math.max(y,b),C=n?k.shape[1]:k.shape[2],E=null!=a,A=null!=o,$="leakyrelu"===u,D=null!=u?ny(u,!0):null;let _;if((1===d||1===f)&&C>1e3&&!1===(E||A||$||null!=D)){let e=k,t=N;n&&(e=wy({inputs:{x:k},backend:s,attrs:{perm:[0,2,1]}}),S.push(e)),r&&(t=wy({inputs:{x:N},backend:s,attrs:{perm:[0,2,1]}}),S.push(t));const a=1===f;let o=e;1!==f&&(o=cy({inputs:{x:e},backend:s,attrs:{shape:[T,C,1]}}),S.push(o));const i=1===f?2:1;let u=t;a&&(u=cy({inputs:{x:t},backend:s,attrs:{shape:[T,1,C]}}),S.push(u));const l=uy({inputs:{a:o,b:u},backend:s});_=by({inputs:{x:l},backend:s,attrs:{axis:i,keepDims:!0}}),S.push(l)}else{const u=(0,I.x8V)(e.dtype,t.dtype),l=new ry(w,v,[T,d,f],n,r,E,D,A,$),c=[k,N];if(null!=a&&c.push(a),A&&c.push(o),$){const e=s.makeTensorInfo([],"float32",I.D5U.createScalarValue(i,"float32"));c.push(e),S.push(e)}_=s.runWebGLProgram(l,c,u)}const F=cy({inputs:{x:_},backend:s,attrs:{shape:x}});S.push(_);for(const I of S)s.disposeIntermediateTensorInfo(I);return F}const Iy={kernelName:I.usg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:o,preluActivationWeights:i}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:p}=r;return ky({a:s,b:a,transposeA:u,transposeB:l,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:p,activation:c})}},Ny="return abs(x);";const Sy={kernelName:I.SYM,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=cg(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let s;return s=(0,I.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Mg(r.shape,Ny):new Fg(r.shape,Ny),n.runWebGLProgram(s,[r],r.dtype)}},Ty=ey({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),Cy={kernelName:I.VGw,backendName:"webgl",kernelFunc:Ty},Ey=ey({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),Ay={kernelName:I.SpW,backendName:"webgl",kernelFunc:Ey},$y="return a + b;",Dy=ty({opSnippet:$y,packedOpSnippet:$y,supportsComplex:!0,cpuKernelImpl:Mm}),_y={kernelName:I.mm_,backendName:"webgl",kernelFunc:Dy};class Fy{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class Ry{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const Oy={kernelName:I.Xze,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,s=n;if(1===s.length)return Gg({inputs:{x:s[0]},backend:r});if(s.length>(0,I.OBj)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:r}),a=e({inputs:s.slice(t),backend:r});return e({inputs:[n,a],backend:r})}const a=s.map((e=>e.dtype)).reduce(((e,t)=>(0,I.x8V)(e,t))),o=s.map((e=>e.shape)),i=(0,I.OBj)().getBool("WEBGL_PACK")?new Ry(s[0].shape,o):new Fy(s[0].shape,o);return r.runWebGLProgram(i,s,a)}};const My={kernelName:I.oT6,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=s.shape.length,u=I.D5U.parseAxisParam(a,s.shape);let l=u;const c=I.Wap.getAxesPermutation(l,i);let p=s;null!=c&&(p=wy({inputs:{x:s},backend:n,attrs:{perm:c}}),l=I.Wap.getInnerMostAxes(l.length,i)),I.Wap.assertAxesAreInnerMostDims("all",l,i);const[h,d]=I.Wap.computeOutAndReduceShapes(p.shape,l),f=cy({inputs:{x:p},backend:n,attrs:{shape:[-1,I.D5U.sizeFromShape(d)]}}),m=fy(f,f.dtype,"all",n);let g;if(o){g=cy({inputs:{x:m},backend:n,attrs:{shape:I.Wap.expandShapeToKeepDim(h,u)}})}else g=cy({inputs:{x:m},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(p),g}};const By={kernelName:I.IKK,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=s.shape.length,u=I.D5U.parseAxisParam(a,s.shape);let l=u;const c=I.Wap.getAxesPermutation(l,i);let p=s;null!=c&&(p=wy({inputs:{x:s},backend:n,attrs:{perm:c}}),l=I.Wap.getInnerMostAxes(l.length,i)),I.Wap.assertAxesAreInnerMostDims("any",l,i);const[h,d]=I.Wap.computeOutAndReduceShapes(p.shape,l),f=cy({inputs:{x:p},backend:n,attrs:{shape:[-1,I.D5U.sizeFromShape(d)]}}),m=fy(f,f.dtype,"any",n);let g;if(o){g=cy({inputs:{x:m},backend:n,attrs:{shape:I.Wap.expandShapeToKeepDim(h,u)}})}else g=cy({inputs:{x:m},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(p),g}};class Ly{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];const o="max"===t?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${i};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${o} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class Wy{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,I.D5U.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=e[e.length-1],a=Math.ceil(s/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const o=this.outputShape,i=o.length,u=(0,dm.kW)(i),l=Tg("coords",i);let c,p;if(1===a){p=i+1;const e=(0,dm.kW)(p);c=`\n        ${e} sourceLocR = ${e}(${l.join()}, 0);\n        ++${l[i-1]};\n        ${e} sourceLocG = ${e}(${l.join()}, 0);\n        ++${l[i-2]};\n        ${e} sourceLocA = ${e}(${l.join()}, 0);\n        --${l[i-1]};\n        ${e} sourceLocB = ${e}(${l.join()}, 0);\n        --${l[i-2]};`}else p=i,c=`\n        ${u} sourceLocR = coords;\n        ++${l[i-1]};\n        ${u} sourceLocG = coords;\n        ++${l[i-2]};\n        ${u} sourceLocA = coords;\n        --${l[i-1]};\n        ${u} sourceLocB = coords;\n        --${l[i-2]};`;const h=["x","y","z","w","u","v"].slice(0,p),d="."+h[p-1],f=h.map((e=>"int "+e)),m=Tg("sourceLocR",p-1).concat("inIdx.r"),g=Tg("sourceLocG",p-1).concat("inIdx.g"),y=Tg("sourceLocB",p-1).concat("inIdx.b"),b=Tg("sourceLocA",p-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,v=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${h.join()}),\n                                          vec2(${h.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${h.join()}),\n                               vec2(${h.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${l[i-1]} < ${o[i-1]-1};\n        bool hasNextRow = ${l[i-2]} < ${o[i-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${d}, sourceLocG${d},\n          sourceLocB${d}, sourceLocA${d}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function zy(e,t,n,r=null){let s=t.shape[0],a=t.shape[1];null!=r&&(s=r.shape[0],a=r.shape[1]);const o=I.Wap.computeOptimalWindowSize(a),i={windowSize:o,inSize:a,batchSize:s,outSize:Math.ceil(a/o)},u=new Ly(i,n,null==r),l=[t];null!=r&&l.push(r);const c=e.runWebGLProgram(u,l,"int32");if(1===c.shape[1])return c;const p=zy(e,t,n,c);return e.disposeIntermediateTensorInfo(c),p}function Py(e,t,n,r=null){const s=null!=r?r.shape:t.shape,a=s[s.length-1],o=I.Wap.computeOptimalWindowSize(a),i=new Wy(s,o,n,null==r),u=null==r?[t]:[t,r],l=e.runWebGLProgram(i,u,"int32");if(l.shape.length===t.shape.length){const r=Py(e,t,n,l);return e.disposeIntermediateTensorInfo(l),r}return l}function Uy(e,t,n,r){const s=[n];if(I.Wap.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!(0,I.OBj)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],a=e.texData.get(t.dataId);let o=t;null!==a&&a.isPacked&&(o=e.unpackTensor(t),n.push(o));const[i,u]=I.Wap.computeOutAndReduceShapes(o.shape,s),l=I.D5U.sizeFromShape(u),c=cy({inputs:{x:o},backend:e,attrs:{shape:[-1,l]}});n.push(c);const p=zy(e,c,r);n.push(p);const h=cy({inputs:{x:p},backend:e,attrs:{shape:i}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),h}return Py(e,t,r)}const Vy={kernelName:I.sJF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let o=I.D5U.parseAxisParam(a,s.shape);const i=I.Wap.getAxesPermutation(o,s.shape.length);let u=s;const l=[];null!=i&&(u=wy({inputs:{x:s},backend:n,attrs:{perm:i}}),l.push(u),o=I.Wap.getInnerMostAxes(o.length,u.shape.length)),I.Wap.assertAxesAreInnerMostDims("argMax",[o[0]],u.shape.length);const c=Uy(n,u,o[0],"max");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}};const Gy={kernelName:I.aJk,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let o=I.D5U.parseAxisParam(a,s.shape);const i=I.Wap.getAxesPermutation(o,s.shape.length);let u=s;const l=[];null!=i&&(u=wy({inputs:{x:s},backend:n,attrs:{perm:i}}),l.push(u),o=I.Wap.getInnerMostAxes(o.length,u.shape.length)),I.Wap.assertAxesAreInnerMostDims("argMin",[o[0]],u.shape.length);const c=Uy(n,u,o[0],"min");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},Hy=ey({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),jy={kernelName:I.M2y,backendName:"webgl",kernelFunc:Hy},Xy=ey({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),qy={kernelName:I.qw7,backendName:"webgl",kernelFunc:Xy},Ky=ey({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),Qy={kernelName:I.jMg,backendName:"webgl",kernelFunc:Ky},Zy=ty({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Yy={kernelName:I.QCc,backendName:"webgl",kernelFunc:Zy},Jy=ey({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),eb={kernelName:I.Oyi,backendName:"webgl",kernelFunc:Jy};class tb{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,o=e.strideHeight,i=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,p=e.effectiveFilterWidth,h=e.padInfo.top,d=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${o}, ${i});\n        const ivec2 pads = ivec2(${h}, ${d});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?m:g:`wR * ${p} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");const x=4*Math.floor(a/4),w=a%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${o}, ${i});\n      const ivec2 pads = ivec2(${h}, ${d});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class nb{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,o=e.strideDepth,i=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,p=e.dilationWidth,h=e.effectiveFilterDepth,d=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${o}, ${i}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${h};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${d};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${p}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${d} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(w="avgValue / count");const v=4*Math.floor(a/4),k=a%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${o}, ${i}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${h};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${p};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${p}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${p}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${p}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${w});\n        }\n      }\n    `}}const rb={kernelName:I.JhU,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;cm(s,"avgPool");const{filterSize:a,strides:o,pad:i,dimRoundingMode:u}=r;I.D5U.assert(I.Wap.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const l=I.Wap.computePool2DInfo(s.shape,a,o,1,i,u);if(1===l.filterWidth&&1===l.filterHeight&&I.D5U.arraysEqual(l.inShape,l.outShape))return Gg({inputs:{x:s},backend:n});const c=new tb(l,"avg",!1);return n.runWebGLProgram(c,[s],"float32")}};const sb={kernelName:I._k9,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:o,pad:i,dimRoundingMode:u,dataFormat:l}=r,c=I.Wap.computePool3DInfo(s.shape,a,o,[1,1,1],i,u,l),p=new nb(c,"avg",!1);return n.runWebGLProgram(p,[s],"float32")}};class ab{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=i-1-e.padInfo.top,c=u-1-e.padInfo.left,p=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${p});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${i};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${o}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ob{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,p=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=c-1-e.padInfo.front,f=p-1-e.padInfo.top,m=h-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${i}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${p};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${o}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const ib={kernelName:I.IMb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,o=a,{filterSize:i,strides:u,pad:l,dimRoundingMode:c}=r,p=I.Wap.computePool3DInfo(o.shape,i,u,[1,1,1],l,c),h=new ob(p);return n.runWebGLProgram(h,[s],o.dtype)}};const ub={kernelName:I.ROF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,o=a;cm([s,a],"avgPoolGrad");const{filterSize:i,strides:u,pad:l}=r,c=I.Wap.computePool2DInfo(o.shape,i,u,1,l),p=new ab(c);return n.runWebGLProgram(p,[s],o.dtype)}};const lb={kernelName:I.XLW,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:o,transposeB:i}=r;return ky({a:s,b:a,transposeA:o,transposeB:i,backend:n})}};class cb{constructor(e,t,n,r,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],I.Wap.assertAndGetBroadcastShape(e,t),I.Wap.assertAndGetBroadcastShape(e,n);let o="0.0";null!=r&&(I.Wap.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="1.0";null!=s&&(I.Wap.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${o};\n        float scale = ${i};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class pb{constructor(e,t,n,r,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],I.Wap.assertAndGetBroadcastShape(e,t),I.Wap.assertAndGetBroadcastShape(e,n);let o="vec4(0.0)";null!=r&&(I.Wap.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="vec4(1.0)";null!=s&&(I.Wap.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${o};\n        vec4 scale = ${i};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const hb={kernelName:I.sHE,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:s,variance:a,offset:o,scale:i}=e;I.D5U.assert(s.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),I.D5U.assert(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),I.D5U.assert(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=n;null==u&&(u=.001);const l=[r,s,a];let c=null;null!=o&&(c=o.shape,l.push(o));let p=null;null!=i&&(p=i.shape,l.push(i));const h=(0,I.OBj)().getBool("WEBGL_PACK_NORMALIZATION")?new pb(r.shape,s.shape,a.shape,c,p,u):new cb(r.shape,s.shape,a.shape,c,p,u);return t.runWebGLProgram(h,l,l[0].dtype)}};class db{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=(0,dm.kW)(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return fb.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${fb[t]} = start[${t}] + coords.${fb[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const fb=["x","y","z","w","u","v"];class mb{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=(0,dm.kW)(this.rank),n=Tg("coords",this.rank),r=Tg("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,o=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${a};\n        --${r[this.rank-1]};\n      }\n    `,i=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${o}\n        ${i}\n        setOutput(result);\n      }\n    `}}function gb(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:o}=r,[i,u]=I.kuN.parseSliceParams(s,a,o);if(I.kuN.assertParamsValid(s,i,u),0===I.D5U.sizeFromShape(u))return n.makeTensorInfo(u,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=pg(e.values,i,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,t)}const{isPacked:l}=n.texData.get(s.dataId),c=I.kuN.isSliceContinous(s.shape,i,u);if(l||!c){const e=(0,I.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new mb(u):new db(u),t=[i];return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),function(e,t,n,r){const s=r.texData.get(e.dataId),a=r.makeTensorInfo(n,e.dtype),o=r.texData.get(a.dataId);Object.assign(o,s),o.refCount=1,o.shape=n,o.dtype=e.dtype;let i=I.kuN.computeFlatOffset(t,I.D5U.computeStrides(e.shape));s.slice&&(i+=s.slice.flatOffset),o.slice={flatOffset:i,origDataId:s.slice&&s.slice.origDataId||e.dataId};const u=r.dataRefCount.get(o.slice.origDataId)||1;return r.dataRefCount.set(o.slice.origDataId,u+1),a}(s,i,u,n)}const yb={kernelName:I.p2w,backendName:"webgl",kernelFunc:gb},bb={kernelName:I.zws,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:o}=r;I.D5U.assert(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const i=a.reduce(((e,t)=>e*t)),u=I.Wap.getReshaped(s.shape,a,i),l=I.Wap.getPermuted(u.length,a.length),c=I.Wap.getReshapedPermuted(s.shape,a,i),p=I.Wap.getSliceBeginCoords(o,a.length),h=I.Wap.getSliceSize(c,o,a.length),d=[],f=cy({inputs:{x:s},backend:n,attrs:{shape:u}}),m=wy({inputs:{x:f},backend:n,attrs:{perm:l}}),g=cy({inputs:{x:m},backend:n,attrs:{shape:c}}),y=gb({inputs:{x:g},backend:n,attrs:{begin:p,size:h}});return d.push(f),d.push(m),d.push(g),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};const xb={kernelName:I.zvY,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:o}=r,i=n.readSync(s.dataId),u=n.readSync(a.dataId),l=Bm(i,u,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,l)}};const wb={kernelName:I.eEB,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.readSync(r.dataId),o=n.readSync(s.dataId),i=I.Wap.assertAndGetBroadcastShape(Array.from(a),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}},vb=ty({opSnippet:"return float(a != b);",cpuKernelImpl:sg,dtype:"bool"}),kb={kernelName:I.yQU,backendName:"webgl",kernelFunc:vb};function Ib(e){const{inputs:t,backend:n}=e,{input:r}=t;return Gg({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const Nb={kernelName:I.xJR,backendName:"webgl",kernelFunc:Ib};const Sb={kernelName:I.RFZ,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:s}=t,{x:a}=n,{dtype:o}=s;if("complex64"===o){if("complex64"===a.dtype)return Gg({inputs:{x:a},backend:r});const t=I.lls(a.shape),n=e({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),s=jg({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===a.dtype){const t=Ib({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:o}});return r.disposeIntermediateTensorInfo(t),n}if(!I.D5U.hasEncodingLoss(a.dtype,o)){const e=Gg({inputs:{x:a},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:o}}if("int32"===o)return function(e,t){const n=new Fg(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(a,r);if("bool"===o){const e=r.makeTensorInfo([],"bool",I.D5U.getTypedArrayFromDType("bool",1)),t=vb({inputs:{a:a,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${o}`)}},Tb="return ceil(x);",Cb=ey({opSnippet:Tb,packedOpSnippet:Tb,cpuKernelImpl:Wm}),Eb={kernelName:I.gJX,backendName:"webgl",kernelFunc:Cb};class Ab{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class $b{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const Db={kernelName:I.xnO,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:a,clipValueMax:o}=r;let i;i=(0,I.OBj)().getBool("WEBGL_PACK_CLIP")?new $b(s.shape):new Ab(s.shape);const u=[[a],[o]];return n.runWebGLProgram(i,[s],s.dtype,u)}};class _b{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function Fb(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const Rb={kernelName:I.yj2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=n.texData.get(r.dataId),a=new _b(r.shape),o=[Fb(r,s.complexTensorInfos.real),Fb(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(a,o,o[0].dtype)}};class Ob{constructor(e){this.outputShape=[],this.outputShape=I.Wap.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){const e=t[a-1];n.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${e}));`)}const r=t.length,s=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class Mb{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=I.Wap.computeOutShape(e,t);const n=this.outputShape,r=n.length,s=(0,dm.kW)(r),a=Tg("coords",r),o=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const i=new Array(e.length-1);i[0]=e[0][t];for(let f=1;f<i.length;f++)i[f]=i[f-1]+e[f][t];const u=o[t],l=o.slice(-2),c=o.join();let p=`if (${u} < ${i[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${l.join()}));\n        }`;for(let f=1;f<i.length;f++){const e=i[f-1];p+=`\n        if (${u} < ${i[f]}  && ${u} >= ${i[f-1]}) {\n          return getChannel(\n            getT${f}(${Bb(o,u,e)}),\n            vec2(${Bb(l,u,e)}));\n        }`}const h=i.length,d=i[i.length-1];p+=`\n        return getChannel(\n          getT${h}(${Bb(o,u,d)}),\n          vec2(${Bb(l,u,d)}));`,this.userCode=`\n      float getValue(${o.map((e=>"int "+e))}) {\n        ${p}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[r-1]} = ${a[r-1]} + 1;\n        if (${a[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[r-2]} = ${a[r-2]} + 1;\n        if (${a[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[r-1]} = ${a[r-1]} - 1;\n        if (${a[r-2]} < ${n[r-2]} &&\n            ${a[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function Bb(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function Lb(e){const{inputs:t,backend:n}=e,{input:r}=t;return Gg({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const Wb={kernelName:I.J_u,backendName:"webgl",kernelFunc:Lb};function zb(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>Ib({inputs:{input:e},backend:n}))),s=e.map((e=>Lb({inputs:{input:e},backend:n}))),a=zb(r,t,n),o=zb(s,t,n),i=jg({inputs:{real:a,imag:o},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),s.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),i}let s=n.shouldExecuteOnCPU(e);if("string"===r&&(s=!0),s){const s=e.map((e=>{const r=I.D5U.sizeFromShape(e.shape.slice(t));return cy({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),a=s.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),o=I.Wap.computeOutShape(s.map((e=>e.shape)),1),i=1===s[0].shape[0],u=zm(a,o,r,i),l=I.Wap.computeOutShape(e.map((e=>e.shape)),t),c=n.makeTensorInfo(l,r,u);return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}if(e.length>(0,I.OBj)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),s=zb(e.slice(0,r),t,n),a=zb(e.slice(r),t,n),o=zb([s,a],t,n);return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),o}if((0,I.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const s=new Mb(e.map((e=>e.shape)),t);return n.runWebGLProgram(s,e,r)}const{tensors2D:a,outShape:o}=function(e,t,n){const r=I.Wap.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>cy({inputs:{x:e},attrs:{shape:[-1,I.D5U.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:r}}(e,t,n),i=new Ob(a.map((e=>e.shape))),u=n.runWebGLProgram(i,a,r);a.forEach((e=>n.disposeIntermediateTensorInfo(e)));const l=cy({inputs:{x:u},attrs:{shape:o},backend:n});return n.disposeIntermediateTensorInfo(u),l}function Pb(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=I.D5U.parseAxisParam(s,t[0].shape)[0],o=I.Wap.computeOutShape(t.map((e=>e.shape)),a);if(0===I.D5U.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);const i=t.filter((e=>I.D5U.sizeFromShape(e.shape)>0));if(1===i.length)return Gg({inputs:{x:i[0]},backend:n});const u=i.map((e=>e.shape));return I.Wap.assertParamsConsistent(u,a),zb(i,a,n)}const Ub={kernelName:I.Eh3,backendName:"webgl",kernelFunc:Pb};class Vb{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,o=e.padInfo.left,i=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,p=e.filterHeight,h=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",w="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,w="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${i}, ${u});\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${h}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${d}) *\n                    getW(wR, wC, ${d}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${d}, xR, xC) *\n                    getW(wR, wC, ${d}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2),\n                getW(wR, wC, ${d} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1),\n                  getX(batch, xR, xC, ${d} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC),\n                  getX(batch, ${d} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${w}\n        setOutput(result);\n      }\n    `}}class Gb{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,p=e.filterHeight,h=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${a}, ${o});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${i};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${d}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${d}) *\n                  getW(wF, wR, wC, ${d}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1),\n                  getX(batch, xF, xR, xC, ${d} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2),\n                  getW(wF, wR, wC, ${d} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Hb{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=ym(this.outputShape.length);const{dataFormat:n}=t,r=(0,hm.A)(),s="channelsLast"===n,a=s?0:1,o=s?1:2,i=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`;let u="";for(let l=0;l<=1;l++)for(let e=0;e<=1;e++)u+=`\n          blockIndex = rc.y + ${e};\n          pos = rc.x + ${l};\n\n          ${i}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${a}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${o}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${s}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*l+e}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*l+e}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${r.output} = result;\n      }\n    `}}function jb({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){const u=e.shape,l=r.texData.get(e.dataId),c=n.inChannels,p=u[0]*u[1]*u[2],h=n.outChannels,d="channelsLast"===n.dataFormat;let f;const m=[];if(null!=a&&!d&&3===a.shape.length){const e=wy({inputs:{x:a},backend:r,attrs:{perm:[1,2,0]}});m.push(e),a=e}if(!((1===p||1===h)&&c>1e3)&&l.isPacked&&d&&null!=l.texture&&u[2]%2!==0&&I.D5U.arraysEqual(l.shape.slice(-3),u.slice(-3))){const c=u[0]*u[1]*(u[2]+1),p={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},h=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,I.D5U.assert(rm(l.shape,p.shape),(()=>`packed reshape ${l.shape} to ${p.shape} isn't free`));const d=cy({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(d);const g=ky({a:p,b:d,backend:r,transposeA:false,transposeB:false,bias:s,activation:i,preluActivationWeights:a,leakyreluAlpha:o}),y=r.texData.get(g.dataId);I.D5U.assert(y.isPacked,(()=>"batchMatMul result is expected to be packed")),l.shape=h,y.shape=n.outShape,f=Gg({inputs:{x:g},backend:r}),f.shape=n.outShape,m.push(g)}else{const u=d?e:wy({inputs:{x:e},backend:r,attrs:{perm:[0,2,3,1]}}),l=u.shape,c=cy({inputs:{x:u},backend:r,attrs:{shape:[1,l[0]*l[1]*l[2],n.inChannels]}}),p=cy({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=ky({a:c,b:p,transposeA:false,transposeB:false,backend:r,bias:s,activation:i,preluActivationWeights:a,leakyreluAlpha:o}),g=cy({inputs:{x:h},backend:r,attrs:{shape:[n.batchSize,n.outHeight,n.outWidth,n.outChannels]}});f=d?g:wy({inputs:{x:g},backend:r,attrs:{perm:[0,3,1,2]}}),d||(m.push(u),m.push(g)),m.push(c),m.push(p),m.push(h)}for(const g of m)r.disposeIntermediateTensorInfo(g);return f}function Xb({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:i=null}){const{filterWidth:u,filterHeight:l,inChannels:c,outWidth:p,outHeight:h,dataFormat:d}=n,f="channelsLast"===d,m=u*l*c,g=h*p,y=[m,g],b=[];if(null!=a&&!f&&3===a.shape.length){const e=wy({inputs:{x:a},backend:r,attrs:{perm:[1,2,0]}});b.push(e),a=e}const x=cy({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),w=cy({inputs:{x:t},backend:r,attrs:{shape:[1,m,I.D5U.sizeFromShape(t.shape)/m]}});b.push(x),b.push(w);const v=new Hb(y,n),k=[x.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],N=r.runWebGLProgram(v,[x],"float32",k),S=cy({inputs:{x:N},backend:r,attrs:{shape:[1,y[0],y[1]]}});b.push(N),b.push(S);const T=null!=s,C=null!=a,E="leakyrelu"===i,A=i?ny(i,!0):null,$=new ry(S.shape,w.shape,[1,g,n.outChannels],!0,!1,T,A,C,E),D=[S,w];if(s&&D.push(s),C&&D.push(a),E){const e=r.makeTensorInfo([],"float32",I.D5U.createScalarValue(o,"float32"));D.push(e),b.push(e)}const _=r.runWebGLProgram($,D,"float32"),F=cy({inputs:{x:_},backend:r,attrs:{shape:[1,h,p,n.outChannels]}}),R=f?F:wy({inputs:{x:F},backend:r,attrs:{perm:[0,3,1,2]}});f||b.push(F),b.push(_);for(const I of b)r.disposeIntermediateTensorInfo(I);return R}const qb={kernelName:I.mhS,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dataFormat:u,dilations:l,dimRoundingMode:c}=r,p=I.Wap.convertConv2DDataFormat(u),h=I.Wap.computeConv2DInfo(s.shape,a.shape,o,l,i,c,!1,p);let d;if(1!==h.filterHeight||1!==h.filterWidth||1!==h.dilationHeight||1!==h.dilationWidth||1!==h.strideHeight||1!==h.strideWidth||"SAME"!==h.padInfo.type&&"VALID"!==h.padInfo.type)if((0,I.OBj)().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])d=Xb({x:s,filter:a,convInfo:h,backend:n});else{const e=new Vb(h);d=n.runWebGLProgram(e,[s,a],"float32")}else d=jb({x:s,filter:a,convInfo:h,backend:n});const f=cy({inputs:{x:d},backend:n,attrs:{shape:h.outShape}});return n.disposeIntermediateTensorInfo(d),f}};class Kb{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${a}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Qb{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a="channelsLast"===e.dataFormat,o=t-1-e.padInfo.top,i=n-1-e.padInfo.left,u=a?1:2,l=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Zb{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,o=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${s};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${o};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Yb{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${i}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${o}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Jb={kernelName:I.wUP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,pad:i,dataFormat:u,dimRoundingMode:l,filterShape:c}=r,p=I.Wap.convertConv2DDataFormat(u),h=I.Wap.computeConv2DInfo(s.shape,c,o,1,i,l,!1,p),d=new Kb(h);return n.runWebGLProgram(d,[s,a],"float32")}};const ex={kernelName:I.wm,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:o,strides:i,pad:u,dataFormat:l,dimRoundingMode:c}=r,p=I.Wap.convertConv2DDataFormat(l),h=I.Wap.computeConv2DInfo(o,a.shape,i,1,u,c,!1,p),d=new Qb(h);return n.runWebGLProgram(d,[s,a],"float32")}};const tx={kernelName:I.x12,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:u}=r,l=I.Wap.computeConv3DInfo(s.shape,a.shape,o,u,i),c=new Gb(l);return n.runWebGLProgram(c,[s,a],"float32")}};const nx={kernelName:I.o2y,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,pad:i,filterShape:u}=r,l=I.Wap.computeConv3DInfo(s.shape,u,o,1,i),c=new Zb(l);return n.runWebGLProgram(c,[s,a],"float32")}};const rx={kernelName:I.ik2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:o,strides:i,inputShape:u}=r,l=I.Wap.computeConv3DInfo(u,a.shape,i,1,o),c=new Yb(l);return n.runWebGLProgram(c,[s,a],"float32")}},sx=ey({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),ax={kernelName:I.mc4,backendName:"webgl",kernelFunc:sx},ox=ey({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),ix={kernelName:I.TR1,backendName:"webgl",kernelFunc:ox};class ux{constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,o,i,u]=e,[l]=t,[c,p]=n;this.outputShape=[l,c,p,u];const h="bilinear"===r?1:0,[d,f]=[o-1+".0",i-1+".0"],[m,g,y]=c>1?[""+(o-1)/(c-1),"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[b,x,w]=p>1?[""+(i-1)/(p-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${d} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${h} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const lx={kernelName:I.VcC,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:o}=t,{cropSize:i,method:u,extrapolationValue:l}=r,c=new ux(s.shape,a.shape,i,u,l);return n.runWebGLProgram(c,[s,a,o],"float32")}};var cx;!function(e){e.Prod="*",e.Sum="+"}(cx||(cx={}));class px{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const s=this.outputShape.length,a=this.op===cx.Prod?"1.0":"0.0",o=n?a:`getX(${hx(s,"coords",this.op)})`,i=this.outputShape[this.outputShape.length-1];let u="",l="";n?(u=r?"end != "+(i-1):"end != 0",l=r?"end + 1":"end - 1"):(u=r?`end + pow2 < ${i}`:"end >= pow2",l=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${(0,dm.kW)(s)} coords = getOutputCoords();\n        int end = ${dx(s,"coords",this.op)};\n        float val = ${o};\n        int pow2 = int(pow(2.0, index));\n        if (${u}) {\n          int idx = ${l};\n          ${dx(s,"coords",this.op)} = idx;\n          val ${this.op}= getX(${hx(s,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function hx(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function dx(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function fx(e,t,n,r,s,a){const o=t.shape.length,i=I.Wap.getAxesPermutation([r],o);let u=t;null!=i&&(u=wy({inputs:{x:t},backend:n,attrs:{perm:i}}));const l=I.Wap.getInnerMostAxes(1,o)[0];if(l!==o-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);const c=u.shape[l];let p=Gg({inputs:{x:u},backend:n});for(let h=0;h<=Math.ceil(Math.log2(c))-1;h++){const t=new px(e,u.shape,!1,a),r=[[h]],s=p;p=n.runWebGLProgram(t,[p],p.dtype,r),n.disposeIntermediateTensorInfo(s)}if(s){const t=new px(e,u.shape,s,a),r=p;p=n.runWebGLProgram(t,[p],p.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=i){const e=wy({inputs:{x:p},backend:n,attrs:{perm:I.Wap.getUndoAxesPermutation(i)}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(u),e}return p}const mx={kernelName:I.Byc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:o,reverse:i}=r;return fx(cx.Prod,s,n,a,o,i)}};const gx={kernelName:I.iHb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:o,reverse:i}=r;return fx(cx.Sum,s,n,a,o,i)}};const yx={kernelName:I.QRR,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:o,binaryOutput:i}=r;if(1===s.shape.length){const e=n.readSync(s.dataId),t=n.readSync(a.dataId),r=Bm(e,t,a.dtype,a.shape,o);return n.makeTensorInfo([o],a.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(a),r=Lm(e,t,o,i);return n.makeTensorInfo(r.shape,a.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class bx{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const xx={kernelName:I.T0n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:o}=r,i=s.shape[0],u=("NHWC"===o?s.shape[1]:s.shape[2])*a,l=("NHWC"===o?s.shape[2]:s.shape[3])*a,c=("NHWC"===o?s.shape[3]:s.shape[1])/(a*a),p=new bx("NHWC"===o?[i,u,l,c]:[i,c,u,l],a,o);return n.runWebGLProgram(p,[s],s.dtype)}};class wx{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ym(this.outputShape.length);const a=e.filterHeight,o=e.filterWidth,i=e.outChannels/e.inChannels;let u="",l="";n&&(u=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,l="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${a}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${o}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${l}\n        setOutput(result);\n      }\n    `}}class vx{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ym(this.outputShape.length);const a=e.outChannels/e.inChannels,o=e.padInfo.left,i=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,c=e.filterWidth,p=c;let h="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let g=0;g<c;g++)h+=`\n          vec4 xTexelC${2*g};\n          int xTexelC${2*g}Ready;\n          vec4 xTexelC${2*g+1};\n          int xTexelC${2*g+1}Ready;\n          vec4 xC${g};`;h+=`\n    for (int r = 0; r < ${l}; r++) {\n      `;for(let g=0;g<c;g++)h+=`\n          xTexelC${2*g} = vec4(0.0);\n          xTexelC${2*g}Ready = 0;\n          xTexelC${2*g+1} = vec4(0.0);\n          xTexelC${2*g+1}Ready = 0;\n          xC${g} = vec4(0.0);`;h+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let g=0;g<(p+1)/2;g++){const e=2*g;if(h+=`\n          xC = xCCorner + ${e*u};\n          `,1===i){if(e<c&&(o%2===1?(h+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n              `,h+=1===u&&e>0?`\n                xC${e} = vec4(xTexelC${e-2}.zw, xTexelC${e}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${e} = vec4(previous.zw, xTexelC${e}.xy);\n                  } else {\n                    xC${e} = vec4(0.0, 0.0, xTexelC${e}.xy);\n                  }\n                  `):h+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xC${e} = xTexelC${e};\n                `,e+1<c)){const t=o%2===0?I.D5U.nearestLargerEven(u):u;u%2===0&&o%2===1||u%2!==0&&o%2!==1?(h+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${t};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                    xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${e+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${e+1}Ready = 1;\n                  }\n                  `,u>1&&(h+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                      xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${e}Ready = 1;\n                    }\n                    `),h+=`\n                  xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.xy);\n                  `):h+=1===t?`\n                    xC${e+1} = xTexelC${e};\n                    `:`\n                    xCOffset = xC + ${t};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                      xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${e+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${e+1}Ready = 1;\n                    }\n\n                    xC${e+1} = xTexelC${e+1};\n                    `}}else e<c&&(o%2===1?(h+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n              `,e+1<c&&(h+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${e+1} = vec4(xTexelC${e+1}.xy, final.xy);\n                `)):(h+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(\n                  xTexelC${e}.xy, xTexelC${e+1}.xy);\n              `,e+1<c&&(h+=`\n                  xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n                `)));e<c&&(h+=`\n            wTexel = getW(r, ${e}, d1, q);\n            dotProd += xC${e} * vec4(wTexel.xz, wTexel.xz);\n          `,e+1<c&&(h+=`\n              wTexel = getW(r, ${e+1}, d1, q);\n              dotProd += xC${e+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}h+="\n    }\n  ",h+="\n      }\n    ";let d="",f="";n&&(d=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${d}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${a};\n        int q = d2 - d1 * ${a};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${h}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}const kx={kernelName:I.cie,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:u,dimRoundingMode:l}=r;let c=u;null==c&&(c=[1,1]),I.D5U.assert(I.Wap.eitherStridesOrDilationsAreOne(o,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`));const p=I.Wap.computeConv2DInfo(s.shape,a.shape,o,c,i,l,!0);let h;h=(0,I.OBj)().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels===1?new vx(p):new wx(p);const d=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return n.runWebGLProgram(h,[s,a],"float32",d)}};class Ix{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Nx{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,o=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${i}; dm++) {\n              int d2 = d1 * ${i} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Sx={kernelName:I.sL$,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:o,dilations:i,pad:u,dimRoundingMode:l,filterShape:c}=r,p=I.Wap.computeConv2DInfo(s.shape,c,o,i,u,l,!0),h=new Ix(p);return n.runWebGLProgram(h,[s,a],"float32")}};const Tx={kernelName:I.y7R,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:o,dilations:i,pad:u,dimRoundingMode:l,inputShape:c}=r,p=I.Wap.computeConv2DInfo(c,a.shape,o,i,u,l,!0),h=new Nx(p);return n.runWebGLProgram(h,[s,a],"float32")}};class Cx{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const Ex={kernelName:I.$w,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],a=I.D5U.sizeFromShape(r.shape),o=cy({inputs:{x:r},backend:n,attrs:{shape:[a]}}),i=new Cx(a),u=n.runWebGLProgram(i,[o],o.dtype),l=cy({inputs:{x:u},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),l}};class Ax{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:s,strideWidth:a,filterHeight:o,filterWidth:i,dilationHeight:u,dilationWidth:l}=e,{top:c,left:p}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${a});\n      const ivec2 pads = ivec2(${c}, ${p});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${o}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${i}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const $x={kernelName:I.p4S,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:o,pad:i,dilations:u}=r,l=I.Wap.computeDilation2DInfo(s.shape,a.shape,o,i,"NHWC",u);let c;const p=new Ax(l);c=n.runWebGLProgram(p,[s,a],"float32");const h=cy({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),h}};const Dx={kernelName:I.$g6,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:o,summedDims:i,idDims:u}=I.Wap.decodeEinsumEquation(s,a.length);I.Wap.checkEinsumDimSizes(o.length,u,a);const{path:l,steps:c}=I.Wap.getEinsumComputePath(i,u),p=c.length;let h=null,d=o.length;const f=[];for(let m=0;m<p;++m){for(const e of c[m]){const{permutationIndices:t,expandDims:r}=I.Wap.getEinsumPermutation(d,u[e]);let s;I.Wap.isIdentityPermutation(t)?s=a[e]:(s=wy({inputs:{x:a[e]},backend:n,attrs:{perm:t}}),f.push(s));const o=s.shape.slice();for(let e=0;e<r.length;++e)o.splice(r[e],0,1);I.D5U.arraysEqual(s.shape,o)||(s=cy({inputs:{x:s},backend:n,attrs:{shape:o}}),f.push(s)),null===h?h=s:(h=uy({inputs:{a:s,b:h},backend:n}),f.push(h))}m<p-1&&(l[m]>=0&&(h=by({inputs:{x:h},backend:n,attrs:{axis:l[m]-(o.length-d),keepDims:!1}}),f.push(h)),d--)}for(const m of f)m!==h&&n.disposeIntermediateTensorInfo(m);return h}},_x=ey({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),Fx={kernelName:I.SX0,backendName:"webgl",kernelFunc:_x},Rx={kernelName:I.HEU,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:s}=t,a=(0,I.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Vg("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new Ug("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)}},Ox=ty({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:Pm}),Mx={kernelName:I.hdR,backendName:"webgl",kernelFunc:Ox},Bx=ey({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${I.Wap.ERF_P};\n  float a1 = ${I.Wap.ERF_A1};\n  float a2 = ${I.Wap.ERF_A2};\n  float a3 = ${I.Wap.ERF_A3};\n  float a4 = ${I.Wap.ERF_A4};\n  float a5 = ${I.Wap.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),Lx={kernelName:I.Omj,backendName:"webgl",kernelFunc:Bx},Wx=ey({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:Um,dtype:"float32"}),zx={kernelName:I.NEP,backendName:"webgl",kernelFunc:Wx};function Px(e){const{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:a}=t,o=a.shape.length,i=a.shape.slice();let u=s;return s<0&&(I.D5U.assert(-(o+1)<=s,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),u=o+s+1),i.splice(u,0,1),cy({inputs:{x:a},backend:r,attrs:{shape:i}})}const Ux={kernelName:I.YFo,backendName:"webgl",kernelFunc:Px},Vx="return exp(x) - 1.0;",Gx=ey({opSnippet:Vx,packedOpSnippet:Vx,cpuKernelImpl:Vm}),Hx={kernelName:I.Y0y,backendName:"webgl",kernelFunc:Gx};class jx{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${r}.0`:"1.0";let o;if("real"===e)o="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);o="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${o}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function Xx(e,t,n){const r=n.texData.get(e.dataId),s=I.D5U.sizeFromShape(e.shape),a=e.shape[e.shape.length-1],o=cy({inputs:{x:e},backend:n,attrs:{shape:[s/a,a]}}),i=o.shape,u=new jx("real",i,t),l=new jx("imag",i,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:i},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:i}],p=n.runWebGLProgram(u,c,"float32"),h=n.runWebGLProgram(l,c,"float32"),d=jg({inputs:{real:p,imag:h},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h);const f=cy({inputs:{x:d},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(d),f}const qx={kernelName:I.vwp,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return Xx(r,!1,n)}};class Kx{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function Qx(e){const{backend:t,attrs:n}=e,{shape:r,value:s}=n;let{dtype:a}=n;if(a=a||I.D5U.inferDtype(s),"string"===a){const e=I.D5U.getArrayFromDType(a,I.D5U.sizeFromShape(r));return e.fill(s),t.makeTensorInfo(r,a,e)}{const e=new Kx(r,s),n=[[s]];return t.runWebGLProgram(e,[],a,n)}}const Zx={kernelName:I.deh,backendName:"webgl",kernelFunc:Qx};class Yx{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Jx={kernelName:I.Uyb,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,s=new Yx(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}},ew="return floor(x);",tw=ey({opSnippet:ew,packedOpSnippet:ew,cpuKernelImpl:Gm}),nw={kernelName:I.OR,backendName:"webgl",kernelFunc:tw},rw=ty({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),sw={kernelName:I.jeX,backendName:"webgl",kernelFunc:rw};class aw{constructor(e){this.variableNames=["A"];const t=(0,hm.A)(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class ow{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=(0,hm.A)(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const iw={kernelName:I.eBW,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:a}=r,o="undefined"!==typeof HTMLVideoElement&&s instanceof HTMLVideoElement,i="undefined"!==typeof HTMLImageElement&&s instanceof HTMLImageElement,[u,l]=o?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[l,u],p=[l,u,a];(i||o)&&(null==uw&&(uw=document.createElement("canvas").getContext("2d")),uw.canvas.width=u,uw.canvas.height=l,uw.drawImage(s,0,0,u,l),s=uw.canvas);const h=n.makeTensorInfo(c,"int32");n.texData.get(h.dataId).usage=Rf.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(h.dataId),s);const d=(0,I.OBj)().getBool("WEBGL_PACK")?new ow(p):new aw(p),f=n.runWebGLProgram(d,[h],"int32");return n.disposeData(h.dataId),f}};let uw;const lw={kernelName:I._V0,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:h,activation:d,leakyreluAlpha:f}=r,m=I.Wap.convertConv2DDataFormat(c),g=I.Wap.computeConv2DInfo(s.shape,a.shape,u,p,l,h,!1,m);let y;const b=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if((0,I.OBj)().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])y=Xb({x:s,filter:a,convInfo:g,backend:n,bias:o,activation:d,preluActivationWeights:i,leakyreluAlpha:f});else{const e=null!=o,t=null!=i,r="leakyrelu"===d,u=d?ny(d,!1):null,l=new Vb(g,e,u,t,r),p=[s,a],h=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=cy({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return b.push(t),t}return e};if(e&&p.push(h(o,c)),t&&p.push(h(i,c)),r){const e=n.makeTensorInfo([],"float32",I.D5U.createScalarValue(f,"float32"));p.push(e),b.push(e)}y=n.runWebGLProgram(l,p,"float32")}else y=jb({x:s,filter:a,convInfo:g,backend:n,bias:o,activation:d,preluActivationWeights:i,leakyreluAlpha:f});const x=cy({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}};const cw={kernelName:I.luS,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:o,preluActivationWeights:i}=t,{strides:u,pad:l,dilations:c,dimRoundingMode:p,activation:h,leakyreluAlpha:d}=r,f=[];let m=c;null==m&&(m=[1,1]),I.D5U.assert(I.Wap.eitherStridesOrDilationsAreOne(u,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`));const g=I.Wap.computeConv2DInfo(s.shape,a.shape,u,m,l,p,!0),y=(0,I.OBj)().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,b=h?ny(h,y):null,x=[s,a],w=null!=o,v=null!=i,k="leakyrelu"===h;if(w&&x.push(o),v&&x.push(i),k){const e=n.makeTensorInfo([],"float32",I.D5U.createScalarValue(d,"float32"));x.push(e),f.push(e)}let N;N=y?new vx(g,w,b,v,k):new wx(g,w,b,v,k);const S=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],T=n.runWebGLProgram(N,x,"float32",S);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),T}};class pw{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=(0,dm.kW)(t.length),s=(0,dm.kW)(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${a};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const hw={kernelName:I.q1x,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=s.shape,o=a[a.length-1],i=I.D5U.sizeFromShape(r.shape),[u,l,c,p]=I.Wap.prepareAndValidate(r,s),h=cy({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),d=cy({inputs:{x:r},backend:n,attrs:{shape:[I.D5U.sizeFromShape(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.readSync(s.dataId),t=n.bufferSync(r),a=Hm(e,t,r.dtype,l,o,c,p,r.shape,i);return n.makeTensorInfo(u,r.dtype,a.values)}const f=new pw(o,p,[l,c]),m=n.runWebGLProgram(f,[d,h],d.dtype),g=cy({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(m),g}};class dw{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=(0,dm.kW)(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let s=0;s<e.length;s++)2===s?r.push("index"):r.push(`${n[s]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function fw(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:o,batchDims:i}=r,u=I.D5U.parseAxisParam(o,s.shape)[0];if((0,I.OBj)().get("DEBUG")){const e=n.readSync(a.dataId),t=s.shape[u];for(let n=0;n<e.length;++n){const r=e[n];I.D5U.assert(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}const l=I.Wap.segment_util.collectGatherOpShapeInfo(s,a,u,i),c=I.D5U.sizeFromShape(a.shape),p=[],h=cy({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),d=cy({inputs:{x:a},backend:n,attrs:{shape:[l.batchSize,c/l.batchSize]}});p.push(h),p.push(d);const f=[l.batchSize,l.outerSize,c/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([s,a])||"string"===s.dtype){const e=n.bufferSync(d),t=n.bufferSync(h),r=jm(t,e,f);return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const m=new dw(h.shape,f),g=n.runWebGLProgram(m,[h,d],h.dtype);p.push(g);const y=cy({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}const mw={kernelName:I.qi_,backendName:"webgl",kernelFunc:fw},gw=ty({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:Xm,dtype:"bool"}),yw={kernelName:I.iZT,backendName:"webgl",kernelFunc:gw},bw=ty({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:qm}),xw={kernelName:I.Acj,backendName:"webgl",kernelFunc:bw};const ww={kernelName:I.Qg5,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return Xx(r,!0,n)}},vw=ey({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),kw={kernelName:I.avt,backendName:"webgl",kernelFunc:vw},Iw=ey({opSnippet:"return float(isinf(x));",dtype:"bool"}),Nw={kernelName:I.iWB,backendName:"webgl",kernelFunc:Iw},Sw=ey({opSnippet:"return float(isnan(x));",dtype:"bool"}),Tw={kernelName:I.r7n,backendName:"webgl",kernelFunc:Sw},Cw=ty({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:Km,dtype:"bool"}),Ew={kernelName:I.vtC,backendName:"webgl",kernelFunc:Cw},Aw=ty({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:Qm,dtype:"bool"}),$w={kernelName:I.CAk,backendName:"webgl",kernelFunc:Aw};const Dw={kernelName:I.e7N,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,o=Zm(r,s,a);return t.makeTensorInfo([o.length],"float32",o)}},_w=ey({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:Ym}),Fw={kernelName:I.ZbH,backendName:"webgl",kernelFunc:_w},Rw=ey({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"}),Ow={kernelName:I.kU,backendName:"webgl",kernelFunc:Rw},Mw=ty({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),Bw={kernelName:I.PYm,backendName:"webgl",kernelFunc:Mw},Lw=ey({opSnippet:"return float(!(x >= 1.0));"}),Ww={kernelName:I.VfG,backendName:"webgl",kernelFunc:Lw},zw=ty({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),Pw={kernelName:I.MZg,backendName:"webgl",kernelFunc:zw};class Uw{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];const a=t,o=e[3]-1;let i;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;i=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${o}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${i};\n        setOutput(val);\n      }\n    `}}class Vw{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,o=e[3]-1;let i;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;i=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${i};\n        setOutput(result);\n      }\n    `}}const Gw={kernelName:I.eZ0,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:o,alpha:i,beta:u}=r,l=(0,I.OBj)().getBool("WEBGL_PACK_NORMALIZATION")?new Vw(s.shape,a,o,i,u):new Uw(s.shape,a,o,i,u);return n.runWebGLProgram(l,[s],s.dtype)}};class Hw{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const jw={kernelName:I.Hhh,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:o}=t,{depthRadius:i,bias:u,alpha:l,beta:c}=r,p=new Hw(s.shape,i,u,l,c);return n.runWebGLProgram(p,[s,a,o],s.dtype)}};function Xw(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:o}=r,i=s.shape.length,u=I.D5U.parseAxisParam(a,s.shape);let l=u;const c=I.Wap.getAxesPermutation(l,i),p=null!=c,h=n.shouldExecuteOnCPU([s]);let d=s;if(p){if(h){const e=n.texData.get(d.dataId).values,t=new Array(i);for(let n=0;n<t.length;n++)t[n]=s.shape[c[n]];const r=Ig(e,s.shape,s.dtype,c,t);d=n.makeTensorInfo(t,s.dtype);n.texData.get(d.dataId).values=r}else d=yy(s,c,n);l=I.Wap.getInnerMostAxes(l.length,i)}I.Wap.assertAxesAreInnerMostDims("max",l,i);const[f,m]=I.Wap.computeOutAndReduceShapes(d.shape,l);let g,y=f;if(o&&(y=I.Wap.expandShapeToKeepDim(f,u)),h){const e=n.texData.get(d.dataId).values,t=Jm(e,I.D5U.sizeFromShape(m),y,s.dtype);g=n.makeTensorInfo(y,s.dtype);n.texData.get(g.dataId).values=t}else g=function(e,t,n,r){const s=I.D5U.sizeFromShape(t),a=cy({inputs:{x:e},attrs:{shape:[I.D5U.sizeFromShape(e.shape)/s,s]},backend:r}),o=fy(a,e.dtype,"max",r),i=cy({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(o),i}(d,m,y,n);return p&&n.disposeIntermediateTensorInfo(d),g}const qw={kernelName:I.YoZ,backendName:"webgl",kernelFunc:Xw},Kw=ty({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:eg}),Qw={kernelName:I.BMI,backendName:"webgl",kernelFunc:Kw};const Zw={kernelName:I.mTV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;cm(s,"maxPool");const{filterSize:a,strides:o,pad:i,dimRoundingMode:u}=r;I.D5U.assert(I.Wap.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const l=I.Wap.computePool2DInfo(s.shape,a,o,1,i,u);if(1===l.filterWidth&&1===l.filterHeight&&I.D5U.arraysEqual(l.inShape,l.outShape))return Gg({inputs:{x:s},backend:n});const c=new tb(l,"max",!1);return n.runWebGLProgram(c,[s],s.dtype)}};const Yw={kernelName:I.OAf,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:o,pad:i,dataFormat:u,dimRoundingMode:l}=r,c=I.Wap.computePool3DInfo(s.shape,a,o,[1,1,1],i,l,u),p=new nb(c,"max",!1);return n.runWebGLProgram(p,[s],s.dtype)}};class Jw{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,o=s-1-e.padInfo.top,i=a-1-e.padInfo.left,u=s*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ev{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=i-1-e.padInfo.front,p=u-1-e.padInfo.top,h=l-1-e.padInfo.left,d=i*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${p}, ${h});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${i};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${o}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${d} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const tv={kernelName:I.OU7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,o=a,{filterSize:i,strides:u,pad:l,dimRoundingMode:c}=r,p=I.Wap.computePool3DInfo(o.shape,i,u,[1,1,1],l,c),h=new nb(p,"max",!0),d=n.runWebGLProgram(h,[o],o.dtype),f=new ev(p),m=n.runWebGLProgram(f,[s,d],o.dtype);return n.disposeIntermediateTensorInfo(d),m}};const nv={kernelName:I.OV7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:o}=t,i=a;cm([a,o],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:p}=r,h=I.Wap.computePool2DInfo(i.shape,u,l,1,c,p),d=new tb(h,"max",!0),f=n.runWebGLProgram(d,[i],i.dtype),m=new Jw(h),g=n.runWebGLProgram(m,[s,f],i.dtype);return n.disposeIntermediateTensorInfo(f),g}};const rv={kernelName:I.vFR,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:o,includeBatchInIndex:i}=t,u=n;I.D5U.assert(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const l=[1,1];I.D5U.assert(I.Wap.eitherStridesOrDilationsAreOne(a,l),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`));const c=I.Wap.computePool2DInfo(r.shape,s,a,l,o),[p,h]=function(e,t,n,r){let s=new tb(n,"max",!1);const a=r.runWebGLProgram(s,[e],"float32");return s=new tb(n,"max",!0,!0,t),[a,r.runWebGLProgram(s,[e],"float32")]}(r,i,c,u);return[p,h]}};const sv={kernelName:I.q2K,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:s,axis:a}=t,o=n,i=r.shape.length,u=I.D5U.parseAxisParam(a,r.shape);let l=u;const c=I.Wap.getAxesPermutation(l,i),p=null!=c,h=o.shouldExecuteOnCPU([r]),d=[];let f=r;if(p){if(h){const e=o.texData.get(f.dataId).values,t=new Array(i);for(let s=0;s<t.length;s++)t[s]=r.shape[c[s]];const n=Ig(e,r.shape,r.dtype,c,t);f=o.makeTensorInfo(t,r.dtype);o.texData.get(f.dataId).values=n}else f=yy(r,c,o);d.push(f),l=I.Wap.getInnerMostAxes(l.length,i)}I.Wap.assertAxesAreInnerMostDims("sum",l,i);const[m,g]=I.Wap.computeOutAndReduceShapes(f.shape,l);let y=m;s&&(y=I.Wap.expandShapeToKeepDim(m,u));const b=function(e,t,n,r){const s=I.D5U.sizeFromShape(t),a=cy({inputs:{x:e},attrs:{shape:[I.D5U.sizeFromShape(e.shape)/s,s]},backend:r}),o=fy(a,"float32","mean",r),i=cy({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(o),i}(f,g,y,o);for(const x of d)o.disposeIntermediateTensorInfo(x);return b}};const av={kernelName:I.c17,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=s.shape.length,u=I.D5U.parseAxisParam(a,s.shape);let l=u;const c=I.Wap.getAxesPermutation(l,i);let p=s;null!=c&&(p=wy({inputs:{x:s},backend:n,attrs:{perm:c}}),l=I.Wap.getInnerMostAxes(l.length,s.shape.length)),I.Wap.assertAxesAreInnerMostDims("min",l,i);const[h,d]=I.Wap.computeOutAndReduceShapes(p.shape,l),f=cy({inputs:{x:p},backend:n,attrs:{shape:[-1,I.D5U.sizeFromShape(d)]}}),m=fy(f,f.dtype,"min",n);let g;if(o){g=cy({inputs:{x:m},backend:n,attrs:{shape:I.Wap.expandShapeToKeepDim(h,u)}})}else g=cy({inputs:{x:m},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(p),g}},ov=ty({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:tg}),iv={kernelName:I.q8u,backendName:"webgl",kernelFunc:ov};class uv{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=(0,dm.kW)(r),a=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${o});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${i}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${o};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class lv{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=(0,dm.kW)(r),a=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=Tg("rc",r),u=Tg("source",r),l=`${i[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,p="reflect"===n?0:1;let h="";if(1===r){const e=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${p};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${p};\n        }\n        source -= start;\n      `;h=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${i[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${p}) +\n                gte * ((end - 1) * 2 - source + ${p});\n        source -= start;\n      `;h=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${i[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${i[r-2]} += 1;\n        if(${i[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${i[r-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${o});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}const cv={kernelName:I.jQs,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:s,mode:a}=n,o=(0,I.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new lv(r.shape,s,a):new uv(r.shape,s,a);return t.runWebGLProgram(o,[r],r.dtype)}},pv=ty({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),hv={kernelName:I.Vbg,backendName:"webgl",kernelFunc:pv};class dv{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const fv=ty({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),mv={kernelName:I.oHH,backendName:"webgl",kernelFunc:fv},gv="return a - b;",yv=ty({opSnippet:gv,packedOpSnippet:gv,supportsComplex:!0,cpuKernelImpl:wg}),bv={kernelName:I.Tr8,backendName:"webgl",kernelFunc:yv};function xv(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,o=I.D5U.parseAxisParam([a],s.shape),i=Xw({inputs:{x:s},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),u=I.Wap.expandShapeToKeepDim(i.shape,o),l=cy({inputs:{x:i},backend:n,attrs:{shape:u}}),c=yv({inputs:{a:s,b:l},backend:n}),p=Wx({inputs:{x:c},backend:n}),h=by({inputs:{x:p},backend:n,attrs:{axis:o,keepDims:!1}}),d=cy({inputs:{x:h},backend:n,attrs:{shape:u}}),f=fv({inputs:{a:p,b:d},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),f}const wv={kernelName:I.Gcp,backendName:"webgl",kernelFunc:xv};const vv={kernelName:I.NZg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:o,normalized:i}=r,u=i?s:xv({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),l=u.shape[0],c=u.shape[1],p=new dv(l,c,a),h=[[o]],d=n.runWebGLProgram(p,[u],"int32",h);return i||n.disposeIntermediateTensorInfo(u),d}};const kv={kernelName:I.kuV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,s]=rg(e.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,t)}let s;return s=(0,I.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Mg(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new Fg(r.shape,"if (isnan(x)) return x;\n  return -x;\n"),n.runWebGLProgram(s,[r],r.dtype)}},Iv=I.GDt.GP;const Nv={kernelName:I.uv1,backendName:"webgl",kernelFunc:function(e){I.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u}=r,l=n.readSync(s.dataId),c=n.readSync(a.dataId),{selectedIndices:p}=Iv(l,c,o,i,u);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},Sv=I.GDt.qP;const Tv={kernelName:I.cye,backendName:"webgl",kernelFunc:function(e){I.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:l}=r,c=n.readSync(s.dataId),p=n.readSync(a.dataId),{selectedIndices:h,validOutputs:d}=Sv(c,p,o,i,u,l);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},Cv=I.GDt.pA;const Ev={kernelName:I.W0H,backendName:"webgl",kernelFunc:function(e){I.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,softNmsSigma:l}=r,c=n.readSync(s.dataId),p=n.readSync(a.dataId),h=o,d=i,f=u,m=l,{selectedIndices:g,selectedScores:y}=Cv(c,p,h,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class Av{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const $v={kernelName:I.we_,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{depth:a,onValue:o,offValue:i}=r,u=I.D5U.sizeFromShape(s.shape),l=new Av(u,a,o,i),c=cy({inputs:{x:s},backend:n,attrs:{shape:[u]}}),p=n.runWebGLProgram(l,[c],s.dtype);n.disposeIntermediateTensorInfo(c);const h=cy({inputs:{x:p},backend:n,attrs:{shape:[...s.shape,a]}});return n.disposeIntermediateTensorInfo(p),h}};function Dv(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=Ib({inputs:{input:r},backend:n}),t=Dv({inputs:{x:e},backend:n}),s=Lb({inputs:{input:r},backend:n}),a=Dv({inputs:{x:s},backend:n}),o=jg({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),o}return Qx({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const _v={kernelName:I.RuY,backendName:"webgl",kernelFunc:Dv};const Fv={kernelName:I.qWM,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const t=Ib({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=Lb({inputs:{input:s},backend:r}),o=Dv({inputs:{x:a},backend:r}),i=jg({inputs:{real:n,imag:o},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(o),i}return Qx({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}};const Rv={kernelName:I.QiL,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return Px({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,o=t[0].dtype;t.forEach((e=>{I.D5U.assertShapesMatch(a,e.shape,"All tensors passed to stack must have matching shapes"),I.D5U.assert(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],u=Pb({inputs:t.map((e=>{const t=Px({inputs:{input:e},backend:n,attrs:{dim:s}});return i.push(t),t})),backend:n,attrs:{axis:s}});return i.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}};class Ov{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=(0,dm.kW)(r),a=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${o});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${i}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${o};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class Mv{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=(0,dm.kW)(r),a=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=Tg("rc",r),u=Tg("source",r),l=`${i[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,p=[`${s} rc = outputLoc;`,`${i[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${i[r-2]} += 1;\n       if(${i[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${i[r-1]} += 1;\n         if(${l}) {`],h=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let d="";for(let f=0,m=1===r?2:4;f<m;f++)d+=`\n        ${p[f]}\n        if (${h}) {\n          result[${f}] = float(value);\n        } else {\n          ${s} source = rc - start;\n          result[${f}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;d+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${o});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const Bv=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:o}=r;if(0===I.D5U.sizeFromShape(s.shape)){const e=a.map(((e,t)=>e[0]+s.shape[t]+e[1]));return Qx({backend:n,attrs:{shape:e,value:o,dtype:s.dtype}})}const i=(0,I.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Mv(s.shape,a,o):new Ov(s.shape,a,o),u=[[o]];return n.runWebGLProgram(i,[s],s.dtype,u)},Lv={kernelName:I.lyA,backendName:"webgl",kernelFunc:Bv},Wv=ty({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),zv={kernelName:I.pe_,backendName:"webgl",kernelFunc:Wv};const Pv={kernelName:I.DlI,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:o}=r,i=s.shape.length,u=[],l=I.D5U.parseAxisParam(a,s.shape);let c=l;const p=I.Wap.getAxesPermutation(c,i);let h,d=s;if(null!=p&&(d=wy({inputs:{x:s},backend:n,attrs:{perm:p}}),c=I.Wap.getInnerMostAxes(c.length,i),u.push(d)),I.Wap.assertAxesAreInnerMostDims("prod",c,i),n.shouldExecuteOnCPU([d])){const e=n.texData.get(d.dataId).values,{outVals:t,outShape:r,outDtype:s}=ag(d.shape,d.dtype,e,c);h=n.makeTensorInfo(r,s,t)}else{const[e,t]=I.Wap.computeOutAndReduceShapes(d.shape,c),r=I.D5U.sizeFromShape(t),a=cy({inputs:{x:d},backend:n,attrs:{shape:[-1,r]}}),o=fy(a,(0,I.z4k)(s.dtype),"prod",n);h=cy({inputs:{x:o},backend:n,attrs:{shape:e}}),u.push(a),u.push(o)}if(o){u.push(h);const e=I.Wap.expandShapeToKeepDim(h.shape,l);h=cy({inputs:{x:h},backend:n,attrs:{shape:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},Uv=e=>{const{backend:t,attrs:n}=e,{start:r,stop:s,step:a,dtype:o}=n,i=og(r,s,a,o);return t.makeTensorInfo([i.length],o,i)},Vv={kernelName:I.e6w,backendName:"webgl",kernelFunc:Uv},Gv=ey({opSnippet:"return 1.0 / x;"}),Hv={kernelName:I.$HU,backendName:"webgl",kernelFunc:Gv},jv=ey({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Xv={kernelName:I.qkr,backendName:"webgl",kernelFunc:jv},qv=ey({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Kv={kernelName:I.SbG,backendName:"webgl",kernelFunc:qv};class Qv{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,o,i,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?o-1:o,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let p;p=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class Zv{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,o,i,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?o-1:o,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let p;p=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const Yv={kernelName:I._Yw,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:o,size:i}=r,[u,l]=i,c=(0,I.OBj)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Zv(s.shape,u,l,a,o):new Qv(s.shape,u,l,a,o);return n.runWebGLProgram(c,[s],"float32")}};class Jv{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,o]=e,i=[n&&a>1?r-1:r,n&&o>1?s-1:s],u=[n&&a>1?a-1:a,n&&o>1?o-1:o],l=i[0]/u[0],c=i[1]/u[1],p=1/l,h=1/c,d=2*Math.ceil(p)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${p});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const ek={kernelName:I.zbQ,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:o}=r,i=new Jv(a.shape,s.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}};class tk{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,o,i,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?o-1:o,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],p=r?"0.5":"0.0";let h;h=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class nk{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,o,i,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?o-1:o,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],p=r?"0.5":"0.0";let h;h=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const rk={kernelName:I.dpD,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:o,size:i}=r,[u,l]=i,c=(0,I.OBj)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new nk(s.shape,u,l,a,o):new tk(s.shape,u,l,a,o);return n.runWebGLProgram(c,[s],s.dtype)}};class sk{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,o]=e,i=[n&&a>1?r-1:r,n&&o>1?s-1:s],u=[n&&a>1?a-1:a,n&&o>1?o-1:o],l=i[0]/u[0],c=i[1]/u[1],p=1/l,h=1/c,d=2*Math.ceil(p)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${p});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${i[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${i[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const ak={kernelName:I.Hmb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:o}=r,i=new sk(a.shape,s.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}};class ok{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),s=(0,dm.kW)(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class ik{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=Tg("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,o=(0,dm.kW)(n);function i(n){const r=e.map(((r,s)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${o} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return i(e)}(r.slice())};\n          if(${s}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",i(e)}(r.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",i(e)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",i(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const uk={kernelName:I.mKl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r,o=s.shape.length,i=I.D5U.parseAxisParam(a,s.shape);if(0===o)return Gg({inputs:{x:s},backend:n});const u=(0,I.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ik(s.shape,i):new ok(s.shape,i);return n.runWebGLProgram(u,[s],s.dtype)}};class lk{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let s="";s="number"===typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${s}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const ck={kernelName:I.b9H,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:o}=t,i=n,u=new lk(r.shape,a),[l,c]=I.Wap.getImageCenter(o,r.shape[1],r.shape[2]),p=[[l,c,Math.sin(s),Math.cos(s)]];return i.runWebGLProgram(u,[r],r.dtype,p)}},pk=ey({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),hk={kernelName:I.e07,backendName:"webgl",kernelFunc:pk},dk=ey({opSnippet:"return inversesqrt(x);",cpuKernelImpl:ig}),fk={kernelName:I.bV0,backendName:"webgl",kernelFunc:dk};class mk{constructor(e,t,n,r,s,a,o=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const i=(0,dm.kW)(s.length),u=(0,dm.kW)(a.length);let l="";1===n?l="i":2===n&&(l="i, j");const c=`getIndices(${l})`;let p="";1===r?p="i":2===r&&(p="i, coords[1]");const h=`getUpdates(${p})`,d=t>1?"strides[j]":"strides";this.userCode=`\n        ${i} strides = ${i}(${s});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${d};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${h};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const gk={kernelName:I.xQA,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:o}=r,{sliceRank:i,numUpdates:u,sliceSize:l,strides:c,outputSize:p}=I.Wap.calculateShapes(a,s,o),h=[p/l,l];if(0===p)return n.makeTensorInfo(o,s.dtype);const d=cy({inputs:{x:s},backend:n,attrs:{shape:[u,i]}}),f=cy({inputs:{x:a},backend:n,attrs:{shape:[u,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new mk(u,i,d.shape.length,f.shape.length,c,h),y=n.runWebGLProgram(g,[f,d,m],f.dtype),b=cy({inputs:{x:y},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class yk{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const s=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=2===(0,I.OBj)().getNumber("WEBGL_VERSION")?"while (left < right) {":s,o="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${a}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${o} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const bk={kernelName:I.nr8,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:a}=t,{side:o}=r,i=new yk(s.shape[0],s.shape[1],a.shape[1],o),u=[[s.shape[1]]];return n.runWebGLProgram(i,[s,a],"int32",u)}};class xk{constructor(e,t,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],o=[];for(let r=0;r<t.length;r++)o.push(`${n[r]}`),r<e&&a.push(`${n[r]}`);r=a.join(),s=o.join()}const a=(0,dm.kW)(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const wk={kernelName:I.PhF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t,o=new xk(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(o,[r,s,a],(0,I.x8V)(s.dtype,a.dtype))}},vk=ey({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${I.Wap.SELU_SCALEALPHA};\n  float scale = ${I.Wap.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),kk={kernelName:I.oFR,backendName:"webgl",kernelFunc:vk},Ik=ey({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:lg}),Nk={kernelName:I.a5O,backendName:"webgl",kernelFunc:Ik},Sk=ey({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),Tk={kernelName:I.i5y,backendName:"webgl",kernelFunc:Sk},Ck=ey({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),Ek={kernelName:I.RQH,backendName:"webgl",kernelFunc:Ck},Ak=ey({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),$k={kernelName:I.wYB,backendName:"webgl",kernelFunc:Ak},Dk=ey({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),_k={kernelName:I.MRv,backendName:"webgl",kernelFunc:Dk},Fk={kernelName:I.TQc,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:o}=r;I.D5U.assert(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const i=a.reduce(((e,t)=>e*t)),u=[[0,0]];u.push(...o);for(let y=1+a.length;y<s.shape.length;++y)u.push([0,0]);const l=[],c=Bv({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),p=I.Wap.getReshaped(c.shape,a,i,!1),h=I.Wap.getPermuted(p.length,a.length,!1),d=I.Wap.getReshapedPermuted(c.shape,a,i,!1),f=cy({inputs:{x:c},backend:n,attrs:{shape:p}}),m=wy({inputs:{x:f},backend:n,attrs:{perm:h}}),g=cy({inputs:{x:m},backend:n,attrs:{shape:d}});return l.push(c),l.push(f),l.push(m),l.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}};const Rk={kernelName:I.O3z,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:o}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n         ${s.shape}`);if(0!==o.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${o.shape}`);const i=n.readSync(r.dataId),u=n.readSync(s.dataId),l=n.readSync(a.dataId),c=n.readSync(o.dataId)[0],[p,h,d,f,m]=hg(i,r.shape,r.dtype,u,s.dtype,l,c);return[n.makeTensorInfo(h,r.dtype,p),n.makeTensorInfo([h[0]],s.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};const Ok={kernelName:I.nhH,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const o=Array.from(n.readSync(s.dataId)),i=n.readSync(r.dataId),u=Array.from(n.readSync(a.dataId)),[l,c,p]=dg(i,r.shape,r.dtype,o,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([p.length],a.dtype,new Int32Array(p))]}};const Mk={kernelName:I.w3H,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${a.shape}`);const o=n.readSync(r.dataId),i=n.readSync(s.dataId),u=n.readSync(a.dataId),[l,c]=fg(o,r.shape,r.dtype,i,u,!0);return n.makeTensorInfo(c,r.dtype,l)}};const Bk={kernelName:I.ZjV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${a.shape}`);const o=n.readSync(r.dataId),i=n.readSync(s.dataId),u=n.readSync(a.dataId),[l,c]=fg(o,r.shape,r.dtype,i,u);return n.makeTensorInfo(c,r.dtype,l)}};const Lk={kernelName:I.D2d,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:o}=t,{outputShape:i}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:p,outputSize:h}=I.Wap.calculateShapes(a,s,i);if("string"===a.dtype){const e=n.bufferSync(s),t=n.bufferSync(a),r=I.D5U.decodeString(n.readSync(o.dataId)[0]),d=ug(e,t,i,h,c,l,u,p,r,false);return n.makeTensorInfo(i,d.dtype,d.values)}const d=new mk(l,u,s.shape.length,a.shape.length,p,[h,1],false),f=n.runWebGLProgram(d,[a,s,o],a.dtype),m=cy({inputs:{x:f},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),m}};const Wk={kernelName:I.L8s,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:o}=r,i=I.D5U.parseAxisParam(o,s.shape)[0],u=I.Wap.prepareSplitSize(s,a,i),l=s.shape.length,c=new Array(l).fill(0),p=s.shape.slice();return u.map((e=>{const t=[...p];t[i]=e;const r=gb({inputs:{x:s},backend:n,attrs:{begin:c,size:t}});return c[i]+=e,r}))}},zk="return sqrt(x);",Pk=ey({opSnippet:zk,packedOpSnippet:zk,cpuKernelImpl:mg}),Uk={kernelName:I.FKq,backendName:"webgl",kernelFunc:Pk},Vk=ey({opSnippet:"return x * x;"}),Gk={kernelName:I.bK0,backendName:"webgl",kernelFunc:Vk},Hk="return (a - b) * (a - b);",jk=ty({opSnippet:Hk,packedOpSnippet:Hk}),Xk={kernelName:I._tC,backendName:"webgl",kernelFunc:jk};const qk={kernelName:I.h8e,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,s=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,a=new Fg(r.shape,s);return n.runWebGLProgram(a,[r],r.dtype)}};class Kk{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=(0,dm.kW)(n.length),a=(0,dm.kW)(n.length);let o="";if(1===r)o="coords * strides + begin";else{let e=0;o=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${e});\n      ${s} strides = ${s}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${o}));\n      }\n    `}}const Qk={kernelName:I.jQk,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:o,strides:i,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:h}=r,{finalShapeSparse:d,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=I.kuN.sliceInfo(s.shape,a,o,i,u,l,c,p,h);let v;if(m)v=cy({inputs:{x:s},backend:n,attrs:{shape:f}});else if(g||y){I.D5U.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=I.kuN.computeOutShape(b,x,w),t=gb({inputs:{x:s},backend:n,attrs:{begin:b,size:e}});v=cy({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{if(n.shouldExecuteOnCPU([s])){const e=n.readSync(s.dataId),t=(0,I.f3b)(s.shape,s.dtype,e),r=gg(d,t,w,b);v=n.makeTensorInfo(f,s.dtype,r.values)}else{const e=new Kk(b,w,d);v=n.runWebGLProgram(e,[s],s.dtype)}}const k=cy({inputs:{x:v},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(v),k}};const Zk={kernelName:I._JP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:o,rightPad:i,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:p}=t,h=n.readSync(c.dataId),d=n.readSync(p.dataId),[f,m]=yg(h,d,s,a,o,i,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}};const Yk={kernelName:I.s1s,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:o}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==o.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const i=n.readSync(a.dataId),u=n.readSync(o.dataId)[0],[l,c,p]=bg(i,u,s),h=c.length;return[n.makeTensorInfo([h,2],"int32",l),n.makeTensorInfo([h],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(p))]}};const Jk={kernelName:I.XkS,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const o=n.readSync(a.dataId),i=xg(o,s);return n.makeTensorInfo(a.shape,"int32",i)}},eI=ey({opSnippet:"return tan(x);"}),tI={kernelName:I.sEM,backendName:"webgl",kernelFunc:eI},nI=ey({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),rI={kernelName:I.MIZ,backendName:"webgl",kernelFunc:nI};class sI{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;const r=(0,dm.kW)(this.rank),s=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let s=0;s<e.length;s++)r.push(`imod(${n[s]}, ${e[s]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function aI(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;if("string"===s.dtype||s.shape.length>5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map((e=>I.D5U.decodeString(e))):e,r=(0,I.f3b)(s.shape,s.dtype,t),o=vg(r,a);return n.makeTensorInfo(o.shape,o.dtype,o.values)}const o=new sI(s.shape,a);return n.runWebGLProgram(o,[s],s.dtype)}const oI={kernelName:I.n9L,backendName:"webgl",kernelFunc:aI};class iI{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class uI{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function lI(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function cI(e){let t=1;for(;t<e;)t*=2;return t}const pI={kernelName:I.cWu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:o}=r,i=(0,I.OBj)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=(0,I.OBj)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=s.shape,c=l[l.length-1];if(n.shouldExecuteOnCPU([s])||c<i||a>u){const e=n.readSync(s.dataId),[t,r]=kg(e,l,s.dtype,a,o);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===a)return l[l.length-1]=0,[n.makeTensorInfo(l,s.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===c)return[s,Qx({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const p=n.texData.get(s.dataId),h=null!==p&&p.isPacked,d=h?n.unpackTensor(s):s,f=I.D5U.sizeFromShape(l)/c,m=cy({inputs:{x:d},attrs:{shape:[f,c]},backend:n});h&&lI(n,d);const g=cI(a),y=cI(c);let b=null;const x=()=>null===b?[m,m]:[m,b],w=(e,t,r)=>{const s=x(),a=new iI(r),o=[[c],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],i=b;b=n.runWebGLProgram(a,s,"int32",o),lI(n,i)};for(let I=1;I<g;I*=2){const e=2*I;for(let t=I;t>=1;t/=2)w(e,t,[f,y])}for(let I=y;I>g;I/=2){const e=x(),t=new uI([f,I/2]),r=[[c],[null===b?1:0],[g]],s=b;b=n.runWebGLProgram(t,e,"int32",r),lI(n,s);const a=g/2,o=2*a;for(let n=a;n>=1;n/=2)w(o,n,b.shape)}let v=b;b=gb({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,a]}}),lI(n,v);let k=fw({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});lI(n,m);const N=l.slice(0,-1);N.push(a),v=b,b=cy({inputs:{x:b},attrs:{shape:N},backend:n}),lI(n,v);const S=k;return k=cy({inputs:{x:k},attrs:{shape:N},backend:n}),lI(n,S),[k,b]}};class hI{constructor(e,t,n,r,s,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const o="nearest"===n?1:2;let i;switch(r){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${i} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${s});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${s});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${o} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const dI={kernelName:I.wx7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,transforms:a}=t,{interpolation:o,fillMode:i,fillValue:u,outputShape:l}=r,[c,p,h,d]=s.shape,[f,m]=null!=l?l:[p,h],g=new hI(p,h,o,i,u,[c,f,m,d]);return n.runWebGLProgram(g,[s,a],"float32")}};const fI={kernelName:I.kpP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;cm(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=r.readSync(a.dataId),{outputValues:i,outputShape:u,indices:l}=Ng(o,s,a.shape,a.dtype);return[r.makeTensorInfo(u,a.dtype,i),r.makeTensorInfo([l.length],"int32",l)]}};const mI={kernelName:I.ToN,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const o=s,i=o.shape.length,u=s.shape[a],l=new Array(i-1);let c=0;for(let m=0;m<i;m++)m!==a&&(l[c++]=o.shape[m]);const p=[],h=new Array(i).fill(0),d=o.shape.slice();d[a]=1;const f=new Array(u);for(let m=0;m<f.length;m++){h[a]=m;const e=gb({inputs:{x:o},backend:n,attrs:{begin:h,size:d}}),t=cy({inputs:{x:e},backend:n,attrs:{shape:l}});f[m]=t,p.push(e)}return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class gI{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,s=e.inSize,a=e.numSegments,o=a*Math.ceil(s/n);this.outputShape=[r,o];const i=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${p}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}const yI=[Iy,Sy,Cy,Ay,_y,Oy,My,By,Vy,Gy,jy,qy,Qy,Yy,eb,rb,sb,ib,ub,lb,hb,bb,xb,wb,Sb,Eb,Db,Xg,Rb,Ub,qb,Jb,ex,tx,nx,rx,ax,ix,lx,mx,gx,yx,xx,kx,Sx,Tx,Ex,$x,Dx,Fx,Rx,Mx,Lx,zx,Ux,Hx,qx,Zx,Jx,nw,sw,iw,lw,cw,hw,mw,yw,xw,Hg,ww,Wb,kw,Nw,Tw,Qg,Ew,$w,Dw,Fw,Ow,Bw,Ww,Pw,Gw,jw,qw,Qw,Zw,Yw,tv,nv,rv,sv,av,iv,cv,hv,vv,ly,kv,Nv,Tv,Ev,kb,$v,Fv,Rv,Lv,zv,Jg,Pv,Vv,Nb,mv,Hv,Xv,Kv,py,Yv,ek,rk,ak,uk,ck,hk,fk,gk,bk,wk,kk,Nk,Tk,Ek,$k,yb,wv,_k,Fk,Rk,Ok,Mk,Bk,Lk,Wk,Uk,Gk,Xk,qk,Qk,Zk,Yk,Jk,bv,xy,tI,rI,oI,pI,dI,vy,fI,mI,{kernelName:I.Qvg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:o}=r,i=s.shape.length,u=[];let l=0;const c=I.Wap.getAxesPermutation([l],i);let p=s;null!=c&&(p=wy({inputs:{x:s},backend:n,attrs:{perm:c}}),u.push(p),l=I.Wap.getInnerMostAxes(1,i)[0]);const h=I.Wap.segment_util.computeOutShape(p.shape,l,o),d=I.D5U.sizeFromShape([p.shape[l]]),f=cy({inputs:{x:p},backend:n,attrs:{shape:[-1,d]}});u.push(f);const m=(0,I.z4k)(s.dtype),g=(e,t,r,s,a)=>{const o=e.shape[0],i=e.shape[1],l=I.Wap.segment_util.segOpComputeOptimalWindowSize(i,a),c=new gI({windowSize:l,inSize:i,batchSize:o,numSegments:a},t),p=n.compileAndRun(c,[e,r],s);if(u.push(p),p.shape[1]===a)return p;const h=Uv({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),d=aI({inputs:{x:h},backend:n,attrs:{reps:[i/l]}});u.push(h),u.push(d);return g(p,t,d,s,a)},y=cy({inputs:{x:g(f,"unsortedSegmentSum",a,m,o)},backend:n,attrs:{shape:h}});let b=y;if(null!=c){u.push(y);const e=I.Wap.getUndoAxesPermutation(c);b=wy({inputs:{x:b},backend:n,attrs:{perm:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},_v];for(const bI of yI)(0,I.wCN)(bI);I.jTM,Ua.i},3720:function(e){e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(S){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var s={},a={};function o(e,t){var n,r,o;return t?(o=0<=(e>>>=0)&&e<256)&&(r=a[e])?r:(n=u(e,(0|e)<0?-1:0,!0),o&&(a[e]=n),n):(o=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=u(e,e<0?-1:0,!1),o&&(s[e]=n),n)}function i(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=d)return k}else{if(e<=-f)return I;if(e+1>=f)return v}return e<0?i(-e,t).neg():u(e%h|0,e/h|0,t)}function u(e,t,r){return new n(e,t,r)}n.fromInt=o,n.fromNumber=i,n.fromBits=u;var l=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"===typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var s=i(l(n,8)),a=g,o=0;o<e.length;o+=8){var u=Math.min(8,e.length-o),p=parseInt(e.substring(o,o+u),n);if(u<8){var h=i(l(n,u));a=a.mul(h).add(i(p))}else a=(a=a.mul(s)).add(i(p))}return a.unsigned=t,a}function p(e,t){return"number"===typeof e?i(e,t):"string"===typeof e?c(e,t):u(e.low,e.high,"boolean"===typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=p;var h=4294967296,d=h*h,f=d/2,m=o(1<<24),g=o(0);n.ZERO=g;var y=o(0,!0);n.UZERO=y;var b=o(1);n.ONE=b;var x=o(1,!0);n.UONE=x;var w=o(-1);n.NEG_ONE=w;var v=u(-1,2147483647,!1);n.MAX_VALUE=v;var k=u(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var I=u(0,-2147483648,!1);n.MIN_VALUE=I;var N=n.prototype;N.toInt=function(){return this.unsigned?this.low>>>0:this.low},N.toNumber=function(){return this.unsigned?(this.high>>>0)*h+(this.low>>>0):this.high*h+(this.low>>>0)},N.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var t=i(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var s=i(l(e,6),this.unsigned),a=this,o="";;){var u=a.div(s),c=(a.sub(u.mul(s)).toInt()>>>0).toString(e);if((a=u).isZero())return c+o;for(;c.length<6;)c="0"+c;o=""+c+o}},N.getHighBits=function(){return this.high},N.getHighBitsUnsigned=function(){return this.high>>>0},N.getLowBits=function(){return this.low},N.getLowBitsUnsigned=function(){return this.low>>>0},N.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},N.isZero=function(){return 0===this.high&&0===this.low},N.eqz=N.isZero,N.isNegative=function(){return!this.unsigned&&this.high<0},N.isPositive=function(){return this.unsigned||this.high>=0},N.isOdd=function(){return 1===(1&this.low)},N.isEven=function(){return 0===(1&this.low)},N.equals=function(e){return r(e)||(e=p(e)),(this.unsigned===e.unsigned||this.high>>>31!==1||e.high>>>31!==1)&&(this.high===e.high&&this.low===e.low)},N.eq=N.equals,N.notEquals=function(e){return!this.eq(e)},N.neq=N.notEquals,N.ne=N.notEquals,N.lessThan=function(e){return this.comp(e)<0},N.lt=N.lessThan,N.lessThanOrEqual=function(e){return this.comp(e)<=0},N.lte=N.lessThanOrEqual,N.le=N.lessThanOrEqual,N.greaterThan=function(e){return this.comp(e)>0},N.gt=N.greaterThan,N.greaterThanOrEqual=function(e){return this.comp(e)>=0},N.gte=N.greaterThanOrEqual,N.ge=N.greaterThanOrEqual,N.compare=function(e){if(r(e)||(e=p(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},N.comp=N.compare,N.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(b)},N.neg=N.negate,N.add=function(e){r(e)||(e=p(e));var t=this.high>>>16,n=65535&this.high,s=this.low>>>16,a=65535&this.low,o=e.high>>>16,i=65535&e.high,l=e.low>>>16,c=0,h=0,d=0,f=0;return d+=(f+=a+(65535&e.low))>>>16,h+=(d+=s+l)>>>16,c+=(h+=n+i)>>>16,c+=t+o,u((d&=65535)<<16|(f&=65535),(c&=65535)<<16|(h&=65535),this.unsigned)},N.subtract=function(e){return r(e)||(e=p(e)),this.add(e.neg())},N.sub=N.subtract,N.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=p(e)),t)return u(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(I))return e.isOdd()?I:g;if(e.eq(I))return this.isOdd()?I:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return i(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,s=65535&this.high,a=this.low>>>16,o=65535&this.low,l=e.high>>>16,c=65535&e.high,h=e.low>>>16,d=65535&e.low,f=0,y=0,b=0,x=0;return b+=(x+=o*d)>>>16,y+=(b+=a*d)>>>16,b&=65535,y+=(b+=o*h)>>>16,f+=(y+=s*d)>>>16,y&=65535,f+=(y+=a*h)>>>16,y&=65535,f+=(y+=o*c)>>>16,f+=n*d+s*h+a*c+o*l,u((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},N.mul=N.multiply,N.divide=function(e){if(r(e)||(e=p(e)),e.isZero())throw Error("division by zero");var n,s,a;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return x;a=y}else{if(this.eq(I))return e.eq(b)||e.eq(w)?I:e.eq(I)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:w:(s=this.sub(e.mul(n)),a=n.add(s.div(e)));if(e.eq(I))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();a=g}for(s=this;s.gte(e);){n=Math.max(1,Math.floor(s.toNumber()/e.toNumber()));for(var o=Math.ceil(Math.log(n)/Math.LN2),c=o<=48?1:l(2,o-48),h=i(n),d=h.mul(e);d.isNegative()||d.gt(s);)d=(h=i(n-=c,this.unsigned)).mul(e);h.isZero()&&(h=b),a=a.add(h),s=s.sub(d)}return a},N.div=N.divide,N.modulo=function(e){return r(e)||(e=p(e)),t?u((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},N.mod=N.modulo,N.rem=N.modulo,N.not=function(){return u(~this.low,~this.high,this.unsigned)},N.and=function(e){return r(e)||(e=p(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},N.or=function(e){return r(e)||(e=p(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},N.xor=function(e){return r(e)||(e=p(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},N.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},N.shl=N.shiftLeft,N.shiftRight=function(e){return r(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},N.shr=N.shiftRight,N.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},N.shru=N.shiftRightUnsigned,N.shr_u=N.shiftRightUnsigned,N.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},N.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},N.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},N.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},N.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},3454:function(e,t,n){"use strict";var r,s;e.exports=(null==(r=n.g.process)?void 0:r.env)&&"object"===typeof(null==(s=n.g.process)?void 0:s.env)?n.g.process:n(7663)},1876:function(e){!function(){var t={449:function(e,t){"use strict";t.byteLength=function(e){var t=u(e),n=t[0],r=t[1];return 3*(n+r)/4-r},t.toByteArray=function(e){var t,n,a=u(e),o=a[0],i=a[1],l=new s(function(e,t,n){return 3*(t+n)/4-n}(0,o,i)),c=0,p=i>0?o-4:o;for(n=0;n<p;n+=4)t=r[e.charCodeAt(n)]<<18|r[e.charCodeAt(n+1)]<<12|r[e.charCodeAt(n+2)]<<6|r[e.charCodeAt(n+3)],l[c++]=t>>16&255,l[c++]=t>>8&255,l[c++]=255&t;2===i&&(t=r[e.charCodeAt(n)]<<2|r[e.charCodeAt(n+1)]>>4,l[c++]=255&t);1===i&&(t=r[e.charCodeAt(n)]<<10|r[e.charCodeAt(n+1)]<<4|r[e.charCodeAt(n+2)]>>2,l[c++]=t>>8&255,l[c++]=255&t);return l},t.fromByteArray=function(e){for(var t,r=e.length,s=r%3,a=[],o=16383,i=0,u=r-s;i<u;i+=o)a.push(c(e,i,i+o>u?u:i+o));1===s?(t=e[r-1],a.push(n[t>>2]+n[t<<4&63]+"==")):2===s&&(t=(e[r-2]<<8)+e[r-1],a.push(n[t>>10]+n[t>>4&63]+n[t<<2&63]+"="));return a.join("")};for(var n=[],r=[],s="undefined"!==typeof Uint8Array?Uint8Array:Array,a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",o=0,i=a.length;o<i;++o)n[o]=a[o],r[a.charCodeAt(o)]=o;function u(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=e.indexOf("=");return-1===n&&(n=t),[n,n===t?0:4-n%4]}function l(e){return n[e>>18&63]+n[e>>12&63]+n[e>>6&63]+n[63&e]}function c(e,t,n){for(var r,s=[],a=t;a<n;a+=3)r=(e[a]<<16&16711680)+(e[a+1]<<8&65280)+(255&e[a+2]),s.push(l(r));return s.join("")}r["-".charCodeAt(0)]=62,r["_".charCodeAt(0)]=63},877:function(e,t,n){"use strict";var r=n(449),s=n(543),a="function"===typeof Symbol&&"function"===typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;t.Buffer=u,t.SlowBuffer=function(e){+e!=e&&(e=0);return u.alloc(+e)},t.INSPECT_MAX_BYTES=50;var o=2147483647;function i(e){if(e>o)throw new RangeError('The value "'+e+'" is invalid for option "size"');var t=new Uint8Array(e);return Object.setPrototypeOf(t,u.prototype),t}function u(e,t,n){if("number"===typeof e){if("string"===typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return p(e)}return l(e,t,n)}function l(e,t,n){if("string"===typeof e)return function(e,t){"string"===typeof t&&""!==t||(t="utf8");if(!u.isEncoding(t))throw new TypeError("Unknown encoding: "+t);var n=0|m(e,t),r=i(n),s=r.write(e,t);s!==n&&(r=r.slice(0,s));return r}(e,t);if(ArrayBuffer.isView(e))return h(e);if(null==e)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(U(e,ArrayBuffer)||e&&U(e.buffer,ArrayBuffer))return d(e,t,n);if("undefined"!==typeof SharedArrayBuffer&&(U(e,SharedArrayBuffer)||e&&U(e.buffer,SharedArrayBuffer)))return d(e,t,n);if("number"===typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');var r=e.valueOf&&e.valueOf();if(null!=r&&r!==e)return u.from(r,t,n);var s=function(e){if(u.isBuffer(e)){var t=0|f(e.length),n=i(t);return 0===n.length||e.copy(n,0,0,t),n}if(void 0!==e.length)return"number"!==typeof e.length||V(e.length)?i(0):h(e);if("Buffer"===e.type&&Array.isArray(e.data))return h(e.data)}(e);if(s)return s;if("undefined"!==typeof Symbol&&null!=Symbol.toPrimitive&&"function"===typeof e[Symbol.toPrimitive])return u.from(e[Symbol.toPrimitive]("string"),t,n);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function c(e){if("number"!==typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function p(e){return c(e),i(e<0?0:0|f(e))}function h(e){for(var t=e.length<0?0:0|f(e.length),n=i(t),r=0;r<t;r+=1)n[r]=255&e[r];return n}function d(e,t,n){if(t<0||e.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(n||0))throw new RangeError('"length" is outside of buffer bounds');var r;return r=void 0===t&&void 0===n?new Uint8Array(e):void 0===n?new Uint8Array(e,t):new Uint8Array(e,t,n),Object.setPrototypeOf(r,u.prototype),r}function f(e){if(e>=o)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+o.toString(16)+" bytes");return 0|e}function m(e,t){if(u.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||U(e,ArrayBuffer))return e.byteLength;if("string"!==typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);var n=e.length,r=arguments.length>2&&!0===arguments[2];if(!r&&0===n)return 0;for(var s=!1;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":return W(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return z(e).length;default:if(s)return r?-1:W(e).length;t=(""+t).toLowerCase(),s=!0}}function g(e,t,n){var r=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return D(this,t,n);case"utf8":case"utf-8":return C(this,t,n);case"ascii":return A(this,t,n);case"latin1":case"binary":return $(this,t,n);case"base64":return T(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return _(this,t,n);default:if(r)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),r=!0}}function y(e,t,n){var r=e[t];e[t]=e[n],e[n]=r}function b(e,t,n,r,s){if(0===e.length)return-1;if("string"===typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),V(n=+n)&&(n=s?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(s)return-1;n=e.length-1}else if(n<0){if(!s)return-1;n=0}if("string"===typeof t&&(t=u.from(t,r)),u.isBuffer(t))return 0===t.length?-1:x(e,t,n,r,s);if("number"===typeof t)return t&=255,"function"===typeof Uint8Array.prototype.indexOf?s?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):x(e,[t],n,r,s);throw new TypeError("val must be string, number or Buffer")}function x(e,t,n,r,s){var a,o=1,i=e.length,u=t.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(e.length<2||t.length<2)return-1;o=2,i/=2,u/=2,n/=2}function l(e,t){return 1===o?e[t]:e.readUInt16BE(t*o)}if(s){var c=-1;for(a=n;a<i;a++)if(l(e,a)===l(t,-1===c?0:a-c)){if(-1===c&&(c=a),a-c+1===u)return c*o}else-1!==c&&(a-=a-c),c=-1}else for(n+u>i&&(n=i-u),a=n;a>=0;a--){for(var p=!0,h=0;h<u;h++)if(l(e,a+h)!==l(t,h)){p=!1;break}if(p)return a}return-1}function w(e,t,n,r){n=Number(n)||0;var s=e.length-n;r?(r=Number(r))>s&&(r=s):r=s;var a=t.length;r>a/2&&(r=a/2);for(var o=0;o<r;++o){var i=parseInt(t.substr(2*o,2),16);if(V(i))return o;e[n+o]=i}return o}function v(e,t,n,r){return P(W(t,e.length-n),e,n,r)}function k(e,t,n,r){return P(function(e){for(var t=[],n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}(t),e,n,r)}function I(e,t,n,r){return k(e,t,n,r)}function N(e,t,n,r){return P(z(t),e,n,r)}function S(e,t,n,r){return P(function(e,t){for(var n,r,s,a=[],o=0;o<e.length&&!((t-=2)<0);++o)r=(n=e.charCodeAt(o))>>8,s=n%256,a.push(s),a.push(r);return a}(t,e.length-n),e,n,r)}function T(e,t,n){return 0===t&&n===e.length?r.fromByteArray(e):r.fromByteArray(e.slice(t,n))}function C(e,t,n){n=Math.min(e.length,n);for(var r=[],s=t;s<n;){var a,o,i,u,l=e[s],c=null,p=l>239?4:l>223?3:l>191?2:1;if(s+p<=n)switch(p){case 1:l<128&&(c=l);break;case 2:128===(192&(a=e[s+1]))&&(u=(31&l)<<6|63&a)>127&&(c=u);break;case 3:a=e[s+1],o=e[s+2],128===(192&a)&&128===(192&o)&&(u=(15&l)<<12|(63&a)<<6|63&o)>2047&&(u<55296||u>57343)&&(c=u);break;case 4:a=e[s+1],o=e[s+2],i=e[s+3],128===(192&a)&&128===(192&o)&&128===(192&i)&&(u=(15&l)<<18|(63&a)<<12|(63&o)<<6|63&i)>65535&&u<1114112&&(c=u)}null===c?(c=65533,p=1):c>65535&&(c-=65536,r.push(c>>>10&1023|55296),c=56320|1023&c),r.push(c),s+=p}return E(r)}t.kMaxLength=o,u.TYPED_ARRAY_SUPPORT=function(){try{var e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),u.TYPED_ARRAY_SUPPORT||"undefined"===typeof console||"function"!==typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(u.prototype,"parent",{enumerable:!0,get:function(){if(u.isBuffer(this))return this.buffer}}),Object.defineProperty(u.prototype,"offset",{enumerable:!0,get:function(){if(u.isBuffer(this))return this.byteOffset}}),u.poolSize=8192,u.from=function(e,t,n){return l(e,t,n)},Object.setPrototypeOf(u.prototype,Uint8Array.prototype),Object.setPrototypeOf(u,Uint8Array),u.alloc=function(e,t,n){return function(e,t,n){return c(e),e<=0?i(e):void 0!==t?"string"===typeof n?i(e).fill(t,n):i(e).fill(t):i(e)}(e,t,n)},u.allocUnsafe=function(e){return p(e)},u.allocUnsafeSlow=function(e){return p(e)},u.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==u.prototype},u.compare=function(e,t){if(U(e,Uint8Array)&&(e=u.from(e,e.offset,e.byteLength)),U(t,Uint8Array)&&(t=u.from(t,t.offset,t.byteLength)),!u.isBuffer(e)||!u.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;for(var n=e.length,r=t.length,s=0,a=Math.min(n,r);s<a;++s)if(e[s]!==t[s]){n=e[s],r=t[s];break}return n<r?-1:r<n?1:0},u.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},u.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return u.alloc(0);var n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;var r=u.allocUnsafe(t),s=0;for(n=0;n<e.length;++n){var a=e[n];if(U(a,Uint8Array)&&(a=u.from(a)),!u.isBuffer(a))throw new TypeError('"list" argument must be an Array of Buffers');a.copy(r,s),s+=a.length}return r},u.byteLength=m,u.prototype._isBuffer=!0,u.prototype.swap16=function(){var e=this.length;if(e%2!==0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)y(this,t,t+1);return this},u.prototype.swap32=function(){var e=this.length;if(e%4!==0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)y(this,t,t+3),y(this,t+1,t+2);return this},u.prototype.swap64=function(){var e=this.length;if(e%8!==0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)y(this,t,t+7),y(this,t+1,t+6),y(this,t+2,t+5),y(this,t+3,t+4);return this},u.prototype.toString=function(){var e=this.length;return 0===e?"":0===arguments.length?C(this,0,e):g.apply(this,arguments)},u.prototype.toLocaleString=u.prototype.toString,u.prototype.equals=function(e){if(!u.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===u.compare(this,e)},u.prototype.inspect=function(){var e="",n=t.INSPECT_MAX_BYTES;return e=this.toString("hex",0,n).replace(/(.{2})/g,"$1 ").trim(),this.length>n&&(e+=" ... "),"<Buffer "+e+">"},a&&(u.prototype[a]=u.prototype.inspect),u.prototype.compare=function(e,t,n,r,s){if(U(e,Uint8Array)&&(e=u.from(e,e.offset,e.byteLength)),!u.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===r&&(r=0),void 0===s&&(s=this.length),t<0||n>e.length||r<0||s>this.length)throw new RangeError("out of range index");if(r>=s&&t>=n)return 0;if(r>=s)return-1;if(t>=n)return 1;if(this===e)return 0;for(var a=(s>>>=0)-(r>>>=0),o=(n>>>=0)-(t>>>=0),i=Math.min(a,o),l=this.slice(r,s),c=e.slice(t,n),p=0;p<i;++p)if(l[p]!==c[p]){a=l[p],o=c[p];break}return a<o?-1:o<a?1:0},u.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},u.prototype.indexOf=function(e,t,n){return b(this,e,t,n,!0)},u.prototype.lastIndexOf=function(e,t,n){return b(this,e,t,n,!1)},u.prototype.write=function(e,t,n,r){if(void 0===t)r="utf8",n=this.length,t=0;else if(void 0===n&&"string"===typeof t)r=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(n)?(n>>>=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var s=this.length-t;if((void 0===n||n>s)&&(n=s),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var a=!1;;)switch(r){case"hex":return w(this,e,t,n);case"utf8":case"utf-8":return v(this,e,t,n);case"ascii":return k(this,e,t,n);case"latin1":case"binary":return I(this,e,t,n);case"base64":return N(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return S(this,e,t,n);default:if(a)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),a=!0}},u.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function E(e){var t=e.length;if(t<=4096)return String.fromCharCode.apply(String,e);for(var n="",r=0;r<t;)n+=String.fromCharCode.apply(String,e.slice(r,r+=4096));return n}function A(e,t,n){var r="";n=Math.min(e.length,n);for(var s=t;s<n;++s)r+=String.fromCharCode(127&e[s]);return r}function $(e,t,n){var r="";n=Math.min(e.length,n);for(var s=t;s<n;++s)r+=String.fromCharCode(e[s]);return r}function D(e,t,n){var r=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>r)&&(n=r);for(var s="",a=t;a<n;++a)s+=G[e[a]];return s}function _(e,t,n){for(var r=e.slice(t,n),s="",a=0;a<r.length;a+=2)s+=String.fromCharCode(r[a]+256*r[a+1]);return s}function F(e,t,n){if(e%1!==0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function R(e,t,n,r,s,a){if(!u.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>s||t<a)throw new RangeError('"value" argument is out of bounds');if(n+r>e.length)throw new RangeError("Index out of range")}function O(e,t,n,r,s,a){if(n+r>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function M(e,t,n,r,a){return t=+t,n>>>=0,a||O(e,0,n,4),s.write(e,t,n,r,23,4),n+4}function B(e,t,n,r,a){return t=+t,n>>>=0,a||O(e,0,n,8),s.write(e,t,n,r,52,8),n+8}u.prototype.slice=function(e,t){var n=this.length;(e=~~e)<0?(e+=n)<0&&(e=0):e>n&&(e=n),(t=void 0===t?n:~~t)<0?(t+=n)<0&&(t=0):t>n&&(t=n),t<e&&(t=e);var r=this.subarray(e,t);return Object.setPrototypeOf(r,u.prototype),r},u.prototype.readUIntLE=function(e,t,n){e>>>=0,t>>>=0,n||F(e,t,this.length);for(var r=this[e],s=1,a=0;++a<t&&(s*=256);)r+=this[e+a]*s;return r},u.prototype.readUIntBE=function(e,t,n){e>>>=0,t>>>=0,n||F(e,t,this.length);for(var r=this[e+--t],s=1;t>0&&(s*=256);)r+=this[e+--t]*s;return r},u.prototype.readUInt8=function(e,t){return e>>>=0,t||F(e,1,this.length),this[e]},u.prototype.readUInt16LE=function(e,t){return e>>>=0,t||F(e,2,this.length),this[e]|this[e+1]<<8},u.prototype.readUInt16BE=function(e,t){return e>>>=0,t||F(e,2,this.length),this[e]<<8|this[e+1]},u.prototype.readUInt32LE=function(e,t){return e>>>=0,t||F(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},u.prototype.readUInt32BE=function(e,t){return e>>>=0,t||F(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},u.prototype.readIntLE=function(e,t,n){e>>>=0,t>>>=0,n||F(e,t,this.length);for(var r=this[e],s=1,a=0;++a<t&&(s*=256);)r+=this[e+a]*s;return r>=(s*=128)&&(r-=Math.pow(2,8*t)),r},u.prototype.readIntBE=function(e,t,n){e>>>=0,t>>>=0,n||F(e,t,this.length);for(var r=t,s=1,a=this[e+--r];r>0&&(s*=256);)a+=this[e+--r]*s;return a>=(s*=128)&&(a-=Math.pow(2,8*t)),a},u.prototype.readInt8=function(e,t){return e>>>=0,t||F(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},u.prototype.readInt16LE=function(e,t){e>>>=0,t||F(e,2,this.length);var n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},u.prototype.readInt16BE=function(e,t){e>>>=0,t||F(e,2,this.length);var n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},u.prototype.readInt32LE=function(e,t){return e>>>=0,t||F(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},u.prototype.readInt32BE=function(e,t){return e>>>=0,t||F(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},u.prototype.readFloatLE=function(e,t){return e>>>=0,t||F(e,4,this.length),s.read(this,e,!0,23,4)},u.prototype.readFloatBE=function(e,t){return e>>>=0,t||F(e,4,this.length),s.read(this,e,!1,23,4)},u.prototype.readDoubleLE=function(e,t){return e>>>=0,t||F(e,8,this.length),s.read(this,e,!0,52,8)},u.prototype.readDoubleBE=function(e,t){return e>>>=0,t||F(e,8,this.length),s.read(this,e,!1,52,8)},u.prototype.writeUIntLE=function(e,t,n,r){(e=+e,t>>>=0,n>>>=0,r)||R(this,e,t,n,Math.pow(2,8*n)-1,0);var s=1,a=0;for(this[t]=255&e;++a<n&&(s*=256);)this[t+a]=e/s&255;return t+n},u.prototype.writeUIntBE=function(e,t,n,r){(e=+e,t>>>=0,n>>>=0,r)||R(this,e,t,n,Math.pow(2,8*n)-1,0);var s=n-1,a=1;for(this[t+s]=255&e;--s>=0&&(a*=256);)this[t+s]=e/a&255;return t+n},u.prototype.writeUInt8=function(e,t,n){return e=+e,t>>>=0,n||R(this,e,t,1,255,0),this[t]=255&e,t+1},u.prototype.writeUInt16LE=function(e,t,n){return e=+e,t>>>=0,n||R(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},u.prototype.writeUInt16BE=function(e,t,n){return e=+e,t>>>=0,n||R(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},u.prototype.writeUInt32LE=function(e,t,n){return e=+e,t>>>=0,n||R(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},u.prototype.writeUInt32BE=function(e,t,n){return e=+e,t>>>=0,n||R(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},u.prototype.writeIntLE=function(e,t,n,r){if(e=+e,t>>>=0,!r){var s=Math.pow(2,8*n-1);R(this,e,t,n,s-1,-s)}var a=0,o=1,i=0;for(this[t]=255&e;++a<n&&(o*=256);)e<0&&0===i&&0!==this[t+a-1]&&(i=1),this[t+a]=(e/o>>0)-i&255;return t+n},u.prototype.writeIntBE=function(e,t,n,r){if(e=+e,t>>>=0,!r){var s=Math.pow(2,8*n-1);R(this,e,t,n,s-1,-s)}var a=n-1,o=1,i=0;for(this[t+a]=255&e;--a>=0&&(o*=256);)e<0&&0===i&&0!==this[t+a+1]&&(i=1),this[t+a]=(e/o>>0)-i&255;return t+n},u.prototype.writeInt8=function(e,t,n){return e=+e,t>>>=0,n||R(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},u.prototype.writeInt16LE=function(e,t,n){return e=+e,t>>>=0,n||R(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},u.prototype.writeInt16BE=function(e,t,n){return e=+e,t>>>=0,n||R(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},u.prototype.writeInt32LE=function(e,t,n){return e=+e,t>>>=0,n||R(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},u.prototype.writeInt32BE=function(e,t,n){return e=+e,t>>>=0,n||R(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},u.prototype.writeFloatLE=function(e,t,n){return M(this,e,t,!0,n)},u.prototype.writeFloatBE=function(e,t,n){return M(this,e,t,!1,n)},u.prototype.writeDoubleLE=function(e,t,n){return B(this,e,t,!0,n)},u.prototype.writeDoubleBE=function(e,t,n){return B(this,e,t,!1,n)},u.prototype.copy=function(e,t,n,r){if(!u.isBuffer(e))throw new TypeError("argument should be a Buffer");if(n||(n=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);var s=r-n;if(this===e&&"function"===typeof Uint8Array.prototype.copyWithin)this.copyWithin(t,n,r);else if(this===e&&n<t&&t<r)for(var a=s-1;a>=0;--a)e[a+t]=this[a+n];else Uint8Array.prototype.set.call(e,this.subarray(n,r),t);return s},u.prototype.fill=function(e,t,n,r){if("string"===typeof e){if("string"===typeof t?(r=t,t=0,n=this.length):"string"===typeof n&&(r=n,n=this.length),void 0!==r&&"string"!==typeof r)throw new TypeError("encoding must be a string");if("string"===typeof r&&!u.isEncoding(r))throw new TypeError("Unknown encoding: "+r);if(1===e.length){var s=e.charCodeAt(0);("utf8"===r&&s<128||"latin1"===r)&&(e=s)}}else"number"===typeof e?e&=255:"boolean"===typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;var a;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"===typeof e)for(a=t;a<n;++a)this[a]=e;else{var o=u.isBuffer(e)?e:u.from(e,r),i=o.length;if(0===i)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(a=0;a<n-t;++a)this[a+t]=o[a%i]}return this};var L=/[^+/0-9A-Za-z-_]/g;function W(e,t){var n;t=t||1/0;for(var r=e.length,s=null,a=[],o=0;o<r;++o){if((n=e.charCodeAt(o))>55295&&n<57344){if(!s){if(n>56319){(t-=3)>-1&&a.push(239,191,189);continue}if(o+1===r){(t-=3)>-1&&a.push(239,191,189);continue}s=n;continue}if(n<56320){(t-=3)>-1&&a.push(239,191,189),s=n;continue}n=65536+(s-55296<<10|n-56320)}else s&&(t-=3)>-1&&a.push(239,191,189);if(s=null,n<128){if((t-=1)<0)break;a.push(n)}else if(n<2048){if((t-=2)<0)break;a.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;a.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;a.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return a}function z(e){return r.toByteArray(function(e){if((e=(e=e.split("=")[0]).trim().replace(L,"")).length<2)return"";for(;e.length%4!==0;)e+="=";return e}(e))}function P(e,t,n,r){for(var s=0;s<r&&!(s+n>=t.length||s>=e.length);++s)t[s+n]=e[s];return s}function U(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function V(e){return e!==e}var G=function(){for(var e="0123456789abcdef",t=new Array(256),n=0;n<16;++n)for(var r=16*n,s=0;s<16;++s)t[r+s]=e[n]+e[s];return t}()},543:function(e,t){t.read=function(e,t,n,r,s){var a,o,i=8*s-r-1,u=(1<<i)-1,l=u>>1,c=-7,p=n?s-1:0,h=n?-1:1,d=e[t+p];for(p+=h,a=d&(1<<-c)-1,d>>=-c,c+=i;c>0;a=256*a+e[t+p],p+=h,c-=8);for(o=a&(1<<-c)-1,a>>=-c,c+=r;c>0;o=256*o+e[t+p],p+=h,c-=8);if(0===a)a=1-l;else{if(a===u)return o?NaN:1/0*(d?-1:1);o+=Math.pow(2,r),a-=l}return(d?-1:1)*o*Math.pow(2,a-r)},t.write=function(e,t,n,r,s,a){var o,i,u,l=8*a-s-1,c=(1<<l)-1,p=c>>1,h=23===s?Math.pow(2,-24)-Math.pow(2,-77):0,d=r?0:a-1,f=r?1:-1,m=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(i=isNaN(t)?1:0,o=c):(o=Math.floor(Math.log(t)/Math.LN2),t*(u=Math.pow(2,-o))<1&&(o--,u*=2),(t+=o+p>=1?h/u:h*Math.pow(2,1-p))*u>=2&&(o++,u/=2),o+p>=c?(i=0,o=c):o+p>=1?(i=(t*u-1)*Math.pow(2,s),o+=p):(i=t*Math.pow(2,p-1)*Math.pow(2,s),o=0));s>=8;e[n+d]=255&i,d+=f,i/=256,s-=8);for(o=o<<s|i,l+=s;l>0;e[n+d]=255&o,d+=f,o/=256,l-=8);e[n+d-f]|=128*m}}},n={};function r(e){var s=n[e];if(void 0!==s)return s.exports;var a=n[e]={exports:{}},o=!0;try{t[e](a,a.exports,r),o=!1}finally{o&&delete n[e]}return a.exports}r.ab="//";var s=r(877);e.exports=s}()},7663:function(e){!function(){var t={308:function(e){var t,n,r=e.exports={};function s(){throw new Error("setTimeout has not been defined")}function a(){throw new Error("clearTimeout has not been defined")}function o(e){if(t===setTimeout)return setTimeout(e,0);if((t===s||!t)&&setTimeout)return t=setTimeout,setTimeout(e,0);try{return t(e,0)}catch(r){try{return t.call(null,e,0)}catch(r){return t.call(this,e,0)}}}!function(){try{t="function"===typeof setTimeout?setTimeout:s}catch(e){t=s}try{n="function"===typeof clearTimeout?clearTimeout:a}catch(e){n=a}}();var i,u=[],l=!1,c=-1;function p(){l&&i&&(l=!1,i.length?u=i.concat(u):c=-1,u.length&&h())}function h(){if(!l){var e=o(p);l=!0;for(var t=u.length;t;){for(i=u,u=[];++c<t;)i&&i[c].run();c=-1,t=u.length}i=null,l=!1,function(e){if(n===clearTimeout)return clearTimeout(e);if((n===a||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(e);try{n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}(e)}}function d(e,t){this.fun=e,this.array=t}function f(){}r.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];u.push(new d(e,t)),1!==u.length||l||o(h)},d.prototype.run=function(){this.fun.apply(null,this.array)},r.title="browser",r.browser=!0,r.env={},r.argv=[],r.version="",r.versions={},r.on=f,r.addListener=f,r.once=f,r.off=f,r.removeListener=f,r.removeAllListeners=f,r.emit=f,r.prependListener=f,r.prependOnceListener=f,r.listeners=function(e){return[]},r.binding=function(e){throw new Error("process.binding is not supported")},r.cwd=function(){return"/"},r.chdir=function(e){throw new Error("process.chdir is not supported")},r.umask=function(){return 0}}},n={};function r(e){var s=n[e];if(void 0!==s)return s.exports;var a=n[e]={exports:{}},o=!0;try{t[e](a,a.exports,r),o=!1}finally{o&&delete n[e]}return a.exports}r.ab="//";var s=r(308);e.exports=s}()},6377:function(e,t,n){var r=n(4832),s=n(8652),a=n(801),o=n(2030),i=n(3618),u=n(9049),l=n(1971);l.alea=r,l.xor128=s,l.xorwow=a,l.xorshift7=o,l.xor4096=i,l.tychei=u,e.exports=l},4832:function(e,t,n){var r;!function(e,s,a){function o(e){var t=this,n=function(){var e=4022871197;return function(t){t=t.toString();for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)}}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new o(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.alea=u}(0,e=n.nmd(e),n.amdD)},9049:function(e,t,n){var r;!function(e,s,a){function o(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new o(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.tychei=u}(0,e=n.nmd(e),n.amdD)},8652:function(e,t,n){var r;!function(e,s,a){function o(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new o(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xor128=u}(0,e=n.nmd(e),n.amdD)},3618:function(e,t,n){var r;!function(e,s,a){function o(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[a]=n^e,t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,s,a,o,i=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),s=0,a=-32;a<u;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(o=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(o=o+1640531527|0,s=0==(n=i[127&a]^=r+o)?s+1:0);for(s>=128&&(i[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=i[s+34&127],n=i[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,i[s]=r^n;e.w=o,e.X=i,e.i=s}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new o(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},2030:function(e,t,n){var r;!function(e,s,a){function o(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new o(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},801:function(e,t,n){var r;!function(e,s,a){function o(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new o(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},1971:function(e,t,n){var r;!function(s,a){var o,i=(0,eval)("this"),u=256,l=a.pow(u,6),c=a.pow(2,52),p=2*c,h=255;function d(e,t,n){var r=[],h=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(s)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(u):(e=new Uint8Array(u),(i.crypto||i.msCrypto).getRandomValues(e)),b(e)}catch(r){var t=i.navigator,n=t&&t.plugins;return[+new Date,i,n,i.screen,b(s)]}}():e,3),r),d=new f(r),x=function(){for(var e=d.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=d.g(1);for(;e>=p;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|d.g(4)},x.quick=function(){return d.g(4)/4294967296},x.double=x,y(b(d.S),s),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,d),e.state=function(){return m(d,{})}),n?(a.random=e,t):e})(x,h,"global"in t?t.global:this==a,t.state)}function f(e){var t,n=e.length,r=this,s=0,a=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);s<u;)o[s]=s++;for(s=0;s<u;s++)o[s]=o[a=h&a+e[s%n]+(t=o[s])],o[a]=t;(r.g=function(e){for(var t,n=0,s=r.i,a=r.j,o=r.S;e--;)t=o[s=h&s+1],n=n*u+o[h&(o[s]=o[a=h&a+t])+(o[a]=t)];return r.i=s,r.j=a,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(g(e[n],t-1))}catch(a){}return r.length?r:"string"==s?e:e+"\0"}function y(e,t){for(var n,r=e+"",s=0;s<r.length;)t[h&s]=h&(n^=19*t[h&s])+r.charCodeAt(s++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(a.seedrandom=d,y(a.random(),s),e.exports){e.exports=d;try{o=n(5042)}catch(x){}}else void 0===(r=function(){return d}.call(t,n,t,e))||(e.exports=r)}([],Math)},943:function(e,t,n){"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}n.d(t,{Z:function(){return r}})},7568:function(e,t,n){"use strict";function r(e,t,n,r,s,a,o){try{var i=e[a](o),u=i.value}catch(l){return void n(l)}i.done?t(u):Promise.resolve(u).then(r,s)}function s(e){return function(){var t=this,n=arguments;return new Promise((function(s,a){var o=e.apply(t,n);function i(e){r(o,s,a,i,u,"next",e)}function u(e){r(o,s,a,i,u,"throw",e)}i(void 0)}))}}n.d(t,{Z:function(){return s}})},1438:function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}n.d(t,{Z:function(){return r}})},2951:function(e,t,n){"use strict";function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function s(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}n.d(t,{Z:function(){return s}})},3375:function(e,t,n){"use strict";function r(e){if("undefined"!==typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}n.d(t,{Z:function(){return r}})},9396:function(e,t,n){"use strict";function r(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}n.d(t,{Z:function(){return r}})},828:function(e,t,n){"use strict";n.d(t,{Z:function(){return a}});var r=n(3375);var s=n(1566);function a(e,t){return function(e){if(Array.isArray(e))return e}(e)||(0,r.Z)(e,t)||(0,s.Z)(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},1566:function(e,t,n){"use strict";n.d(t,{Z:function(){return s}});var r=n(943);function s(e,t){if(e){if("string"===typeof e)return(0,r.Z)(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(n):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?(0,r.Z)(e,t):void 0}}}}]);